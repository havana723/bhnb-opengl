"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[737],{9477:function(e,t,i){i.r(t),i.d(t,{ACESFilmicToneMapping:function(){return ee},AddEquation:function(){return S},AddOperation:function(){return Z},AdditiveAnimationBlendMode:function(){return tg},AdditiveBlending:function(){return _},AlphaFormat:function(){return eI},AlwaysDepth:function(){return k},AlwaysStencilFunc:function(){return tW},AmbientLight:function(){return h7},AmbientLightProbe:function(){return uf},AnimationClip:function(){return hP},AnimationLoader:function(){return hk},AnimationMixer:function(){return uY},AnimationObjectGroup:function(){return uj},AnimationUtils:function(){return hx},ArcCurve:function(){return o1},ArrayCamera:function(){return sH},ArrowHelper:function(){return cC},Audio:function(){return uA},AudioAnalyser:function(){return uI},AudioContext:function(){return uc},AudioListener:function(){return uT},AudioLoader:function(){return ud},AxesHelper:function(){return cL},BackSide:function(){return m},BasicDepthPacking:function(){return tb},BasicShadowMap:function(){return u},Bone:function(){return oy},BooleanKeyframeTrack:function(){return hw},Box2:function(){return u6},Box3:function(){return iq},Box3Helper:function(){return cS},BoxBufferGeometry:function(){return cU},BoxGeometry:function(){return rA},BoxHelper:function(){return cb},BufferAttribute:function(){return n$},BufferGeometry:function(){return rs},BufferGeometryLoader:function(){return ur},ByteType:function(){return eb},Cache:function(){return hD},Camera:function(){return rP},CameraHelper:function(){return c_},CanvasTexture:function(){return o$},CapsuleBufferGeometry:function(){return cB},CapsuleGeometry:function(){return ld},CatmullRomCurve3:function(){return o7},CineonToneMapping:function(){return Q},CircleBufferGeometry:function(){return cF},CircleGeometry:function(){return lp},ClampToEdgeWrapping:function(){return eh},Clock:function(){return u_},Color:function(){return iC},ColorKeyframeTrack:function(){return hT},ColorManagement:function(){return iM},CompressedTexture:function(){return oK},CompressedTextureLoader:function(){return hG},ConeBufferGeometry:function(){return ck},ConeGeometry:function(){return lm},CubeCamera:function(){return rD},CubeReflectionMapping:function(){return en},CubeRefractionMapping:function(){return er},CubeTexture:function(){return rN},CubeTextureLoader:function(){return hH},CubeUVReflectionMapping:function(){return eo},CubicBezierCurve:function(){return lt},CubicBezierCurve3:function(){return li},CubicInterpolant:function(){return hy},CullFaceBack:function(){return o},CullFaceFront:function(){return l},CullFaceFrontBack:function(){return h},CullFaceNone:function(){return s},Curve:function(){return oQ},CurvePath:function(){return lh},CustomBlending:function(){return b},CustomToneMapping:function(){return et},CylinderBufferGeometry:function(){return cG},CylinderGeometry:function(){return lf},Cylindrical:function(){return u4},Data3DTexture:function(){return iF},DataArrayTexture:function(){return iU},DataTexture:function(){return oM},DataTexture2DArray:function(){return cO},DataTexture3D:function(){return cz},DataTextureLoader:function(){return hW},DataUtils:function(){return cI},DecrementStencilOp:function(){return tD},DecrementWrapStencilOp:function(){return tO},DefaultLoadingManager:function(){return hO},DepthFormat:function(){return eU},DepthStencilFormat:function(){return eB},DepthTexture:function(){return sX},DirectionalLight:function(){return h6},DirectionalLightHelper:function(){return cg},DiscreteInterpolant:function(){return hb},DodecahedronBufferGeometry:function(){return cV},DodecahedronGeometry:function(){return lv},DoubleSide:function(){return g},DstAlphaFactor:function(){return N},DstColorFactor:function(){return z},DynamicCopyUsage:function(){return t$},DynamicDrawUsage:function(){return tq},DynamicReadUsage:function(){return tZ},EdgesGeometry:function(){return lb},EllipseCurve:function(){return o0},EqualDepth:function(){return H},EqualStencilFunc:function(){return tF},EquirectangularReflectionMapping:function(){return ea},EquirectangularRefractionMapping:function(){return es},Euler:function(){return ny},EventDispatcher:function(){return t2},ExtrudeBufferGeometry:function(){return cH},ExtrudeGeometry:function(){return l$},FileLoader:function(){return hF},Float16BufferAttribute:function(){return n6},Float32BufferAttribute:function(){return n7},Float64BufferAttribute:function(){return n8},FloatType:function(){return eE},Fog:function(){return s0},FogExp2:function(){return sQ},FramebufferTexture:function(){return oJ},FrontSide:function(){return f},Frustum:function(){return rV},GLBufferAttribute:function(){return uQ},GLSL1:function(){return t0},GLSL3:function(){return t1},GreaterDepth:function(){return j},GreaterEqualDepth:function(){return W},GreaterEqualStencilFunc:function(){return tH},GreaterStencilFunc:function(){return tG},GridHelper:function(){return cc},Group:function(){return sW},HalfFloatType:function(){return eC},HemisphereLight:function(){return hX},HemisphereLightHelper:function(){return cu},HemisphereLightProbe:function(){return up},IcosahedronBufferGeometry:function(){return cW},IcosahedronGeometry:function(){return l0},ImageBitmapLoader:function(){return uh},ImageLoader:function(){return hV},ImageUtils:function(){return iR},ImmediateRenderObject:function(){return cD},IncrementStencilOp:function(){return tI},IncrementWrapStencilOp:function(){return tN},InstancedBufferAttribute:function(){return oT},InstancedBufferGeometry:function(){return un},InstancedInterleavedBuffer:function(){return u$},InstancedMesh:function(){return oR},Int16BufferAttribute:function(){return n3},Int32BufferAttribute:function(){return n4},Int8BufferAttribute:function(){return nQ},IntType:function(){return eT},InterleavedBuffer:function(){return s3},InterleavedBufferAttribute:function(){return s4},Interpolant:function(){return h_},InterpolateDiscrete:function(){return th},InterpolateLinear:function(){return tu},InterpolateSmooth:function(){return tc},InvertStencilOp:function(){return tz},KeepStencilOp:function(){return tR},KeyframeTrack:function(){return hS},LOD:function(){return op},LatheBufferGeometry:function(){return cj},LatheGeometry:function(){return lc},Layers:function(){return nM},LessDepth:function(){return G},LessEqualDepth:function(){return V},LessEqualStencilFunc:function(){return tk},LessStencilFunc:function(){return tB},Light:function(){return hq},LightProbe:function(){return ue},Line:function(){return oU},Line3:function(){return u9},LineBasicMaterial:function(){return oP},LineCurve:function(){return ln},LineCurve3:function(){return lr},LineDashedMaterial:function(){return hc},LineLoop:function(){return oG},LineSegments:function(){return ok},LinearEncoding:function(){return ty},LinearFilter:function(){return eg},LinearInterpolant:function(){return hM},LinearMipMapLinearFilter:function(){return ey},LinearMipMapNearestFilter:function(){return ex},LinearMipmapLinearFilter:function(){return e_},LinearMipmapNearestFilter:function(){return ev},LinearSRGBColorSpace:function(){return tC},LinearToneMapping:function(){return K},Loader:function(){return hz},LoaderUtils:function(){return ui},LoadingManager:function(){return hN},LoopOnce:function(){return ts},LoopPingPong:function(){return tl},LoopRepeat:function(){return to},LuminanceAlphaFormat:function(){return ez},LuminanceFormat:function(){return eO},MOUSE:function(){return r},Material:function(){return nY},MaterialLoader:function(){return ut},MathUtils:function(){return iu},Matrix3:function(){return id},Matrix4:function(){return nu},MaxEquation:function(){return E},Mesh:function(){return rw},MeshBasicMaterial:function(){return nZ},MeshDepthMaterial:function(){return sU},MeshDistanceMaterial:function(){return sB},MeshLambertMaterial:function(){return hh},MeshMatcapMaterial:function(){return hu},MeshNormalMaterial:function(){return hl},MeshPhongMaterial:function(){return hs},MeshPhysicalMaterial:function(){return ha},MeshStandardMaterial:function(){return hr},MeshToonMaterial:function(){return ho},MinEquation:function(){return A},MirroredRepeatWrapping:function(){return eu},MixOperation:function(){return Y},MultiplyBlending:function(){return M},MultiplyOperation:function(){return X},NearestFilter:function(){return ec},NearestMipMapLinearFilter:function(){return em},NearestMipMapNearestFilter:function(){return ep},NearestMipmapLinearFilter:function(){return ef},NearestMipmapNearestFilter:function(){return ed},NeverDepth:function(){return F},NeverStencilFunc:function(){return tU},NoBlending:function(){return v},NoColorSpace:function(){return tA},NoToneMapping:function(){return J},NormalAnimationBlendMode:function(){return tm},NormalBlending:function(){return x},NotEqualDepth:function(){return q},NotEqualStencilFunc:function(){return tV},NumberKeyframeTrack:function(){return hA},Object3D:function(){return nO},ObjectLoader:function(){return ua},ObjectSpaceNormalMap:function(){return tT},OctahedronBufferGeometry:function(){return cq},OctahedronGeometry:function(){return l1},OneFactor:function(){return L},OneMinusDstAlphaFactor:function(){return O},OneMinusDstColorFactor:function(){return U},OneMinusSrcAlphaFactor:function(){return D},OneMinusSrcColorFactor:function(){return P},OrthographicCamera:function(){return r1},PCFShadowMap:function(){return c},PCFSoftShadowMap:function(){return d},PMREMGenerator:function(){return r9},Path:function(){return lu},PerspectiveCamera:function(){return rI},Plane:function(){return rF},PlaneBufferGeometry:function(){return cX},PlaneGeometry:function(){return rj},PlaneHelper:function(){return cw},PointLight:function(){return h4},PointLightHelper:function(){return cs},Points:function(){return oX},PointsMaterial:function(){return oV},PolarGridHelper:function(){return cd},PolyhedronBufferGeometry:function(){return cY},PolyhedronGeometry:function(){return lg},PositionalAudio:function(){return uP},PropertyBinding:function(){return uW},PropertyMixer:function(){return uD},QuadraticBezierCurve:function(){return la},QuadraticBezierCurve3:function(){return ls},Quaternion:function(){return iV},QuaternionKeyframeTrack:function(){return hC},QuaternionLinearInterpolant:function(){return hE},REVISION:function(){return n},RGBADepthPacking:function(){return tS},RGBAFormat:function(){return eN},RGBAIntegerFormat:function(){return eH},RGBA_ASTC_10x10_Format:function(){return ti},RGBA_ASTC_10x5_Format:function(){return e9},RGBA_ASTC_10x6_Format:function(){return te},RGBA_ASTC_10x8_Format:function(){return tt},RGBA_ASTC_12x10_Format:function(){return tn},RGBA_ASTC_12x12_Format:function(){return tr},RGBA_ASTC_4x4_Format:function(){return e1},RGBA_ASTC_5x4_Format:function(){return e3},RGBA_ASTC_5x5_Format:function(){return e2},RGBA_ASTC_6x5_Format:function(){return e4},RGBA_ASTC_6x6_Format:function(){return e5},RGBA_ASTC_8x5_Format:function(){return e6},RGBA_ASTC_8x6_Format:function(){return e7},RGBA_ASTC_8x8_Format:function(){return e8},RGBA_BPTC_Format:function(){return ta},RGBA_ETC2_EAC_Format:function(){return e0},RGBA_PVRTC_2BPPV1_Format:function(){return eK},RGBA_PVRTC_4BPPV1_Format:function(){return eJ},RGBA_S3TC_DXT1_Format:function(){return ej},RGBA_S3TC_DXT3_Format:function(){return eq},RGBA_S3TC_DXT5_Format:function(){return eX},RGBFormat:function(){return eD},RGB_ETC1_Format:function(){return e$},RGB_ETC2_Format:function(){return eQ},RGB_PVRTC_2BPPV1_Format:function(){return eZ},RGB_PVRTC_4BPPV1_Format:function(){return eY},RGB_S3TC_DXT1_Format:function(){return eW},RGFormat:function(){return eG},RGIntegerFormat:function(){return eV},RawShaderMaterial:function(){return hn},Ray:function(){return nh},Raycaster:function(){return u0},RectAreaLight:function(){return h8},RedFormat:function(){return eF},RedIntegerFormat:function(){return ek},ReinhardToneMapping:function(){return $},RepeatWrapping:function(){return el},ReplaceStencilOp:function(){return tP},ReverseSubtractEquation:function(){return T},RingBufferGeometry:function(){return cZ},RingGeometry:function(){return l3},SRGBColorSpace:function(){return tE},Scene:function(){return s1},ShaderChunk:function(){return rq},ShaderLib:function(){return rY},ShaderMaterial:function(){return rR},ShadowMaterial:function(){return hi},Shape:function(){return lS},ShapeBufferGeometry:function(){return cJ},ShapeGeometry:function(){return l2},ShapePath:function(){return cR},ShapeUtils:function(){return lZ},ShortType:function(){return eS},Skeleton:function(){return ow},SkeletonHelper:function(){return ca},SkinnedMesh:function(){return o_},Source:function(){return iP},Sphere:function(){return nt},SphereBufferGeometry:function(){return cK},SphereGeometry:function(){return l4},Spherical:function(){return u2},SphericalHarmonics3:function(){return h9},SplineCurve:function(){return lo},SpotLight:function(){return hQ},SpotLightHelper:function(){return ct},Sprite:function(){return oh},SpriteMaterial:function(){return s5},SrcAlphaFactor:function(){return I},SrcAlphaSaturateFactor:function(){return B},SrcColorFactor:function(){return R},StaticCopyUsage:function(){return tK},StaticDrawUsage:function(){return tj},StaticReadUsage:function(){return tY},StereoCamera:function(){return ux},StreamCopyUsage:function(){return tQ},StreamDrawUsage:function(){return tX},StreamReadUsage:function(){return tJ},StringKeyframeTrack:function(){return hL},SubtractEquation:function(){return w},SubtractiveBlending:function(){return y},TOUCH:function(){return a},TangentSpaceNormalMap:function(){return tw},TetrahedronBufferGeometry:function(){return c$},TetrahedronGeometry:function(){return l5},Texture:function(){return iN},TextureLoader:function(){return hj},TorusBufferGeometry:function(){return cQ},TorusGeometry:function(){return l6},TorusKnotBufferGeometry:function(){return c0},TorusKnotGeometry:function(){return l7},Triangle:function(){return nq},TriangleFanDrawMode:function(){return t_},TriangleStripDrawMode:function(){return tx},TrianglesDrawMode:function(){return tv},TubeBufferGeometry:function(){return c1},TubeGeometry:function(){return l8},UVMapping:function(){return ei},Uint16BufferAttribute:function(){return n2},Uint32BufferAttribute:function(){return n5},Uint8BufferAttribute:function(){return n0},Uint8ClampedBufferAttribute:function(){return n1},Uniform:function(){return uZ},UniformsGroup:function(){return uK},UniformsLib:function(){return rX},UniformsUtils:function(){return rL},UnsignedByteType:function(){return eM},UnsignedInt248Type:function(){return eP},UnsignedIntType:function(){return eA},UnsignedShort4444Type:function(){return eL},UnsignedShort5551Type:function(){return eR},UnsignedShortType:function(){return ew},VSMShadowMap:function(){return p},Vector2:function(){return ic},Vector3:function(){return iH},Vector4:function(){return iO},VectorKeyframeTrack:function(){return hR},VideoTexture:function(){return oZ},WebGL1Renderer:function(){return s$},WebGL3DRenderTarget:function(){return ik},WebGLArrayRenderTarget:function(){return iB},WebGLCubeRenderTarget:function(){return rO},WebGLMultipleRenderTargets:function(){return iG},WebGLMultisampleRenderTarget:function(){return cN},WebGLRenderTarget:function(){return iz},WebGLRenderer:function(){return sK},WebGLUtils:function(){return sV},WireframeGeometry:function(){return l9},WrapAroundEnding:function(){return tf},ZeroCurvatureEnding:function(){return td},ZeroFactor:function(){return C},ZeroSlopeEnding:function(){return tp},ZeroStencilOp:function(){return tL},_SRGBAFormat:function(){return t3},sRGBEncoding:function(){return tM}});/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */ let n="144",r={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},a={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},s=0,o=1,l=2,h=3,u=0,c=1,d=2,p=3,f=0,m=1,g=2,v=0,x=1,_=2,y=3,M=4,b=5,S=100,w=101,T=102,A=103,E=104,C=200,L=201,R=202,P=203,I=204,D=205,N=206,O=207,z=208,U=209,B=210,F=0,k=1,G=2,V=3,H=4,W=5,j=6,q=7,X=0,Y=1,Z=2,J=0,K=1,$=2,Q=3,ee=4,et=5,ei=300,en=301,er=302,ea=303,es=304,eo=306,el=1e3,eh=1001,eu=1002,ec=1003,ed=1004,ep=1004,ef=1005,em=1005,eg=1006,ev=1007,ex=1007,e_=1008,ey=1008,eM=1009,eb=1010,eS=1011,ew=1012,eT=1013,eA=1014,eE=1015,eC=1016,eL=1017,eR=1018,eP=1020,eI=1021,eD=1022,eN=1023,eO=1024,ez=1025,eU=1026,eB=1027,eF=1028,ek=1029,eG=1030,eV=1031,eH=1033,eW=33776,ej=33777,eq=33778,eX=33779,eY=35840,eZ=35841,eJ=35842,eK=35843,e$=36196,eQ=37492,e0=37496,e1=37808,e3=37809,e2=37810,e4=37811,e5=37812,e6=37813,e7=37814,e8=37815,e9=37816,te=37817,tt=37818,ti=37819,tn=37820,tr=37821,ta=36492,ts=2200,to=2201,tl=2202,th=2300,tu=2301,tc=2302,td=2400,tp=2401,tf=2402,tm=2500,tg=2501,tv=0,tx=1,t_=2,ty=3e3,tM=3001,tb=3200,tS=3201,tw=0,tT=1,tA="",tE="srgb",tC="srgb-linear",tL=0,tR=7680,tP=7681,tI=7682,tD=7683,tN=34055,tO=34056,tz=5386,tU=512,tB=513,tF=514,tk=515,tG=516,tV=517,tH=518,tW=519,tj=35044,tq=35048,tX=35040,tY=35045,tZ=35049,tJ=35041,tK=35046,t$=35050,tQ=35042,t0="100",t1="300 es",t3=1035;class t2{addEventListener(e,t){void 0===this._listeners&&(this._listeners={});let i=this._listeners;void 0===i[e]&&(i[e]=[]),-1===i[e].indexOf(t)&&i[e].push(t)}hasEventListener(e,t){if(void 0===this._listeners)return!1;let i=this._listeners;return void 0!==i[e]&&-1!==i[e].indexOf(t)}removeEventListener(e,t){if(void 0===this._listeners)return;let i=this._listeners,n=i[e];if(void 0!==n){let r=n.indexOf(t);-1!==r&&n.splice(r,1)}}dispatchEvent(e){if(void 0===this._listeners)return;let t=this._listeners,i=t[e.type];if(void 0!==i){e.target=this;let n=i.slice(0);for(let r=0,a=n.length;r<a;r++)n[r].call(this,e);e.target=null}}}let t4=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],t5=1234567,t6=Math.PI/180,t7=180/Math.PI;function t8(){let e=4294967295*Math.random()|0,t=4294967295*Math.random()|0,i=4294967295*Math.random()|0,n=4294967295*Math.random()|0,r=t4[255&e]+t4[e>>8&255]+t4[e>>16&255]+t4[e>>24&255]+"-"+t4[255&t]+t4[t>>8&255]+"-"+t4[t>>16&15|64]+t4[t>>24&255]+"-"+t4[63&i|128]+t4[i>>8&255]+"-"+t4[i>>16&255]+t4[i>>24&255]+t4[255&n]+t4[n>>8&255]+t4[n>>16&255]+t4[n>>24&255];return r.toLowerCase()}function t9(e,t,i){return Math.max(t,Math.min(i,e))}function ie(e,t){return(e%t+t)%t}function it(e,t,i){return(1-i)*e+i*t}function ii(e){return e*t6}function ir(e){return e*t7}function ia(e){return(e&e-1)==0&&0!==e}function is(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.LN2))}function io(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))}function il(e,t){switch(t.constructor){case Float32Array:return e;case Uint16Array:return e/65535;case Uint8Array:return e/255;case Int16Array:return Math.max(e/32767,-1);case Int8Array:return Math.max(e/127,-1);default:throw Error("Invalid component type.")}}function ih(e,t){switch(t.constructor){case Float32Array:return e;case Uint16Array:return Math.round(65535*e);case Uint8Array:return Math.round(255*e);case Int16Array:return Math.round(32767*e);case Int8Array:return Math.round(127*e);default:throw Error("Invalid component type.")}}var iu=Object.freeze({__proto__:null,DEG2RAD:t6,RAD2DEG:t7,generateUUID:t8,clamp:t9,euclideanModulo:ie,mapLinear:function(e,t,i,n,r){return n+(e-t)*(r-n)/(i-t)},inverseLerp:function(e,t,i){return e!==t?(i-e)/(t-e):0},lerp:it,damp:function(e,t,i,n){return it(e,t,1-Math.exp(-i*n))},pingpong:function(e,t=1){return t-Math.abs(ie(e,2*t)-t)},smoothstep:function(e,t,i){return e<=t?0:e>=i?1:(e=(e-t)/(i-t))*e*(3-2*e)},smootherstep:function(e,t,i){return e<=t?0:e>=i?1:(e=(e-t)/(i-t))*e*e*(e*(6*e-15)+10)},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},seededRandom:function(e){void 0!==e&&(t5=e);let t=t5+=1831565813;return t=Math.imul(t^t>>>15,1|t),(((t^=t+Math.imul(t^t>>>7,61|t))^t>>>14)>>>0)/4294967296},degToRad:ii,radToDeg:ir,isPowerOfTwo:ia,ceilPowerOfTwo:is,floorPowerOfTwo:io,setQuaternionFromProperEuler:function(e,t,i,n,r){let a=Math.cos,s=Math.sin,o=a(i/2),l=s(i/2),h=a((t+n)/2),u=s((t+n)/2),c=a((t-n)/2),d=s((t-n)/2),p=a((n-t)/2),f=s((n-t)/2);switch(r){case"XYX":e.set(o*u,l*c,l*d,o*h);break;case"YZY":e.set(l*d,o*u,l*c,o*h);break;case"ZXZ":e.set(l*c,l*d,o*u,o*h);break;case"XZX":e.set(o*u,l*f,l*p,o*h);break;case"YXY":e.set(l*p,o*u,l*f,o*h);break;case"ZYZ":e.set(l*f,l*p,o*u,o*h);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}},normalize:ih,denormalize:il});class ic{constructor(e=0,t=0){ic.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){let t=this.x,i=this.y,n=e.elements;return this.x=n[0]*t+n[3]*i+n[6],this.y=n[1]*t+n[4]*i+n[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){let i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){let e=Math.atan2(-this.y,-this.x)+Math.PI;return e}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){let t=this.x-e.x,i=this.y-e.y;return t*t+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){let i=Math.cos(t),n=Math.sin(t),r=this.x-e.x,a=this.y-e.y;return this.x=r*i-a*n+e.x,this.y=r*n+a*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class id{constructor(){id.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}set(e,t,i,n,r,a,s,o,l){let h=this.elements;return h[0]=e,h[1]=n,h[2]=s,h[3]=t,h[4]=r,h[5]=o,h[6]=i,h[7]=a,h[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){let t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],this}extractBasis(e,t,i){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){let t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){let i=e.elements,n=t.elements,r=this.elements,a=i[0],s=i[3],o=i[6],l=i[1],h=i[4],u=i[7],c=i[2],d=i[5],p=i[8],f=n[0],m=n[3],g=n[6],v=n[1],x=n[4],_=n[7],y=n[2],M=n[5],b=n[8];return r[0]=a*f+s*v+o*y,r[3]=a*m+s*x+o*M,r[6]=a*g+s*_+o*b,r[1]=l*f+h*v+u*y,r[4]=l*m+h*x+u*M,r[7]=l*g+h*_+u*b,r[2]=c*f+d*v+p*y,r[5]=c*m+d*x+p*M,r[8]=c*g+d*_+p*b,this}multiplyScalar(e){let t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){let e=this.elements,t=e[0],i=e[1],n=e[2],r=e[3],a=e[4],s=e[5],o=e[6],l=e[7],h=e[8];return t*a*h-t*s*l-i*r*h+i*s*o+n*r*l-n*a*o}invert(){let e=this.elements,t=e[0],i=e[1],n=e[2],r=e[3],a=e[4],s=e[5],o=e[6],l=e[7],h=e[8],u=h*a-s*l,c=s*o-h*r,d=l*r-a*o,p=t*u+i*c+n*d;if(0===p)return this.set(0,0,0,0,0,0,0,0,0);let f=1/p;return e[0]=u*f,e[1]=(n*l-h*i)*f,e[2]=(s*i-n*a)*f,e[3]=c*f,e[4]=(h*t-n*o)*f,e[5]=(n*r-s*t)*f,e[6]=d*f,e[7]=(i*o-l*t)*f,e[8]=(a*t-i*r)*f,this}transpose(){let e,t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){let t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,i,n,r,a,s){let o=Math.cos(r),l=Math.sin(r);return this.set(i*o,i*l,-i*(o*a+l*s)+a+e,-n*l,n*o,-n*(-l*a+o*s)+s+t,0,0,1),this}scale(e,t){let i=this.elements;return i[0]*=e,i[3]*=e,i[6]*=e,i[1]*=t,i[4]*=t,i[7]*=t,this}rotate(e){let t=Math.cos(e),i=Math.sin(e),n=this.elements,r=n[0],a=n[3],s=n[6],o=n[1],l=n[4],h=n[7];return n[0]=t*r+i*o,n[3]=t*a+i*l,n[6]=t*s+i*h,n[1]=-i*r+t*o,n[4]=-i*a+t*l,n[7]=-i*s+t*h,this}translate(e,t){let i=this.elements;return i[0]+=e*i[2],i[3]+=e*i[5],i[6]+=e*i[8],i[1]+=t*i[2],i[4]+=t*i[5],i[7]+=t*i[8],this}equals(e){let t=this.elements,i=e.elements;for(let n=0;n<9;n++)if(t[n]!==i[n])return!1;return!0}fromArray(e,t=0){for(let i=0;i<9;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){let i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e}clone(){return new this.constructor().fromArray(this.elements)}}function ip(e){for(let t=e.length-1;t>=0;--t)if(e[t]>=65535)return!0;return!1}let im={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function ig(e,t){return new im[e](t)}function iv(e){return document.createElementNS("http://www.w3.org/1999/xhtml",e)}function ix(e){return e<.04045?.0773993808*e:Math.pow(.9478672986*e+.0521327014,2.4)}function i_(e){return e<.0031308?12.92*e:1.055*Math.pow(e,.41666)-.055}let iy={[tE]:{[tC]:ix},[tC]:{[tE]:i_}},iM={legacyMode:!0,get workingColorSpace(){return tC},set workingColorSpace(colorSpace){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(e,t,i){if(this.legacyMode||t===i||!t||!i)return e;if(iy[t]&&void 0!==iy[t][i]){let n=iy[t][i];return e.r=n(e.r),e.g=n(e.g),e.b=n(e.b),e}throw Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(e,t){return this.convert(e,this.workingColorSpace,t)},toWorkingColorSpace:function(e,t){return this.convert(e,t,this.workingColorSpace)}},ib={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},iS={r:0,g:0,b:0},iw={h:0,s:0,l:0},iT={h:0,s:0,l:0};function iA(e,t,i){return(i<0&&(i+=1),i>1&&(i-=1),i<1/6)?e+(t-e)*6*i:i<.5?t:i<2/3?e+(t-e)*6*(2/3-i):e}function iE(e,t){return t.r=e.r,t.g=e.g,t.b=e.b,t}class iC{constructor(e,t,i){if(this.isColor=!0,this.r=1,this.g=1,this.b=1,void 0===t&&void 0===i)return this.set(e);return this.setRGB(e,t,i)}set(e){return e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=tE){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,iM.toWorkingColorSpace(this,t),this}setRGB(e,t,i,n=tC){return this.r=e,this.g=t,this.b=i,iM.toWorkingColorSpace(this,n),this}setHSL(e,t,i,n=tC){if(e=ie(e,1),t=t9(t,0,1),i=t9(i,0,1),0===t)this.r=this.g=this.b=i;else{let r=i<=.5?i*(1+t):i+t-i*t,a=2*i-r;this.r=iA(a,r,e+1/3),this.g=iA(a,r,e),this.b=iA(a,r,e-1/3)}return iM.toWorkingColorSpace(this,n),this}setStyle(e,t=tE){function i(t){void 0!==t&&1>parseFloat(t)&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let n;if(n=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let r,a=n[1],s=n[2];switch(a){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s))return this.r=Math.min(255,parseInt(r[1],10))/255,this.g=Math.min(255,parseInt(r[2],10))/255,this.b=Math.min(255,parseInt(r[3],10))/255,iM.toWorkingColorSpace(this,t),i(r[4]),this;if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s))return this.r=Math.min(100,parseInt(r[1],10))/100,this.g=Math.min(100,parseInt(r[2],10))/100,this.b=Math.min(100,parseInt(r[3],10))/100,iM.toWorkingColorSpace(this,t),i(r[4]),this;break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s)){let o=parseFloat(r[1])/360,l=parseFloat(r[2])/100,h=parseFloat(r[3])/100;return i(r[4]),this.setHSL(o,l,h,t)}}}else if(n=/^\#([A-Fa-f\d]+)$/.exec(e)){let u=n[1],c=u.length;if(3===c)return this.r=parseInt(u.charAt(0)+u.charAt(0),16)/255,this.g=parseInt(u.charAt(1)+u.charAt(1),16)/255,this.b=parseInt(u.charAt(2)+u.charAt(2),16)/255,iM.toWorkingColorSpace(this,t),this;if(6===c)return this.r=parseInt(u.charAt(0)+u.charAt(1),16)/255,this.g=parseInt(u.charAt(2)+u.charAt(3),16)/255,this.b=parseInt(u.charAt(4)+u.charAt(5),16)/255,iM.toWorkingColorSpace(this,t),this}return e&&e.length>0?this.setColorName(e,t):this}setColorName(e,t=tE){let i=ib[e.toLowerCase()];return void 0!==i?this.setHex(i,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=ix(e.r),this.g=ix(e.g),this.b=ix(e.b),this}copyLinearToSRGB(e){return this.r=i_(e.r),this.g=i_(e.g),this.b=i_(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=tE){return iM.fromWorkingColorSpace(iE(this,iS),e),t9(255*iS.r,0,255)<<16^t9(255*iS.g,0,255)<<8^t9(255*iS.b,0,255)<<0}getHexString(e=tE){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=tC){iM.fromWorkingColorSpace(iE(this,iS),t);let i=iS.r,n=iS.g,r=iS.b,a=Math.max(i,n,r),s=Math.min(i,n,r),o,l,h=(s+a)/2;if(s===a)o=0,l=0;else{let u=a-s;switch(l=h<=.5?u/(a+s):u/(2-a-s),a){case i:o=(n-r)/u+(n<r?6:0);break;case n:o=(r-i)/u+2;break;case r:o=(i-n)/u+4}o/=6}return e.h=o,e.s=l,e.l=h,e}getRGB(e,t=tC){return iM.fromWorkingColorSpace(iE(this,iS),t),e.r=iS.r,e.g=iS.g,e.b=iS.b,e}getStyle(e=tE){return(iM.fromWorkingColorSpace(iE(this,iS),e),e!==tE)?`color(${e} ${iS.r} ${iS.g} ${iS.b})`:`rgb(${255*iS.r|0},${255*iS.g|0},${255*iS.b|0})`}offsetHSL(e,t,i){return this.getHSL(iw),iw.h+=e,iw.s+=t,iw.l+=i,this.setHSL(iw.h,iw.s,iw.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,i){return this.r=e.r+(t.r-e.r)*i,this.g=e.g+(t.g-e.g)*i,this.b=e.b+(t.b-e.b)*i,this}lerpHSL(e,t){this.getHSL(iw),e.getHSL(iT);let i=it(iw.h,iT.h,t),n=it(iw.s,iT.s,t),r=it(iw.l,iT.l,t);return this.setHSL(i,n,r),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}iC.NAMES=ib;let iL;class iR{static getDataURL(e){if(/^data:/i.test(e.src)||"undefined"==typeof HTMLCanvasElement)return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{void 0===iL&&(iL=iv("canvas")),iL.width=e.width,iL.height=e.height;let i=iL.getContext("2d");e instanceof ImageData?i.putImageData(e,0,0):i.drawImage(e,0,0,e.width,e.height),t=iL}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){let t=iv("canvas");t.width=e.width,t.height=e.height;let i=t.getContext("2d");i.drawImage(e,0,0,e.width,e.height);let n=i.getImageData(0,0,e.width,e.height),r=n.data;for(let a=0;a<r.length;a++)r[a]=255*ix(r[a]/255);return i.putImageData(n,0,0),t}if(!e.data)return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e;{let s=e.data.slice(0);for(let o=0;o<s.length;o++)s instanceof Uint8Array||s instanceof Uint8ClampedArray?s[o]=Math.floor(255*ix(s[o]/255)):s[o]=ix(s[o]);return{data:s,width:e.width,height:e.height}}}}class iP{constructor(e=null){this.isSource=!0,this.uuid=t8(),this.data=e,this.version=0}set needsUpdate(e){!0===e&&this.version++}toJSON(e){let t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.images[this.uuid])return e.images[this.uuid];let i={uuid:this.uuid,url:""},n=this.data;if(null!==n){let r;if(Array.isArray(n)){r=[];for(let a=0,s=n.length;a<s;a++)n[a].isDataTexture?r.push(iI(n[a].image)):r.push(iI(n[a]))}else r=iI(n);i.url=r}return t||(e.images[this.uuid]=i),i}}function iI(e){return"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap?iR.getDataURL(e):e.data?{data:Array.from(e.data),width:e.width,height:e.height,type:e.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let iD=0;class iN extends t2{constructor(e=iN.DEFAULT_IMAGE,t=iN.DEFAULT_MAPPING,i=eh,n=eh,r=eg,a=e_,s=eN,o=eM,l=1,h=ty){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:iD++}),this.uuid=t8(),this.name="",this.source=new iP(e),this.mipmaps=[],this.mapping=t,this.wrapS=i,this.wrapT=n,this.magFilter=r,this.minFilter=a,this.anisotropy=l,this.format=s,this.internalFormat=null,this.type=o,this.offset=new ic(0,0),this.repeat=new ic(1,1),this.center=new ic(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new id,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=h,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){let t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];let i={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return"{}"!==JSON.stringify(this.userData)&&(i.userData=this.userData),t||(e.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==ei)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case el:e.x=e.x-Math.floor(e.x);break;case eh:e.x=e.x<0?0:1;break;case eu:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||e.y>1)switch(this.wrapT){case el:e.y=e.y-Math.floor(e.y);break;case eh:e.y=e.y<0?0:1;break;case eu:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){!0===e&&(this.version++,this.source.needsUpdate=!0)}}iN.DEFAULT_IMAGE=null,iN.DEFAULT_MAPPING=ei;class iO{constructor(e=0,t=0,i=0,n=1){iO.prototype.isVector4=!0,this.x=e,this.y=t,this.z=i,this.w=n}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,i,n){return this.x=e,this.y=t,this.z=i,this.w=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){let t=this.x,i=this.y,n=this.z,r=this.w,a=e.elements;return this.x=a[0]*t+a[4]*i+a[8]*n+a[12]*r,this.y=a[1]*t+a[5]*i+a[9]*n+a[13]*r,this.z=a[2]*t+a[6]*i+a[10]*n+a[14]*r,this.w=a[3]*t+a[7]*i+a[11]*n+a[15]*r,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);let t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,i,n,r,a=e.elements,s=a[0],o=a[4],l=a[8],h=a[1],u=a[5],c=a[9],d=a[2],p=a[6],f=a[10];if(.01>Math.abs(o-h)&&.01>Math.abs(l-d)&&.01>Math.abs(c-p)){if(.1>Math.abs(o+h)&&.1>Math.abs(l+d)&&.1>Math.abs(c+p)&&.1>Math.abs(s+u+f-3))return this.set(1,0,0,0),this;t=Math.PI;let m=(s+1)/2,g=(u+1)/2,v=(f+1)/2,x=(o+h)/4,_=(l+d)/4,y=(c+p)/4;return m>g&&m>v?m<.01?(i=0,n=.707106781,r=.707106781):(n=x/(i=Math.sqrt(m)),r=_/i):g>v?g<.01?(i=.707106781,n=0,r=.707106781):(i=x/(n=Math.sqrt(g)),r=y/n):v<.01?(i=.707106781,n=.707106781,r=0):(i=_/(r=Math.sqrt(v)),n=y/r),this.set(i,n,r,t),this}let M=Math.sqrt((p-c)*(p-c)+(l-d)*(l-d)+(h-o)*(h-o));return .001>Math.abs(M)&&(M=1),this.x=(p-c)/M,this.y=(l-d)/M,this.z=(h-o)/M,this.w=Math.acos((s+u+f-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){let i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this.w=e.w+(t.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class iz extends t2{constructor(e,t,i={}){super(),this.isWebGLRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new iO(0,0,e,t),this.scissorTest=!1,this.viewport=new iO(0,0,e,t),this.texture=new iN({width:e,height:t,depth:1},i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=void 0!==i.generateMipmaps&&i.generateMipmaps,this.texture.internalFormat=void 0!==i.internalFormat?i.internalFormat:null,this.texture.minFilter=void 0!==i.minFilter?i.minFilter:eg,this.depthBuffer=void 0===i.depthBuffer||i.depthBuffer,this.stencilBuffer=void 0!==i.stencilBuffer&&i.stencilBuffer,this.depthTexture=void 0!==i.depthTexture?i.depthTexture:null,this.samples=void 0!==i.samples?i.samples:0}setSize(e,t,i=1){(this.width!==e||this.height!==t||this.depth!==i)&&(this.width=e,this.height=t,this.depth=i,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=i,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;let t=Object.assign({},e.texture.image);return this.texture.source=new iP(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,null!==e.depthTexture&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class iU extends iN{constructor(e=null,t=1,i=1,n=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:i,depth:n},this.magFilter=ec,this.minFilter=ec,this.wrapR=eh,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class iB extends iz{constructor(e,t,i){super(e,t),this.isWebGLArrayRenderTarget=!0,this.depth=i,this.texture=new iU(null,e,t,i),this.texture.isRenderTargetTexture=!0}}class iF extends iN{constructor(e=null,t=1,i=1,n=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:i,depth:n},this.magFilter=ec,this.minFilter=ec,this.wrapR=eh,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class ik extends iz{constructor(e,t,i){super(e,t),this.isWebGL3DRenderTarget=!0,this.depth=i,this.texture=new iF(null,e,t,i),this.texture.isRenderTargetTexture=!0}}class iG extends iz{constructor(e,t,i,n={}){super(e,t,n),this.isWebGLMultipleRenderTargets=!0;let r=this.texture;this.texture=[];for(let a=0;a<i;a++)this.texture[a]=r.clone(),this.texture[a].isRenderTargetTexture=!0}setSize(e,t,i=1){if(this.width!==e||this.height!==t||this.depth!==i){this.width=e,this.height=t,this.depth=i;for(let n=0,r=this.texture.length;n<r;n++)this.texture[n].image.width=e,this.texture[n].image.height=t,this.texture[n].image.depth=i;this.dispose()}return this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t),this}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,null!==e.depthTexture&&(this.depthTexture=e.depthTexture.clone()),this.texture.length=0;for(let t=0,i=e.texture.length;t<i;t++)this.texture[t]=e.texture[t].clone(),this.texture[t].isRenderTargetTexture=!0;return this}}class iV{constructor(e=0,t=0,i=0,n=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=i,this._w=n}static slerpFlat(e,t,i,n,r,a,s){let o=i[n+0],l=i[n+1],h=i[n+2],u=i[n+3],c=r[a+0],d=r[a+1],p=r[a+2],f=r[a+3];if(0===s){e[t+0]=o,e[t+1]=l,e[t+2]=h,e[t+3]=u;return}if(1===s){e[t+0]=c,e[t+1]=d,e[t+2]=p,e[t+3]=f;return}if(u!==f||o!==c||l!==d||h!==p){let m=1-s,g=o*c+l*d+h*p+u*f,v=g>=0?1:-1,x=1-g*g;if(x>Number.EPSILON){let _=Math.sqrt(x),y=Math.atan2(_,g*v);m=Math.sin(m*y)/_,s=Math.sin(s*y)/_}let M=s*v;if(o=o*m+c*M,l=l*m+d*M,h=h*m+p*M,u=u*m+f*M,m===1-s){let b=1/Math.sqrt(o*o+l*l+h*h+u*u);o*=b,l*=b,h*=b,u*=b}}e[t]=o,e[t+1]=l,e[t+2]=h,e[t+3]=u}static multiplyQuaternionsFlat(e,t,i,n,r,a){let s=i[n],o=i[n+1],l=i[n+2],h=i[n+3],u=r[a],c=r[a+1],d=r[a+2],p=r[a+3];return e[t]=s*p+h*u+o*d-l*c,e[t+1]=o*p+h*c+l*u-s*d,e[t+2]=l*p+h*d+s*c-o*u,e[t+3]=h*p-s*u-o*c-l*d,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,i,n){return this._x=e,this._y=t,this._z=i,this._w=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){let i=e._x,n=e._y,r=e._z,a=e._order,s=Math.cos,o=Math.sin,l=s(i/2),h=s(n/2),u=s(r/2),c=o(i/2),d=o(n/2),p=o(r/2);switch(a){case"XYZ":this._x=c*h*u+l*d*p,this._y=l*d*u-c*h*p,this._z=l*h*p+c*d*u,this._w=l*h*u-c*d*p;break;case"YXZ":this._x=c*h*u+l*d*p,this._y=l*d*u-c*h*p,this._z=l*h*p-c*d*u,this._w=l*h*u+c*d*p;break;case"ZXY":this._x=c*h*u-l*d*p,this._y=l*d*u+c*h*p,this._z=l*h*p+c*d*u,this._w=l*h*u-c*d*p;break;case"ZYX":this._x=c*h*u-l*d*p,this._y=l*d*u+c*h*p,this._z=l*h*p-c*d*u,this._w=l*h*u+c*d*p;break;case"YZX":this._x=c*h*u+l*d*p,this._y=l*d*u+c*h*p,this._z=l*h*p-c*d*u,this._w=l*h*u-c*d*p;break;case"XZY":this._x=c*h*u-l*d*p,this._y=l*d*u-c*h*p,this._z=l*h*p+c*d*u,this._w=l*h*u+c*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return!1!==t&&this._onChangeCallback(),this}setFromAxisAngle(e,t){let i=t/2,n=Math.sin(i);return this._x=e.x*n,this._y=e.y*n,this._z=e.z*n,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){let t=e.elements,i=t[0],n=t[4],r=t[8],a=t[1],s=t[5],o=t[9],l=t[2],h=t[6],u=t[10],c=i+s+u;if(c>0){let d=.5/Math.sqrt(c+1);this._w=.25/d,this._x=(h-o)*d,this._y=(r-l)*d,this._z=(a-n)*d}else if(i>s&&i>u){let p=2*Math.sqrt(1+i-s-u);this._w=(h-o)/p,this._x=.25*p,this._y=(n+a)/p,this._z=(r+l)/p}else if(s>u){let f=2*Math.sqrt(1+s-i-u);this._w=(r-l)/f,this._x=(n+a)/f,this._y=.25*f,this._z=(o+h)/f}else{let m=2*Math.sqrt(1+u-i-s);this._w=(a-n)/m,this._x=(r+l)/m,this._y=(o+h)/m,this._z=.25*m}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let i=e.dot(t)+1;return i<Number.EPSILON?(i=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=i):(this._x=0,this._y=-e.z,this._z=e.y,this._w=i)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=i),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(t9(this.dot(e),-1,1)))}rotateTowards(e,t){let i=this.angleTo(e);return 0===i||this.slerp(e,Math.min(1,t/i)),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){let i=e._x,n=e._y,r=e._z,a=e._w,s=t._x,o=t._y,l=t._z,h=t._w;return this._x=i*h+a*s+n*l-r*o,this._y=n*h+a*o+r*s-i*l,this._z=r*h+a*l+i*o-n*s,this._w=a*h-i*s-n*o-r*l,this._onChangeCallback(),this}slerp(e,t){if(0===t)return this;if(1===t)return this.copy(e);let i=this._x,n=this._y,r=this._z,a=this._w,s=a*e._w+i*e._x+n*e._y+r*e._z;if(s<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,s=-s):this.copy(e),s>=1)return this._w=a,this._x=i,this._y=n,this._z=r,this;let o=1-s*s;if(o<=Number.EPSILON){let l=1-t;return this._w=l*a+t*this._w,this._x=l*i+t*this._x,this._y=l*n+t*this._y,this._z=l*r+t*this._z,this.normalize(),this._onChangeCallback(),this}let h=Math.sqrt(o),u=Math.atan2(h,s),c=Math.sin((1-t)*u)/h,d=Math.sin(t*u)/h;return this._w=a*c+this._w*d,this._x=i*c+this._x*d,this._y=n*c+this._y*d,this._z=r*c+this._z*d,this._onChangeCallback(),this}slerpQuaternions(e,t,i){return this.copy(e).slerp(t,i)}random(){let e=Math.random(),t=Math.sqrt(1-e),i=Math.sqrt(e),n=2*Math.PI*Math.random(),r=2*Math.PI*Math.random();return this.set(t*Math.cos(n),i*Math.sin(r),i*Math.cos(r),t*Math.sin(n))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class iH{constructor(e=0,t=0,i=0){iH.prototype.isVector3=!0,this.x=e,this.y=t,this.z=i}set(e,t,i){return void 0===i&&(i=this.z),this.x=e,this.y=t,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(ij.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(ij.setFromAxisAngle(e,t))}applyMatrix3(e){let t=this.x,i=this.y,n=this.z,r=e.elements;return this.x=r[0]*t+r[3]*i+r[6]*n,this.y=r[1]*t+r[4]*i+r[7]*n,this.z=r[2]*t+r[5]*i+r[8]*n,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){let t=this.x,i=this.y,n=this.z,r=e.elements,a=1/(r[3]*t+r[7]*i+r[11]*n+r[15]);return this.x=(r[0]*t+r[4]*i+r[8]*n+r[12])*a,this.y=(r[1]*t+r[5]*i+r[9]*n+r[13])*a,this.z=(r[2]*t+r[6]*i+r[10]*n+r[14])*a,this}applyQuaternion(e){let t=this.x,i=this.y,n=this.z,r=e.x,a=e.y,s=e.z,o=e.w,l=o*t+a*n-s*i,h=o*i+s*t-r*n,u=o*n+r*i-a*t,c=-r*t-a*i-s*n;return this.x=l*o+-(c*r)+-(h*s)- -(u*a),this.y=h*o+-(c*a)+-(u*r)- -(l*s),this.z=u*o+-(c*s)+-(l*a)- -(h*r),this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){let t=this.x,i=this.y,n=this.z,r=e.elements;return this.x=r[0]*t+r[4]*i+r[8]*n,this.y=r[1]*t+r[5]*i+r[9]*n,this.z=r[2]*t+r[6]*i+r[10]*n,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){let i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){let i=e.x,n=e.y,r=e.z,a=t.x,s=t.y,o=t.z;return this.x=n*o-r*s,this.y=r*a-i*o,this.z=i*s-n*a,this}projectOnVector(e){let t=e.lengthSq();if(0===t)return this.set(0,0,0);let i=e.dot(this)/t;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return iW.copy(this).projectOnVector(e),this.sub(iW)}reflect(e){return this.sub(iW.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){let t=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===t)return Math.PI/2;let i=this.dot(e)/t;return Math.acos(t9(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){let t=this.x-e.x,i=this.y-e.y,n=this.z-e.z;return t*t+i*i+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,i){let n=Math.sin(t)*e;return this.x=n*Math.sin(i),this.y=Math.cos(t)*e,this.z=n*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,i){return this.x=e*Math.sin(t),this.y=i,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){let t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){let t=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),n=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=i,this.z=n,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,4*t)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,3*t)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){let e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,i=Math.sqrt(1-e**2);return this.x=i*Math.cos(t),this.y=i*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}let iW=new iH,ij=new iV;class iq{constructor(e=new iH(Infinity,Infinity,Infinity),t=new iH(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=Infinity,i=Infinity,n=Infinity,r=-1/0,a=-1/0,s=-1/0;for(let o=0,l=e.length;o<l;o+=3){let h=e[o],u=e[o+1],c=e[o+2];h<t&&(t=h),u<i&&(i=u),c<n&&(n=c),h>r&&(r=h),u>a&&(a=u),c>s&&(s=c)}return this.min.set(t,i,n),this.max.set(r,a,s),this}setFromBufferAttribute(e){let t=Infinity,i=Infinity,n=Infinity,r=-1/0,a=-1/0,s=-1/0;for(let o=0,l=e.count;o<l;o++){let h=e.getX(o),u=e.getY(o),c=e.getZ(o);h<t&&(t=h),u<i&&(i=u),c<n&&(n=c),h>r&&(r=h),u>a&&(a=u),c>s&&(s=c)}return this.min.set(t,i,n),this.max.set(r,a,s),this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){let i=iY.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=Infinity,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);let i=e.geometry;if(void 0!==i){if(t&&void 0!=i.attributes&&void 0!==i.attributes.position){let n=i.attributes.position;for(let r=0,a=n.count;r<a;r++)iY.fromBufferAttribute(n,r).applyMatrix4(e.matrixWorld),this.expandByPoint(iY)}else null===i.boundingBox&&i.computeBoundingBox(),iZ.copy(i.boundingBox),iZ.applyMatrix4(e.matrixWorld),this.union(iZ)}let s=e.children;for(let o=0,l=s.length;o<l;o++)this.expandByObject(s[o],t);return this}containsPoint(e){return!(e.x<this.min.x)&&!(e.x>this.max.x)&&!(e.y<this.min.y)&&!(e.y>this.max.y)&&!(e.z<this.min.z)&&!(e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x)&&!(e.min.x>this.max.x)&&!(e.max.y<this.min.y)&&!(e.min.y>this.max.y)&&!(e.max.z<this.min.z)&&!(e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,iY),iY.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,i;return e.normal.x>0?(t=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),t<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(i3),i2.subVectors(this.max,i3),iJ.subVectors(e.a,i3),iK.subVectors(e.b,i3),i$.subVectors(e.c,i3),iQ.subVectors(iK,iJ),i0.subVectors(i$,iK),i1.subVectors(iJ,i$);let t=[0,-iQ.z,iQ.y,0,-i0.z,i0.y,0,-i1.z,i1.y,iQ.z,0,-iQ.x,i0.z,0,-i0.x,i1.z,0,-i1.x,-iQ.y,iQ.x,0,-i0.y,i0.x,0,-i1.y,i1.x,0];return!!(i6(t,iJ,iK,i$,i2)&&i6(t=[1,0,0,0,1,0,0,0,1],iJ,iK,i$,i2))&&(i4.crossVectors(iQ,i0),i6(t=[i4.x,i4.y,i4.z],iJ,iK,i$,i2))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){let t=iY.copy(e).clamp(this.min,this.max);return t.sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=.5*this.getSize(iY).length(),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()||(iX[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),iX[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),iX[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),iX[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),iX[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),iX[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),iX[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),iX[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(iX)),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}let iX=[new iH,new iH,new iH,new iH,new iH,new iH,new iH,new iH],iY=new iH,iZ=new iq,iJ=new iH,iK=new iH,i$=new iH,iQ=new iH,i0=new iH,i1=new iH,i3=new iH,i2=new iH,i4=new iH,i5=new iH;function i6(e,t,i,n,r){for(let a=0,s=e.length-3;a<=s;a+=3){i5.fromArray(e,a);let o=r.x*Math.abs(i5.x)+r.y*Math.abs(i5.y)+r.z*Math.abs(i5.z),l=t.dot(i5),h=i.dot(i5),u=n.dot(i5);if(Math.max(-Math.max(l,h,u),Math.min(l,h,u))>o)return!1}return!0}let i7=new iq,i8=new iH,i9=new iH,ne=new iH;class nt{constructor(e=new iH,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){let i=this.center;void 0!==t?i.copy(t):i7.setFromPoints(e).getCenter(i);let n=0;for(let r=0,a=e.length;r<a;r++)n=Math.max(n,i.distanceToSquared(e[r]));return this.radius=Math.sqrt(n),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){let t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){let i=this.center.distanceToSquared(e);return t.copy(e),i>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){ne.subVectors(e,this.center);let t=ne.lengthSq();if(t>this.radius*this.radius){let i=Math.sqrt(t),n=(i-this.radius)*.5;this.center.add(ne.multiplyScalar(n/i)),this.radius+=n}return this}union(e){return!0===this.center.equals(e.center)?i9.set(0,0,1).multiplyScalar(e.radius):i9.subVectors(e.center,this.center).normalize().multiplyScalar(e.radius),this.expandByPoint(i8.copy(e.center).add(i9)),this.expandByPoint(i8.copy(e.center).sub(i9)),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}let ni=new iH,nn=new iH,nr=new iH,na=new iH,ns=new iH,no=new iH,nl=new iH;class nh{constructor(e=new iH,t=new iH(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,ni)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);let i=t.dot(this.direction);return i<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(i).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){let t=ni.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(ni.copy(this.direction).multiplyScalar(t).add(this.origin),ni.distanceToSquared(e))}distanceSqToSegment(e,t,i,n){nn.copy(e).add(t).multiplyScalar(.5),nr.copy(t).sub(e).normalize(),na.copy(this.origin).sub(nn);let r=.5*e.distanceTo(t),a=-this.direction.dot(nr),s=na.dot(this.direction),o=-na.dot(nr),l=na.lengthSq(),h=Math.abs(1-a*a),u,c,d,p;if(h>0){if(u=a*o-s,c=a*s-o,p=r*h,u>=0){if(c>=-p){if(c<=p){let f=1/h;u*=f,c*=f,d=u*(u+a*c+2*s)+c*(a*u+c+2*o)+l}else d=-(u=Math.max(0,-(a*(c=r)+s)))*u+c*(c+2*o)+l}else d=-(u=Math.max(0,-(a*(c=-r)+s)))*u+c*(c+2*o)+l}else c<=-p?(c=(u=Math.max(0,-(-a*r+s)))>0?-r:Math.min(Math.max(-r,-o),r),d=-u*u+c*(c+2*o)+l):c<=p?(u=0,d=(c=Math.min(Math.max(-r,-o),r))*(c+2*o)+l):(c=(u=Math.max(0,-(a*r+s)))>0?r:Math.min(Math.max(-r,-o),r),d=-u*u+c*(c+2*o)+l)}else c=a>0?-r:r,d=-(u=Math.max(0,-(a*c+s)))*u+c*(c+2*o)+l;return i&&i.copy(this.direction).multiplyScalar(u).add(this.origin),n&&n.copy(nr).multiplyScalar(c).add(nn),d}intersectSphere(e,t){ni.subVectors(e.center,this.origin);let i=ni.dot(this.direction),n=ni.dot(ni)-i*i,r=e.radius*e.radius;if(n>r)return null;let a=Math.sqrt(r-n),s=i-a,o=i+a;return s<0&&o<0?null:s<0?this.at(o,t):this.at(s,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){let t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;let i=-(this.origin.dot(e.normal)+e.constant)/t;return i>=0?i:null}intersectPlane(e,t){let i=this.distanceToPlane(e);return null===i?null:this.at(i,t)}intersectsPlane(e){let t=e.distanceToPoint(this.origin);if(0===t)return!0;let i=e.normal.dot(this.direction);return i*t<0}intersectBox(e,t){let i,n,r,a,s,o,l=1/this.direction.x,h=1/this.direction.y,u=1/this.direction.z,c=this.origin;return(l>=0?(i=(e.min.x-c.x)*l,n=(e.max.x-c.x)*l):(i=(e.max.x-c.x)*l,n=(e.min.x-c.x)*l),h>=0?(r=(e.min.y-c.y)*h,a=(e.max.y-c.y)*h):(r=(e.max.y-c.y)*h,a=(e.min.y-c.y)*h),i>a||r>n)?null:((r>i||i!=i)&&(i=r),(a<n||n!=n)&&(n=a),u>=0?(s=(e.min.z-c.z)*u,o=(e.max.z-c.z)*u):(s=(e.max.z-c.z)*u,o=(e.min.z-c.z)*u),i>o||s>n)?null:((s>i||i!=i)&&(i=s),(o<n||n!=n)&&(n=o),n<0)?null:this.at(i>=0?i:n,t)}intersectsBox(e){return null!==this.intersectBox(e,ni)}intersectTriangle(e,t,i,n,r){ns.subVectors(t,e),no.subVectors(i,e),nl.crossVectors(ns,no);let a=this.direction.dot(nl),s;if(a>0){if(n)return null;s=1}else{if(!(a<0))return null;s=-1,a=-a}na.subVectors(this.origin,e);let o=s*this.direction.dot(no.crossVectors(na,no));if(o<0)return null;let l=s*this.direction.dot(ns.cross(na));if(l<0||o+l>a)return null;let h=-s*na.dot(nl);return h<0?null:this.at(h/a,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class nu{constructor(){nu.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(e,t,i,n,r,a,s,o,l,h,u,c,d,p,f,m){let g=this.elements;return g[0]=e,g[4]=t,g[8]=i,g[12]=n,g[1]=r,g[5]=a,g[9]=s,g[13]=o,g[2]=l,g[6]=h,g[10]=u,g[14]=c,g[3]=d,g[7]=p,g[11]=f,g[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new nu().fromArray(this.elements)}copy(e){let t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],t[9]=i[9],t[10]=i[10],t[11]=i[11],t[12]=i[12],t[13]=i[13],t[14]=i[14],t[15]=i[15],this}copyPosition(e){let t=this.elements,i=e.elements;return t[12]=i[12],t[13]=i[13],t[14]=i[14],this}setFromMatrix3(e){let t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,i){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,t,i){return this.set(e.x,t.x,i.x,0,e.y,t.y,i.y,0,e.z,t.z,i.z,0,0,0,0,1),this}extractRotation(e){let t=this.elements,i=e.elements,n=1/nc.setFromMatrixColumn(e,0).length(),r=1/nc.setFromMatrixColumn(e,1).length(),a=1/nc.setFromMatrixColumn(e,2).length();return t[0]=i[0]*n,t[1]=i[1]*n,t[2]=i[2]*n,t[3]=0,t[4]=i[4]*r,t[5]=i[5]*r,t[6]=i[6]*r,t[7]=0,t[8]=i[8]*a,t[9]=i[9]*a,t[10]=i[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){let t=this.elements,i=e.x,n=e.y,r=e.z,a=Math.cos(i),s=Math.sin(i),o=Math.cos(n),l=Math.sin(n),h=Math.cos(r),u=Math.sin(r);if("XYZ"===e.order){let c=a*h,d=a*u,p=s*h,f=s*u;t[0]=o*h,t[4]=-o*u,t[8]=l,t[1]=d+p*l,t[5]=c-f*l,t[9]=-s*o,t[2]=f-c*l,t[6]=p+d*l,t[10]=a*o}else if("YXZ"===e.order){let m=o*h,g=o*u,v=l*h,x=l*u;t[0]=m+x*s,t[4]=v*s-g,t[8]=a*l,t[1]=a*u,t[5]=a*h,t[9]=-s,t[2]=g*s-v,t[6]=x+m*s,t[10]=a*o}else if("ZXY"===e.order){let _=o*h,y=o*u,M=l*h,b=l*u;t[0]=_-b*s,t[4]=-a*u,t[8]=M+y*s,t[1]=y+M*s,t[5]=a*h,t[9]=b-_*s,t[2]=-a*l,t[6]=s,t[10]=a*o}else if("ZYX"===e.order){let S=a*h,w=a*u,T=s*h,A=s*u;t[0]=o*h,t[4]=T*l-w,t[8]=S*l+A,t[1]=o*u,t[5]=A*l+S,t[9]=w*l-T,t[2]=-l,t[6]=s*o,t[10]=a*o}else if("YZX"===e.order){let E=a*o,C=a*l,L=s*o,R=s*l;t[0]=o*h,t[4]=R-E*u,t[8]=L*u+C,t[1]=u,t[5]=a*h,t[9]=-s*h,t[2]=-l*h,t[6]=C*u+L,t[10]=E-R*u}else if("XZY"===e.order){let P=a*o,I=a*l,D=s*o,N=s*l;t[0]=o*h,t[4]=-u,t[8]=l*h,t[1]=P*u+N,t[5]=a*h,t[9]=I*u-D,t[2]=D*u-I,t[6]=s*h,t[10]=N*u+P}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(np,e,nf)}lookAt(e,t,i){let n=this.elements;return nv.subVectors(e,t),0===nv.lengthSq()&&(nv.z=1),nv.normalize(),nm.crossVectors(i,nv),0===nm.lengthSq()&&(1===Math.abs(i.z)?nv.x+=1e-4:nv.z+=1e-4,nv.normalize(),nm.crossVectors(i,nv)),nm.normalize(),ng.crossVectors(nv,nm),n[0]=nm.x,n[4]=ng.x,n[8]=nv.x,n[1]=nm.y,n[5]=ng.y,n[9]=nv.y,n[2]=nm.z,n[6]=ng.z,n[10]=nv.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){let i=e.elements,n=t.elements,r=this.elements,a=i[0],s=i[4],o=i[8],l=i[12],h=i[1],u=i[5],c=i[9],d=i[13],p=i[2],f=i[6],m=i[10],g=i[14],v=i[3],x=i[7],_=i[11],y=i[15],M=n[0],b=n[4],S=n[8],w=n[12],T=n[1],A=n[5],E=n[9],C=n[13],L=n[2],R=n[6],P=n[10],I=n[14],D=n[3],N=n[7],O=n[11],z=n[15];return r[0]=a*M+s*T+o*L+l*D,r[4]=a*b+s*A+o*R+l*N,r[8]=a*S+s*E+o*P+l*O,r[12]=a*w+s*C+o*I+l*z,r[1]=h*M+u*T+c*L+d*D,r[5]=h*b+u*A+c*R+d*N,r[9]=h*S+u*E+c*P+d*O,r[13]=h*w+u*C+c*I+d*z,r[2]=p*M+f*T+m*L+g*D,r[6]=p*b+f*A+m*R+g*N,r[10]=p*S+f*E+m*P+g*O,r[14]=p*w+f*C+m*I+g*z,r[3]=v*M+x*T+_*L+y*D,r[7]=v*b+x*A+_*R+y*N,r[11]=v*S+x*E+_*P+y*O,r[15]=v*w+x*C+_*I+y*z,this}multiplyScalar(e){let t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){let e=this.elements,t=e[0],i=e[4],n=e[8],r=e[12],a=e[1],s=e[5],o=e[9],l=e[13],h=e[2],u=e[6],c=e[10],d=e[14],p=e[3],f=e[7],m=e[11],g=e[15];return p*(+r*o*u-n*l*u-r*s*c+i*l*c+n*s*d-i*o*d)+f*(+t*o*d-t*l*c+r*a*c-n*a*d+n*l*h-r*o*h)+m*(+t*l*u-t*s*d-r*a*u+i*a*d+r*s*h-i*l*h)+g*(-n*s*h-t*o*u+t*s*c+n*a*u-i*a*c+i*o*h)}transpose(){let e=this.elements,t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,i){let n=this.elements;return e.isVector3?(n[12]=e.x,n[13]=e.y,n[14]=e.z):(n[12]=e,n[13]=t,n[14]=i),this}invert(){let e=this.elements,t=e[0],i=e[1],n=e[2],r=e[3],a=e[4],s=e[5],o=e[6],l=e[7],h=e[8],u=e[9],c=e[10],d=e[11],p=e[12],f=e[13],m=e[14],g=e[15],v=u*m*l-f*c*l+f*o*d-s*m*d-u*o*g+s*c*g,x=p*c*l-h*m*l-p*o*d+a*m*d+h*o*g-a*c*g,_=h*f*l-p*u*l+p*s*d-a*f*d-h*s*g+a*u*g,y=p*u*o-h*f*o-p*s*c+a*f*c+h*s*m-a*u*m,M=t*v+i*x+n*_+r*y;if(0===M)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);let b=1/M;return e[0]=v*b,e[1]=(f*c*r-u*m*r-f*n*d+i*m*d+u*n*g-i*c*g)*b,e[2]=(s*m*r-f*o*r+f*n*l-i*m*l-s*n*g+i*o*g)*b,e[3]=(u*o*r-s*c*r-u*n*l+i*c*l+s*n*d-i*o*d)*b,e[4]=x*b,e[5]=(h*m*r-p*c*r+p*n*d-t*m*d-h*n*g+t*c*g)*b,e[6]=(p*o*r-a*m*r-p*n*l+t*m*l+a*n*g-t*o*g)*b,e[7]=(a*c*r-h*o*r+h*n*l-t*c*l-a*n*d+t*o*d)*b,e[8]=_*b,e[9]=(p*u*r-h*f*r-p*i*d+t*f*d+h*i*g-t*u*g)*b,e[10]=(a*f*r-p*s*r+p*i*l-t*f*l-a*i*g+t*s*g)*b,e[11]=(h*s*r-a*u*r-h*i*l+t*u*l+a*i*d-t*s*d)*b,e[12]=y*b,e[13]=(h*f*n-p*u*n+p*i*c-t*f*c-h*i*m+t*u*m)*b,e[14]=(p*s*n-a*f*n-p*i*o+t*f*o+a*i*m-t*s*m)*b,e[15]=(a*u*n-h*s*n+h*i*o-t*u*o-a*i*c+t*s*c)*b,this}scale(e){let t=this.elements,i=e.x,n=e.y,r=e.z;return t[0]*=i,t[4]*=n,t[8]*=r,t[1]*=i,t[5]*=n,t[9]*=r,t[2]*=i,t[6]*=n,t[10]*=r,t[3]*=i,t[7]*=n,t[11]*=r,this}getMaxScaleOnAxis(){let e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],n=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,i,n))}makeTranslation(e,t,i){return this.set(1,0,0,e,0,1,0,t,0,0,1,i,0,0,0,1),this}makeRotationX(e){let t=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,t,-i,0,0,i,t,0,0,0,0,1),this}makeRotationY(e){let t=Math.cos(e),i=Math.sin(e);return this.set(t,0,i,0,0,1,0,0,-i,0,t,0,0,0,0,1),this}makeRotationZ(e){let t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,0,i,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){let i=Math.cos(t),n=Math.sin(t),r=1-i,a=e.x,s=e.y,o=e.z,l=r*a,h=r*s;return this.set(l*a+i,l*s-n*o,l*o+n*s,0,l*s+n*o,h*s+i,h*o-n*a,0,l*o-n*s,h*o+n*a,r*o*o+i,0,0,0,0,1),this}makeScale(e,t,i){return this.set(e,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,t,i,n,r,a){return this.set(1,i,r,0,e,1,a,0,t,n,1,0,0,0,0,1),this}compose(e,t,i){let n=this.elements,r=t._x,a=t._y,s=t._z,o=t._w,l=r+r,h=a+a,u=s+s,c=r*l,d=r*h,p=r*u,f=a*h,m=a*u,g=s*u,v=o*l,x=o*h,_=o*u,y=i.x,M=i.y,b=i.z;return n[0]=(1-(f+g))*y,n[1]=(d+_)*y,n[2]=(p-x)*y,n[3]=0,n[4]=(d-_)*M,n[5]=(1-(c+g))*M,n[6]=(m+v)*M,n[7]=0,n[8]=(p+x)*b,n[9]=(m-v)*b,n[10]=(1-(c+f))*b,n[11]=0,n[12]=e.x,n[13]=e.y,n[14]=e.z,n[15]=1,this}decompose(e,t,i){let n=this.elements,r=nc.set(n[0],n[1],n[2]).length(),a=nc.set(n[4],n[5],n[6]).length(),s=nc.set(n[8],n[9],n[10]).length(),o=this.determinant();o<0&&(r=-r),e.x=n[12],e.y=n[13],e.z=n[14],nd.copy(this);let l=1/r,h=1/a,u=1/s;return nd.elements[0]*=l,nd.elements[1]*=l,nd.elements[2]*=l,nd.elements[4]*=h,nd.elements[5]*=h,nd.elements[6]*=h,nd.elements[8]*=u,nd.elements[9]*=u,nd.elements[10]*=u,t.setFromRotationMatrix(nd),i.x=r,i.y=a,i.z=s,this}makePerspective(e,t,i,n,r,a){let s=this.elements;return s[0]=2*r/(t-e),s[4]=0,s[8]=(t+e)/(t-e),s[12]=0,s[1]=0,s[5]=2*r/(i-n),s[9]=(i+n)/(i-n),s[13]=0,s[2]=0,s[6]=0,s[10]=-(a+r)/(a-r),s[14]=-2*a*r/(a-r),s[3]=0,s[7]=0,s[11]=-1,s[15]=0,this}makeOrthographic(e,t,i,n,r,a){let s=this.elements,o=1/(t-e),l=1/(i-n),h=1/(a-r);return s[0]=2*o,s[4]=0,s[8]=0,s[12]=-((t+e)*o),s[1]=0,s[5]=2*l,s[9]=0,s[13]=-((i+n)*l),s[2]=0,s[6]=0,s[10]=-2*h,s[14]=-((a+r)*h),s[3]=0,s[7]=0,s[11]=0,s[15]=1,this}equals(e){let t=this.elements,i=e.elements;for(let n=0;n<16;n++)if(t[n]!==i[n])return!1;return!0}fromArray(e,t=0){for(let i=0;i<16;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){let i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e[t+9]=i[9],e[t+10]=i[10],e[t+11]=i[11],e[t+12]=i[12],e[t+13]=i[13],e[t+14]=i[14],e[t+15]=i[15],e}}let nc=new iH,nd=new nu,np=new iH(0,0,0),nf=new iH(1,1,1),nm=new iH,ng=new iH,nv=new iH,nx=new nu,n_=new iV;class ny{constructor(e=0,t=0,i=0,n=ny.DefaultOrder){this.isEuler=!0,this._x=e,this._y=t,this._z=i,this._order=n}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,i,n=this._order){return this._x=e,this._y=t,this._z=i,this._order=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,i=!0){let n=e.elements,r=n[0],a=n[4],s=n[8],o=n[1],l=n[5],h=n[9],u=n[2],c=n[6],d=n[10];switch(t){case"XYZ":this._y=Math.asin(t9(s,-1,1)),.9999999>Math.abs(s)?(this._x=Math.atan2(-h,d),this._z=Math.atan2(-a,r)):(this._x=Math.atan2(c,l),this._z=0);break;case"YXZ":this._x=Math.asin(-t9(h,-1,1)),.9999999>Math.abs(h)?(this._y=Math.atan2(s,d),this._z=Math.atan2(o,l)):(this._y=Math.atan2(-u,r),this._z=0);break;case"ZXY":this._x=Math.asin(t9(c,-1,1)),.9999999>Math.abs(c)?(this._y=Math.atan2(-u,d),this._z=Math.atan2(-a,l)):(this._y=0,this._z=Math.atan2(o,r));break;case"ZYX":this._y=Math.asin(-t9(u,-1,1)),.9999999>Math.abs(u)?(this._x=Math.atan2(c,d),this._z=Math.atan2(o,r)):(this._x=0,this._z=Math.atan2(-a,l));break;case"YZX":this._z=Math.asin(t9(o,-1,1)),.9999999>Math.abs(o)?(this._x=Math.atan2(-h,l),this._y=Math.atan2(-u,r)):(this._x=0,this._y=Math.atan2(s,d));break;case"XZY":this._z=Math.asin(-t9(a,-1,1)),.9999999>Math.abs(a)?(this._x=Math.atan2(c,l),this._y=Math.atan2(s,r)):(this._x=Math.atan2(-h,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,!0===i&&this._onChangeCallback(),this}setFromQuaternion(e,t,i){return nx.makeRotationFromQuaternion(e),this.setFromRotationMatrix(nx,t,i)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return n_.setFromEuler(this),this.setFromQuaternion(n_,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}toVector3(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")}}ny.DefaultOrder="XYZ",ny.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class nM{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!=0}isEnabled(e){return(this.mask&(1<<e|0))!=0}}let nb=0,nS=new iH,nw=new iV,nT=new nu,nA=new iH,nE=new iH,nC=new iH,nL=new iV,nR=new iH(1,0,0),nP=new iH(0,1,0),nI=new iH(0,0,1),nD={type:"added"},nN={type:"removed"};class nO extends t2{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:nb++}),this.uuid=t8(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=nO.DefaultUp.clone();let e=new iH,t=new ny,i=new iV,n=new iH(1,1,1);t._onChange(function(){i.setFromEuler(t,!1)}),i._onChange(function(){t.setFromQuaternion(i,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:n},modelViewMatrix:{value:new nu},normalMatrix:{value:new id}}),this.matrix=new nu,this.matrixWorld=new nu,this.matrixAutoUpdate=nO.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=nO.DefaultMatrixWorldAutoUpdate,this.layers=new nM,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return nw.setFromAxisAngle(e,t),this.quaternion.multiply(nw),this}rotateOnWorldAxis(e,t){return nw.setFromAxisAngle(e,t),this.quaternion.premultiply(nw),this}rotateX(e){return this.rotateOnAxis(nR,e)}rotateY(e){return this.rotateOnAxis(nP,e)}rotateZ(e){return this.rotateOnAxis(nI,e)}translateOnAxis(e,t){return nS.copy(e).applyQuaternion(this.quaternion),this.position.add(nS.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(nR,e)}translateY(e){return this.translateOnAxis(nP,e)}translateZ(e){return this.translateOnAxis(nI,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(nT.copy(this.matrixWorld).invert())}lookAt(e,t,i){e.isVector3?nA.copy(e):nA.set(e,t,i);let n=this.parent;this.updateWorldMatrix(!0,!1),nE.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?nT.lookAt(nE,nA,this.up):nT.lookAt(nA,nE,this.up),this.quaternion.setFromRotationMatrix(nT),n&&(nT.extractRotation(n.matrixWorld),nw.setFromRotationMatrix(nT),this.quaternion.premultiply(nw.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(nD)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}let i=this.children.indexOf(e);return -1!==i&&(e.parent=null,this.children.splice(i,1),e.dispatchEvent(nN)),this}removeFromParent(){let e=this.parent;return null!==e&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){let t=this.children[e];t.parent=null,t.dispatchEvent(nN)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),nT.copy(this.matrixWorld).invert(),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),nT.multiply(e.parent.matrixWorld)),e.applyMatrix4(nT),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let i=0,n=this.children.length;i<n;i++){let r=this.children[i],a=r.getObjectByProperty(e,t);if(void 0!==a)return a}}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(nE,e,nC),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(nE,nL,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);let t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);let t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].traverse(e)}traverseVisible(e){if(!1===this.visible)return;e(this);let t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].traverseVisible(e)}traverseAncestors(e){let t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);let t=this.children;for(let i=0,n=t.length;i<n;i++){let r=t[i];(!0===r.matrixWorldAutoUpdate||!0===e)&&r.updateMatrixWorld(e)}}updateWorldMatrix(e,t){let i=this.parent;if(!0===e&&null!==i&&!0===i.matrixWorldAutoUpdate&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===t){let n=this.children;for(let r=0,a=n.length;r<a;r++){let s=n[r];!0===s.matrixWorldAutoUpdate&&s.updateWorldMatrix(!1,!0)}}}toJSON(e){let t=void 0===e||"string"==typeof e,i={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});let n={};function r(t,i){return void 0===t[i.uuid]&&(t[i.uuid]=i.toJSON(e)),i.uuid}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),!0===this.castShadow&&(n.castShadow=!0),!0===this.receiveShadow&&(n.receiveShadow=!0),!1===this.visible&&(n.visible=!1),!1===this.frustumCulled&&(n.frustumCulled=!1),0!==this.renderOrder&&(n.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),n.layers=this.layers.mask,n.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(n.matrixAutoUpdate=!1),this.isInstancedMesh&&(n.type="InstancedMesh",n.count=this.count,n.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(n.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?n.background=this.background.toJSON():this.background.isTexture&&(n.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&!0!==this.environment.isRenderTargetTexture&&(n.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){n.geometry=r(e.geometries,this.geometry);let a=this.geometry.parameters;if(void 0!==a&&void 0!==a.shapes){let s=a.shapes;if(Array.isArray(s))for(let o=0,l=s.length;o<l;o++){let h=s[o];r(e.shapes,h)}else r(e.shapes,s)}}if(this.isSkinnedMesh&&(n.bindMode=this.bindMode,n.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(r(e.skeletons,this.skeleton),n.skeleton=this.skeleton.uuid)),void 0!==this.material){if(Array.isArray(this.material)){let u=[];for(let c=0,d=this.material.length;c<d;c++)u.push(r(e.materials,this.material[c]));n.material=u}else n.material=r(e.materials,this.material)}if(this.children.length>0){n.children=[];for(let p=0;p<this.children.length;p++)n.children.push(this.children[p].toJSON(e).object)}if(this.animations.length>0){n.animations=[];for(let f=0;f<this.animations.length;f++){let m=this.animations[f];n.animations.push(r(e.animations,m))}}if(t){let g=w(e.geometries),v=w(e.materials),x=w(e.textures),_=w(e.images),y=w(e.shapes),M=w(e.skeletons),b=w(e.animations),S=w(e.nodes);g.length>0&&(i.geometries=g),v.length>0&&(i.materials=v),x.length>0&&(i.textures=x),_.length>0&&(i.images=_),y.length>0&&(i.shapes=y),M.length>0&&(i.skeletons=M),b.length>0&&(i.animations=b),S.length>0&&(i.nodes=S)}return i.object=n,i;function w(e){let t=[];for(let i in e){let n=e[i];delete n.metadata,t.push(n)}return t}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(let i=0;i<e.children.length;i++){let n=e.children[i];this.add(n.clone())}return this}}nO.DefaultUp=new iH(0,1,0),nO.DefaultMatrixAutoUpdate=!0,nO.DefaultMatrixWorldAutoUpdate=!0;let nz=new iH,nU=new iH,nB=new iH,nF=new iH,nk=new iH,nG=new iH,nV=new iH,nH=new iH,nW=new iH,nj=new iH;class nq{constructor(e=new iH,t=new iH,i=new iH){this.a=e,this.b=t,this.c=i}static getNormal(e,t,i,n){n.subVectors(i,t),nz.subVectors(e,t),n.cross(nz);let r=n.lengthSq();return r>0?n.multiplyScalar(1/Math.sqrt(r)):n.set(0,0,0)}static getBarycoord(e,t,i,n,r){nz.subVectors(n,t),nU.subVectors(i,t),nB.subVectors(e,t);let a=nz.dot(nz),s=nz.dot(nU),o=nz.dot(nB),l=nU.dot(nU),h=nU.dot(nB),u=a*l-s*s;if(0===u)return r.set(-2,-1,-1);let c=1/u,d=(l*o-s*h)*c,p=(a*h-s*o)*c;return r.set(1-d-p,p,d)}static containsPoint(e,t,i,n){return this.getBarycoord(e,t,i,n,nF),nF.x>=0&&nF.y>=0&&nF.x+nF.y<=1}static getUV(e,t,i,n,r,a,s,o){return this.getBarycoord(e,t,i,n,nF),o.set(0,0),o.addScaledVector(r,nF.x),o.addScaledVector(a,nF.y),o.addScaledVector(s,nF.z),o}static isFrontFacing(e,t,i,n){return nz.subVectors(i,t),nU.subVectors(e,t),0>nz.cross(nU).dot(n)}set(e,t,i){return this.a.copy(e),this.b.copy(t),this.c.copy(i),this}setFromPointsAndIndices(e,t,i,n){return this.a.copy(e[t]),this.b.copy(e[i]),this.c.copy(e[n]),this}setFromAttributeAndIndices(e,t,i,n){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,i),this.c.fromBufferAttribute(e,n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return nz.subVectors(this.c,this.b),nU.subVectors(this.a,this.b),.5*nz.cross(nU).length()}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return nq.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return nq.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,i,n,r){return nq.getUV(e,this.a,this.b,this.c,t,i,n,r)}containsPoint(e){return nq.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return nq.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){let i=this.a,n=this.b,r=this.c,a,s;nk.subVectors(n,i),nG.subVectors(r,i),nH.subVectors(e,i);let o=nk.dot(nH),l=nG.dot(nH);if(o<=0&&l<=0)return t.copy(i);nW.subVectors(e,n);let h=nk.dot(nW),u=nG.dot(nW);if(h>=0&&u<=h)return t.copy(n);let c=o*u-h*l;if(c<=0&&o>=0&&h<=0)return a=o/(o-h),t.copy(i).addScaledVector(nk,a);nj.subVectors(e,r);let d=nk.dot(nj),p=nG.dot(nj);if(p>=0&&d<=p)return t.copy(r);let f=d*l-o*p;if(f<=0&&l>=0&&p<=0)return s=l/(l-p),t.copy(i).addScaledVector(nG,s);let m=h*p-d*u;if(m<=0&&u-h>=0&&d-p>=0)return nV.subVectors(r,n),s=(u-h)/(u-h+(d-p)),t.copy(n).addScaledVector(nV,s);let g=1/(m+f+c);return a=f*g,s=c*g,t.copy(i).addScaledVector(nk,a).addScaledVector(nG,s)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let nX=0;class nY extends t2{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:nX++}),this.uuid=t8(),this.name="",this.type="Material",this.blending=x,this.side=f,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=I,this.blendDst=D,this.blendEquation=S,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=V,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=tW,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=tR,this.stencilZFail=tR,this.stencilZPass=tR,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(void 0!==e)for(let t in e){let i=e[t];if(void 0===i){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}let n=this[t];if(void 0===n){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue}n&&n.isColor?n.set(i):n&&n.isVector3&&i&&i.isVector3?n.copy(i):this[t]=i}}toJSON(e){let t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{}});let i={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function n(e){let t=[];for(let i in e){let n=e[i];delete n.metadata,t.push(n)}return t}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),void 0!==this.roughness&&(i.roughness=this.roughness),void 0!==this.metalness&&(i.metalness=this.metalness),void 0!==this.sheen&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(i.shininess=this.shininess),void 0!==this.clearcoat&&(i.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),void 0!==this.iridescence&&(i.iridescence=this.iridescence),void 0!==this.iridescenceIOR&&(i.iridescenceIOR=this.iridescenceIOR),void 0!==this.iridescenceThicknessRange&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(e).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(e).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(e).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(e).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(e).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(e).uuid,void 0!==this.combine&&(i.combine=this.combine)),void 0!==this.envMapIntensity&&(i.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(i.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.transmission&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(e).uuid),void 0!==this.thickness&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(e).uuid),void 0!==this.attenuationDistance&&(i.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(i.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(i.size=this.size),null!==this.shadowSide&&(i.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==x&&(i.blending=this.blending),this.side!==f&&(i.side=this.side),this.vertexColors&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),!0===this.transparent&&(i.transparent=this.transparent),i.depthFunc=this.depthFunc,i.depthTest=this.depthTest,i.depthWrite=this.depthWrite,i.colorWrite=this.colorWrite,i.stencilWrite=this.stencilWrite,i.stencilWriteMask=this.stencilWriteMask,i.stencilFunc=this.stencilFunc,i.stencilRef=this.stencilRef,i.stencilFuncMask=this.stencilFuncMask,i.stencilFail=this.stencilFail,i.stencilZFail=this.stencilZFail,i.stencilZPass=this.stencilZPass,void 0!==this.rotation&&0!==this.rotation&&(i.rotation=this.rotation),!0===this.polygonOffset&&(i.polygonOffset=!0),0!==this.polygonOffsetFactor&&(i.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(i.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(i.linewidth=this.linewidth),void 0!==this.dashSize&&(i.dashSize=this.dashSize),void 0!==this.gapSize&&(i.gapSize=this.gapSize),void 0!==this.scale&&(i.scale=this.scale),!0===this.dithering&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(i.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(i.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(i.wireframe=this.wireframe),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(i.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(i.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(i.flatShading=this.flatShading),!1===this.visible&&(i.visible=!1),!1===this.toneMapped&&(i.toneMapped=!1),!1===this.fog&&(i.fog=!1),"{}"!==JSON.stringify(this.userData)&&(i.userData=this.userData),t){let r=n(e.textures),a=n(e.images);r.length>0&&(i.textures=r),a.length>0&&(i.images=a)}return i}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;let t=e.clippingPlanes,i=null;if(null!==t){let n=t.length;i=Array(n);for(let r=0;r!==n;++r)i[r]=t[r].clone()}return this.clippingPlanes=i,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){!0===e&&this.version++}}class nZ extends nY{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new iC(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=X,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}let nJ=new iH,nK=new ic;class n${constructor(e,t,i){if(Array.isArray(e))throw TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=void 0!==e?e.length/t:0,this.normalized=!0===i,this.usage=tj,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,i){e*=this.itemSize,i*=t.itemSize;for(let n=0,r=this.itemSize;n<r;n++)this.array[e+n]=t.array[i+n];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(2===this.itemSize)for(let t=0,i=this.count;t<i;t++)nK.fromBufferAttribute(this,t),nK.applyMatrix3(e),this.setXY(t,nK.x,nK.y);else if(3===this.itemSize)for(let n=0,r=this.count;n<r;n++)nJ.fromBufferAttribute(this,n),nJ.applyMatrix3(e),this.setXYZ(n,nJ.x,nJ.y,nJ.z);return this}applyMatrix4(e){for(let t=0,i=this.count;t<i;t++)nJ.fromBufferAttribute(this,t),nJ.applyMatrix4(e),this.setXYZ(t,nJ.x,nJ.y,nJ.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)nJ.fromBufferAttribute(this,t),nJ.applyNormalMatrix(e),this.setXYZ(t,nJ.x,nJ.y,nJ.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)nJ.fromBufferAttribute(this,t),nJ.transformDirection(e),this.setXYZ(t,nJ.x,nJ.y,nJ.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=il(t,this.array)),t}setX(e,t){return this.normalized&&(t=ih(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=il(t,this.array)),t}setY(e,t){return this.normalized&&(t=ih(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=il(t,this.array)),t}setZ(e,t){return this.normalized&&(t=ih(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=il(t,this.array)),t}setW(e,t){return this.normalized&&(t=ih(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,i){return e*=this.itemSize,this.normalized&&(t=ih(t,this.array),i=ih(i,this.array)),this.array[e+0]=t,this.array[e+1]=i,this}setXYZ(e,t,i,n){return e*=this.itemSize,this.normalized&&(t=ih(t,this.array),i=ih(i,this.array),n=ih(n,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=n,this}setXYZW(e,t,i,n,r){return e*=this.itemSize,this.normalized&&(t=ih(t,this.array),i=ih(i,this.array),n=ih(n,this.array),r=ih(r,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=n,this.array[e+3]=r,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){let e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return""!==this.name&&(e.name=this.name),this.usage!==tj&&(e.usage=this.usage),(0!==this.updateRange.offset||-1!==this.updateRange.count)&&(e.updateRange=this.updateRange),e}copyColorsArray(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}copyVector2sArray(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}copyVector3sArray(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}copyVector4sArray(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}}class nQ extends n${constructor(e,t,i){super(new Int8Array(e),t,i)}}class n0 extends n${constructor(e,t,i){super(new Uint8Array(e),t,i)}}class n1 extends n${constructor(e,t,i){super(new Uint8ClampedArray(e),t,i)}}class n3 extends n${constructor(e,t,i){super(new Int16Array(e),t,i)}}class n2 extends n${constructor(e,t,i){super(new Uint16Array(e),t,i)}}class n4 extends n${constructor(e,t,i){super(new Int32Array(e),t,i)}}class n5 extends n${constructor(e,t,i){super(new Uint32Array(e),t,i)}}class n6 extends n${constructor(e,t,i){super(new Uint16Array(e),t,i),this.isFloat16BufferAttribute=!0}}class n7 extends n${constructor(e,t,i){super(new Float32Array(e),t,i)}}class n8 extends n${constructor(e,t,i){super(new Float64Array(e),t,i)}}let n9=0,re=new nu,rt=new nO,ri=new iH,rn=new iq,rr=new iq,ra=new iH;class rs extends t2{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:n9++}),this.uuid=t8(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(ip(e)?n5:n2)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return void 0!==this.attributes[e]}addGroup(e,t,i=0){this.groups.push({start:e,count:t,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){let t=this.attributes.position;void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0);let i=this.attributes.normal;if(void 0!==i){let n=new id().getNormalMatrix(e);i.applyNormalMatrix(n),i.needsUpdate=!0}let r=this.attributes.tangent;return void 0!==r&&(r.transformDirection(e),r.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(e){return re.makeRotationFromQuaternion(e),this.applyMatrix4(re),this}rotateX(e){return re.makeRotationX(e),this.applyMatrix4(re),this}rotateY(e){return re.makeRotationY(e),this.applyMatrix4(re),this}rotateZ(e){return re.makeRotationZ(e),this.applyMatrix4(re),this}translate(e,t,i){return re.makeTranslation(e,t,i),this.applyMatrix4(re),this}scale(e,t,i){return re.makeScale(e,t,i),this.applyMatrix4(re),this}lookAt(e){return rt.lookAt(e),rt.updateMatrix(),this.applyMatrix4(rt.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(ri).negate(),this.translate(ri.x,ri.y,ri.z),this}setFromPoints(e){let t=[];for(let i=0,n=e.length;i<n;i++){let r=e[i];t.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new n7(t,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new iq);let e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new iH(-1/0,-1/0,-1/0),new iH(Infinity,Infinity,Infinity));return}if(void 0!==e){if(this.boundingBox.setFromBufferAttribute(e),t)for(let i=0,n=t.length;i<n;i++){let r=t[i];rn.setFromBufferAttribute(r),this.morphTargetsRelative?(ra.addVectors(this.boundingBox.min,rn.min),this.boundingBox.expandByPoint(ra),ra.addVectors(this.boundingBox.max,rn.max),this.boundingBox.expandByPoint(ra)):(this.boundingBox.expandByPoint(rn.min),this.boundingBox.expandByPoint(rn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new nt);let e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new iH,1/0);return}if(e){let i=this.boundingSphere.center;if(rn.setFromBufferAttribute(e),t)for(let n=0,r=t.length;n<r;n++){let a=t[n];rr.setFromBufferAttribute(a),this.morphTargetsRelative?(ra.addVectors(rn.min,rr.min),rn.expandByPoint(ra),ra.addVectors(rn.max,rr.max),rn.expandByPoint(ra)):(rn.expandByPoint(rr.min),rn.expandByPoint(rr.max))}rn.getCenter(i);let s=0;for(let o=0,l=e.count;o<l;o++)ra.fromBufferAttribute(e,o),s=Math.max(s,i.distanceToSquared(ra));if(t)for(let h=0,u=t.length;h<u;h++){let c=t[h],d=this.morphTargetsRelative;for(let p=0,f=c.count;p<f;p++)ra.fromBufferAttribute(c,p),d&&(ri.fromBufferAttribute(e,p),ra.add(ri)),s=Math.max(s,i.distanceToSquared(ra))}this.boundingSphere.radius=Math.sqrt(s),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){let e=this.index,t=this.attributes;if(null===e||void 0===t.position||void 0===t.normal||void 0===t.uv){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}let i=e.array,n=t.position.array,r=t.normal.array,a=t.uv.array,s=n.length/3;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new n$(new Float32Array(4*s),4));let o=this.getAttribute("tangent").array,l=[],h=[];for(let u=0;u<s;u++)l[u]=new iH,h[u]=new iH;let c=new iH,d=new iH,p=new iH,f=new ic,m=new ic,g=new ic,v=new iH,x=new iH;function _(e,t,i){c.fromArray(n,3*e),d.fromArray(n,3*t),p.fromArray(n,3*i),f.fromArray(a,2*e),m.fromArray(a,2*t),g.fromArray(a,2*i),d.sub(c),p.sub(c),m.sub(f),g.sub(f);let r=1/(m.x*g.y-g.x*m.y);isFinite(r)&&(v.copy(d).multiplyScalar(g.y).addScaledVector(p,-m.y).multiplyScalar(r),x.copy(p).multiplyScalar(m.x).addScaledVector(d,-g.x).multiplyScalar(r),l[e].add(v),l[t].add(v),l[i].add(v),h[e].add(x),h[t].add(x),h[i].add(x))}let y=this.groups;0===y.length&&(y=[{start:0,count:i.length}]);for(let M=0,b=y.length;M<b;++M){let S=y[M],w=S.start,T=S.count;for(let A=w,E=w+T;A<E;A+=3)_(i[A+0],i[A+1],i[A+2])}let C=new iH,L=new iH,R=new iH,P=new iH;function I(e){R.fromArray(r,3*e),P.copy(R);let t=l[e];C.copy(t),C.sub(R.multiplyScalar(R.dot(t))).normalize(),L.crossVectors(P,t);let i=L.dot(h[e]);o[4*e]=C.x,o[4*e+1]=C.y,o[4*e+2]=C.z,o[4*e+3]=i<0?-1:1}for(let D=0,N=y.length;D<N;++D){let O=y[D],z=O.start,U=O.count;for(let B=z,F=z+U;B<F;B+=3)I(i[B+0]),I(i[B+1]),I(i[B+2])}}computeVertexNormals(){let e=this.index,t=this.getAttribute("position");if(void 0!==t){let i=this.getAttribute("normal");if(void 0===i)i=new n$(new Float32Array(3*t.count),3),this.setAttribute("normal",i);else for(let n=0,r=i.count;n<r;n++)i.setXYZ(n,0,0,0);let a=new iH,s=new iH,o=new iH,l=new iH,h=new iH,u=new iH,c=new iH,d=new iH;if(e)for(let p=0,f=e.count;p<f;p+=3){let m=e.getX(p+0),g=e.getX(p+1),v=e.getX(p+2);a.fromBufferAttribute(t,m),s.fromBufferAttribute(t,g),o.fromBufferAttribute(t,v),c.subVectors(o,s),d.subVectors(a,s),c.cross(d),l.fromBufferAttribute(i,m),h.fromBufferAttribute(i,g),u.fromBufferAttribute(i,v),l.add(c),h.add(c),u.add(c),i.setXYZ(m,l.x,l.y,l.z),i.setXYZ(g,h.x,h.y,h.z),i.setXYZ(v,u.x,u.y,u.z)}else for(let x=0,_=t.count;x<_;x+=3)a.fromBufferAttribute(t,x+0),s.fromBufferAttribute(t,x+1),o.fromBufferAttribute(t,x+2),c.subVectors(o,s),d.subVectors(a,s),c.cross(d),i.setXYZ(x+0,c.x,c.y,c.z),i.setXYZ(x+1,c.x,c.y,c.z),i.setXYZ(x+2,c.x,c.y,c.z);this.normalizeNormals(),i.needsUpdate=!0}}merge(){return console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeBufferGeometries() instead."),this}normalizeNormals(){let e=this.attributes.normal;for(let t=0,i=e.count;t<i;t++)ra.fromBufferAttribute(e,t),ra.normalize(),e.setXYZ(t,ra.x,ra.y,ra.z)}toNonIndexed(){function e(e,t){let i=e.array,n=e.itemSize,r=e.normalized,a=new i.constructor(t.length*n),s=0,o=0;for(let l=0,h=t.length;l<h;l++){s=e.isInterleavedBufferAttribute?t[l]*e.data.stride+e.offset:t[l]*n;for(let u=0;u<n;u++)a[o++]=i[s++]}return new n$(a,n,r)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;let t=new rs,i=this.index.array,n=this.attributes;for(let r in n){let a=n[r],s=e(a,i);t.setAttribute(r,s)}let o=this.morphAttributes;for(let l in o){let h=[],u=o[l];for(let c=0,d=u.length;c<d;c++){let p=u[c],f=e(p,i);h.push(f)}t.morphAttributes[l]=h}t.morphTargetsRelative=this.morphTargetsRelative;let m=this.groups;for(let g=0,v=m.length;g<v;g++){let x=m[g];t.addGroup(x.start,x.count,x.materialIndex)}return t}toJSON(){let e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),void 0!==this.parameters){let t=this.parameters;for(let i in t)void 0!==t[i]&&(e[i]=t[i]);return e}e.data={attributes:{}};let n=this.index;null!==n&&(e.data.index={type:n.array.constructor.name,array:Array.prototype.slice.call(n.array)});let r=this.attributes;for(let a in r){let s=r[a];e.data.attributes[a]=s.toJSON(e.data)}let o={},l=!1;for(let h in this.morphAttributes){let u=this.morphAttributes[h],c=[];for(let d=0,p=u.length;d<p;d++){let f=u[d];c.push(f.toJSON(e.data))}c.length>0&&(o[h]=c,l=!0)}l&&(e.data.morphAttributes=o,e.data.morphTargetsRelative=this.morphTargetsRelative);let m=this.groups;m.length>0&&(e.data.groups=JSON.parse(JSON.stringify(m)));let g=this.boundingSphere;return null!==g&&(e.data.boundingSphere={center:g.center.toArray(),radius:g.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;let t={};this.name=e.name;let i=e.index;null!==i&&this.setIndex(i.clone(t));let n=e.attributes;for(let r in n){let a=n[r];this.setAttribute(r,a.clone(t))}let s=e.morphAttributes;for(let o in s){let l=[],h=s[o];for(let u=0,c=h.length;u<c;u++)l.push(h[u].clone(t));this.morphAttributes[o]=l}this.morphTargetsRelative=e.morphTargetsRelative;let d=e.groups;for(let p=0,f=d.length;p<f;p++){let m=d[p];this.addGroup(m.start,m.count,m.materialIndex)}let g=e.boundingBox;null!==g&&(this.boundingBox=g.clone());let v=e.boundingSphere;return null!==v&&(this.boundingSphere=v.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,void 0!==e.parameters&&(this.parameters=Object.assign({},e.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}let ro=new nu,rl=new nh,rh=new nt,ru=new iH,rc=new iH,rd=new iH,rp=new iH,rf=new iH,rm=new iH,rg=new iH,rv=new iH,rx=new iH,r_=new ic,ry=new ic,rM=new ic,rb=new iH,rS=new iH;class rw extends nO{constructor(e=new rs,t=new nZ){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){let e=this.geometry,t=e.morphAttributes,i=Object.keys(t);if(i.length>0){let n=t[i[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,a=n.length;r<a;r++){let s=n[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[s]=r}}}}raycast(e,t){let i=this.geometry,n=this.material,r=this.matrixWorld;if(void 0===n||(null===i.boundingSphere&&i.computeBoundingSphere(),rh.copy(i.boundingSphere),rh.applyMatrix4(r),!1===e.ray.intersectsSphere(rh))||(ro.copy(r).invert(),rl.copy(e.ray).applyMatrix4(ro),null!==i.boundingBox&&!1===rl.intersectsBox(i.boundingBox)))return;let a,s=i.index,o=i.attributes.position,l=i.morphAttributes.position,h=i.morphTargetsRelative,u=i.attributes.uv,c=i.attributes.uv2,d=i.groups,p=i.drawRange;if(null!==s){if(Array.isArray(n))for(let f=0,m=d.length;f<m;f++){let g=d[f],v=n[g.materialIndex],x=Math.max(g.start,p.start),_=Math.min(s.count,Math.min(g.start+g.count,p.start+p.count));for(let y=x;y<_;y+=3){let M=s.getX(y),b=s.getX(y+1),S=s.getX(y+2);(a=rT(this,v,e,rl,o,l,h,u,c,M,b,S))&&(a.faceIndex=Math.floor(y/3),a.face.materialIndex=g.materialIndex,t.push(a))}}else{let w=Math.max(0,p.start),T=Math.min(s.count,p.start+p.count);for(let A=w;A<T;A+=3){let E=s.getX(A),C=s.getX(A+1),L=s.getX(A+2);(a=rT(this,n,e,rl,o,l,h,u,c,E,C,L))&&(a.faceIndex=Math.floor(A/3),t.push(a))}}}else if(void 0!==o){if(Array.isArray(n))for(let R=0,P=d.length;R<P;R++){let I=d[R],D=n[I.materialIndex],N=Math.max(I.start,p.start),O=Math.min(o.count,Math.min(I.start+I.count,p.start+p.count));for(let z=N;z<O;z+=3){let U=z+1,B=z+2;(a=rT(this,D,e,rl,o,l,h,u,c,z,U,B))&&(a.faceIndex=Math.floor(z/3),a.face.materialIndex=I.materialIndex,t.push(a))}}else{let F=Math.max(0,p.start),k=Math.min(o.count,p.start+p.count);for(let G=F;G<k;G+=3){let V=G+1,H=G+2;(a=rT(this,n,e,rl,o,l,h,u,c,G,V,H))&&(a.faceIndex=Math.floor(G/3),t.push(a))}}}}}function rT(e,t,i,n,r,a,s,o,l,h,u,c){ru.fromBufferAttribute(r,h),rc.fromBufferAttribute(r,u),rd.fromBufferAttribute(r,c);let d=e.morphTargetInfluences;if(a&&d){rg.set(0,0,0),rv.set(0,0,0),rx.set(0,0,0);for(let p=0,f=a.length;p<f;p++){let v=d[p],x=a[p];0!==v&&(rp.fromBufferAttribute(x,h),rf.fromBufferAttribute(x,u),rm.fromBufferAttribute(x,c),s?(rg.addScaledVector(rp,v),rv.addScaledVector(rf,v),rx.addScaledVector(rm,v)):(rg.addScaledVector(rp.sub(ru),v),rv.addScaledVector(rf.sub(rc),v),rx.addScaledVector(rm.sub(rd),v)))}ru.add(rg),rc.add(rv),rd.add(rx)}e.isSkinnedMesh&&(e.boneTransform(h,ru),e.boneTransform(u,rc),e.boneTransform(c,rd));let _=function(e,t,i,n,r,a,s,o){let l;if(null===(t.side===m?n.intersectTriangle(s,a,r,!0,o):n.intersectTriangle(r,a,s,t.side!==g,o)))return null;rS.copy(o),rS.applyMatrix4(e.matrixWorld);let h=i.ray.origin.distanceTo(rS);return h<i.near||h>i.far?null:{distance:h,point:rS.clone(),object:e}}(e,t,i,n,ru,rc,rd,rb);if(_){o&&(r_.fromBufferAttribute(o,h),ry.fromBufferAttribute(o,u),rM.fromBufferAttribute(o,c),_.uv=nq.getUV(rb,ru,rc,rd,r_,ry,rM,new ic)),l&&(r_.fromBufferAttribute(l,h),ry.fromBufferAttribute(l,u),rM.fromBufferAttribute(l,c),_.uv2=nq.getUV(rb,ru,rc,rd,r_,ry,rM,new ic));let y={a:h,b:u,c:c,normal:new iH,materialIndex:0};nq.getNormal(ru,rc,rd,y.normal),_.face=y}return _}class rA extends rs{constructor(e=1,t=1,i=1,n=1,r=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:i,widthSegments:n,heightSegments:r,depthSegments:a};let s=this;n=Math.floor(n),r=Math.floor(r),a=Math.floor(a);let o=[],l=[],h=[],u=[],c=0,d=0;function p(e,t,i,n,r,a,p,f,m,g,v){let x=a/m,_=p/g,y=a/2,M=p/2,b=f/2,S=m+1,w=g+1,T=0,A=0,E=new iH;for(let C=0;C<w;C++){let L=C*_-M;for(let R=0;R<S;R++){let P=R*x-y;E[e]=P*n,E[t]=L*r,E[i]=b,l.push(E.x,E.y,E.z),E[e]=0,E[t]=0,E[i]=f>0?1:-1,h.push(E.x,E.y,E.z),u.push(R/m),u.push(1-C/g),T+=1}}for(let I=0;I<g;I++)for(let D=0;D<m;D++){let N=c+D+S*I,O=c+D+S*(I+1),z=c+(D+1)+S*(I+1),U=c+(D+1)+S*I;o.push(N,O,U),o.push(O,z,U),A+=6}s.addGroup(d,A,v),d+=A,c+=T}p("z","y","x",-1,-1,i,t,e,a,r,0),p("z","y","x",1,-1,i,t,-e,a,r,1),p("x","z","y",1,1,e,i,t,n,a,2),p("x","z","y",1,-1,e,i,-t,n,a,3),p("x","y","z",1,-1,e,t,i,n,r,4),p("x","y","z",-1,-1,e,t,-i,n,r,5),this.setIndex(o),this.setAttribute("position",new n7(l,3)),this.setAttribute("normal",new n7(h,3)),this.setAttribute("uv",new n7(u,2))}static fromJSON(e){return new rA(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function rE(e){let t={};for(let i in e)for(let n in t[i]={},e[i]){let r=e[i][n];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?t[i][n]=r.clone():Array.isArray(r)?t[i][n]=r.slice():t[i][n]=r}return t}function rC(e){let t={};for(let i=0;i<e.length;i++){let n=rE(e[i]);for(let r in n)t[r]=n[r]}return t}let rL={clone:rE,merge:rC};class rR extends nY{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader="void main() {\n	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==e&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=rE(e.uniforms),this.uniformsGroups=function(e){let t=[];for(let i=0;i<e.length;i++)t.push(e[i].clone());return t}(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){let t=super.toJSON(e);for(let i in t.glslVersion=this.glslVersion,t.uniforms={},this.uniforms){let n=this.uniforms[i],r=n.value;r&&r.isTexture?t.uniforms[i]={type:"t",value:r.toJSON(e).uuid}:r&&r.isColor?t.uniforms[i]={type:"c",value:r.getHex()}:r&&r.isVector2?t.uniforms[i]={type:"v2",value:r.toArray()}:r&&r.isVector3?t.uniforms[i]={type:"v3",value:r.toArray()}:r&&r.isVector4?t.uniforms[i]={type:"v4",value:r.toArray()}:r&&r.isMatrix3?t.uniforms[i]={type:"m3",value:r.toArray()}:r&&r.isMatrix4?t.uniforms[i]={type:"m4",value:r.toArray()}:t.uniforms[i]={value:r}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;let a={};for(let s in this.extensions)!0===this.extensions[s]&&(a[s]=!0);return Object.keys(a).length>0&&(t.extensions=a),t}}class rP extends nO{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new nu,this.projectionMatrix=new nu,this.projectionMatrixInverse=new nu}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);let t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class rI extends rP{constructor(e=50,t=1,i=.1,n=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=i,this.far=n,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){let t=.5*this.getFilmHeight()/e;this.fov=2*t7*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){let e=Math.tan(.5*t6*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return 2*t7*Math.atan(Math.tan(.5*t6*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,i,n,r,a){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=n,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){let e=this.near,t=e*Math.tan(.5*t6*this.fov)/this.zoom,i=2*t,n=this.aspect*i,r=-.5*n,a=this.view;if(null!==this.view&&this.view.enabled){let s=a.fullWidth,o=a.fullHeight;r+=a.offsetX*n/s,t-=a.offsetY*i/o,n*=a.width/s,i*=a.height/o}let l=this.filmOffset;0!==l&&(r+=e*l/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+n,t,t-i,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){let t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}class rD extends nO{constructor(e,t,i){super(),this.type="CubeCamera",this.renderTarget=i;let n=new rI(90,1,e,t);n.layers=this.layers,n.up.set(0,-1,0),n.lookAt(new iH(1,0,0)),this.add(n);let r=new rI(90,1,e,t);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new iH(-1,0,0)),this.add(r);let a=new rI(90,1,e,t);a.layers=this.layers,a.up.set(0,0,1),a.lookAt(new iH(0,1,0)),this.add(a);let s=new rI(90,1,e,t);s.layers=this.layers,s.up.set(0,0,-1),s.lookAt(new iH(0,-1,0)),this.add(s);let o=new rI(90,1,e,t);o.layers=this.layers,o.up.set(0,-1,0),o.lookAt(new iH(0,0,1)),this.add(o);let l=new rI(90,1,e,t);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new iH(0,0,-1)),this.add(l)}update(e,t){null===this.parent&&this.updateMatrixWorld();let i=this.renderTarget,[n,r,a,s,o,l]=this.children,h=e.getRenderTarget(),u=e.toneMapping,c=e.xr.enabled;e.toneMapping=J,e.xr.enabled=!1;let d=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,e.setRenderTarget(i,0),e.render(t,n),e.setRenderTarget(i,1),e.render(t,r),e.setRenderTarget(i,2),e.render(t,a),e.setRenderTarget(i,3),e.render(t,s),e.setRenderTarget(i,4),e.render(t,o),i.texture.generateMipmaps=d,e.setRenderTarget(i,5),e.render(t,l),e.setRenderTarget(h),e.toneMapping=u,e.xr.enabled=c,i.texture.needsPMREMUpdate=!0}}class rN extends iN{constructor(e,t,i,n,r,a,s,o,l,h){super(e=void 0!==e?e:[],t=void 0!==t?t:en,i,n,r,a,s,o,l,h),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class rO extends iz{constructor(e,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;let i={width:e,height:e,depth:1};this.texture=new rN([i,i,i,i,i,i],t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==t.generateMipmaps&&t.generateMipmaps,this.texture.minFilter=void 0!==t.minFilter?t.minFilter:eg}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;let i={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},n=new rA(5,5,5),r=new rR({name:"CubemapFromEquirect",uniforms:rE(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:m,blending:v});r.uniforms.tEquirect.value=t;let a=new rw(n,r),s=t.minFilter;t.minFilter===e_&&(t.minFilter=eg);let o=new rD(1,10,this);return o.update(e,a),t.minFilter=s,a.geometry.dispose(),a.material.dispose(),this}clear(e,t,i,n){let r=e.getRenderTarget();for(let a=0;a<6;a++)e.setRenderTarget(this,a),e.clear(t,i,n);e.setRenderTarget(r)}}let rz=new iH,rU=new iH,rB=new id;class rF{constructor(e=new iH(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,i,n){return this.normal.set(e,t,i),this.constant=n,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,i){let n=rz.subVectors(i,t).cross(rU.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(n,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){let e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){let i=e.delta(rz),n=this.normal.dot(i);if(0===n)return 0===this.distanceToPoint(e.start)?t.copy(e.start):null;let r=-(e.start.dot(this.normal)+this.constant)/n;return r<0||r>1?null:t.copy(i).multiplyScalar(r).add(e.start)}intersectsLine(e){let t=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return t<0&&i>0||i<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){let i=t||rB.getNormalMatrix(e),n=this.coplanarPoint(rz).applyMatrix4(e),r=this.normal.applyMatrix3(i).normalize();return this.constant=-n.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}let rk=new nt,rG=new iH;class rV{constructor(e=new rF,t=new rF,i=new rF,n=new rF,r=new rF,a=new rF){this.planes=[e,t,i,n,r,a]}set(e,t,i,n,r,a){let s=this.planes;return s[0].copy(e),s[1].copy(t),s[2].copy(i),s[3].copy(n),s[4].copy(r),s[5].copy(a),this}copy(e){let t=this.planes;for(let i=0;i<6;i++)t[i].copy(e.planes[i]);return this}setFromProjectionMatrix(e){let t=this.planes,i=e.elements,n=i[0],r=i[1],a=i[2],s=i[3],o=i[4],l=i[5],h=i[6],u=i[7],c=i[8],d=i[9],p=i[10],f=i[11],m=i[12],g=i[13],v=i[14],x=i[15];return t[0].setComponents(s-n,u-o,f-c,x-m).normalize(),t[1].setComponents(s+n,u+o,f+c,x+m).normalize(),t[2].setComponents(s+r,u+l,f+d,x+g).normalize(),t[3].setComponents(s-r,u-l,f-d,x-g).normalize(),t[4].setComponents(s-a,u-h,f-p,x-v).normalize(),t[5].setComponents(s+a,u+h,f+p,x+v).normalize(),this}intersectsObject(e){let t=e.geometry;return null===t.boundingSphere&&t.computeBoundingSphere(),rk.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(rk)}intersectsSprite(e){return rk.center.set(0,0,0),rk.radius=.7071067811865476,rk.applyMatrix4(e.matrixWorld),this.intersectsSphere(rk)}intersectsSphere(e){let t=this.planes,i=e.center,n=-e.radius;for(let r=0;r<6;r++){let a=t[r].distanceToPoint(i);if(a<n)return!1}return!0}intersectsBox(e){let t=this.planes;for(let i=0;i<6;i++){let n=t[i];if(rG.x=n.normal.x>0?e.max.x:e.min.x,rG.y=n.normal.y>0?e.max.y:e.min.y,rG.z=n.normal.z>0?e.max.z:e.min.z,0>n.distanceToPoint(rG))return!1}return!0}containsPoint(e){let t=this.planes;for(let i=0;i<6;i++)if(0>t[i].distanceToPoint(e))return!1;return!0}clone(){return new this.constructor().copy(this)}}function rH(){let e=null,t=!1,i=null,n=null;function r(t,a){i(t,a),n=e.requestAnimationFrame(r)}return{start:function(){!0!==t&&null!==i&&(n=e.requestAnimationFrame(r),t=!0)},stop:function(){e.cancelAnimationFrame(n),t=!1},setAnimationLoop:function(e){i=e},setContext:function(t){e=t}}}function rW(e,t){let i=t.isWebGL2,n=new WeakMap;return{get:function(e){return e.isInterleavedBufferAttribute&&(e=e.data),n.get(e)},remove:function(t){t.isInterleavedBufferAttribute&&(t=t.data);let i=n.get(t);i&&(e.deleteBuffer(i.buffer),n.delete(t))},update:function(t,r){if(t.isGLBufferAttribute){let a=n.get(t);(!a||a.version<t.version)&&n.set(t,{buffer:t.buffer,type:t.type,bytesPerElement:t.elementSize,version:t.version});return}t.isInterleavedBufferAttribute&&(t=t.data);let s=n.get(t);void 0===s?n.set(t,function(t,n){let r=t.array,a=t.usage,s=e.createBuffer();e.bindBuffer(n,s),e.bufferData(n,r,a),t.onUploadCallback();let o;if(r instanceof Float32Array)o=5126;else if(r instanceof Uint16Array){if(t.isFloat16BufferAttribute){if(i)o=5131;else throw Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.")}else o=5123}else if(r instanceof Int16Array)o=5122;else if(r instanceof Uint32Array)o=5125;else if(r instanceof Int32Array)o=5124;else if(r instanceof Int8Array)o=5120;else if(r instanceof Uint8Array)o=5121;else if(r instanceof Uint8ClampedArray)o=5121;else throw Error("THREE.WebGLAttributes: Unsupported buffer data format: "+r);return{buffer:s,type:o,bytesPerElement:r.BYTES_PER_ELEMENT,version:t.version}}(t,r)):s.version<t.version&&(!function(t,n,r){let a=n.array,s=n.updateRange;e.bindBuffer(r,t),-1===s.count?e.bufferSubData(r,0,a):(i?e.bufferSubData(r,s.offset*a.BYTES_PER_ELEMENT,a,s.offset,s.count):e.bufferSubData(r,s.offset*a.BYTES_PER_ELEMENT,a.subarray(s.offset,s.offset+s.count)),s.count=-1)}(s.buffer,t,r),s.version=t.version)}}}class rj extends rs{constructor(e=1,t=1,i=1,n=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:i,heightSegments:n};let r=e/2,a=t/2,s=Math.floor(i),o=Math.floor(n),l=s+1,h=o+1,u=e/s,c=t/o,d=[],p=[],f=[],m=[];for(let g=0;g<h;g++){let v=g*c-a;for(let x=0;x<l;x++){let _=x*u-r;p.push(_,-v,0),f.push(0,0,1),m.push(x/s),m.push(1-g/o)}}for(let y=0;y<o;y++)for(let M=0;M<s;M++){let b=M+l*y,S=M+l*(y+1),w=M+1+l*(y+1),T=M+1+l*y;d.push(b,S,T),d.push(S,w,T)}this.setIndex(d),this.setAttribute("position",new n7(p,3)),this.setAttribute("normal",new n7(f,3)),this.setAttribute("uv",new n7(m,2))}static fromJSON(e){return new rj(e.width,e.height,e.widthSegments,e.heightSegments)}}let rq={alphamap_fragment:"#ifdef USE_ALPHAMAP\n	diffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n	uniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n	if ( diffuseColor.a < alphaTest ) discard;\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n	uniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n	reflectedLight.indirectDiffuse *= ambientOcclusion;\n	#if defined( USE_ENVMAP ) && defined( STANDARD )\n		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n	#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n	uniform sampler2D aoMap;\n	uniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n	vec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n	return RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\n	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\n    float x2 = x * x;\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n	float a2 = pow2( alpha );\n	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n	return 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n	float a2 = pow2( alpha );\n	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n	return RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\n	float alpha = pow2( roughness );\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNL = saturate( dot( normal, lightDir ) );\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float dotVH = saturate( dot( viewDir, halfDir ) );\n	vec3 F = F_Schlick( f0, f90, dotVH );\n	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n	float D = D_GGX( alpha, dotNH );\n	return F * ( V * D );\n}\n#ifdef USE_IRIDESCENCE\n	vec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {\n		float alpha = pow2( roughness );\n		vec3 halfDir = normalize( lightDir + viewDir );\n		float dotNL = saturate( dot( normal, lightDir ) );\n		float dotNV = saturate( dot( normal, viewDir ) );\n		float dotNH = saturate( dot( normal, halfDir ) );\n		float dotVH = saturate( dot( viewDir, halfDir ) );\n		vec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );\n		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n		float D = D_GGX( alpha, dotNH );\n		return F * ( V * D );\n	}\n#endif\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n	const float LUT_SIZE = 64.0;\n	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n	const float LUT_BIAS = 0.5 / LUT_SIZE;\n	float dotNV = saturate( dot( N, V ) );\n	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n	uv = uv * LUT_SCALE + LUT_BIAS;\n	return uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n	float l = length( f );\n	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n	float x = dot( v1, v2 );\n	float y = abs( x );\n	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n	float b = 3.4175940 + ( 4.1616724 + y ) * y;\n	float v = a / b;\n	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n	return cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n	vec3 lightNormal = cross( v1, v2 );\n	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n	vec3 T1, T2;\n	T1 = normalize( V - N * dot( V, N ) );\n	T2 = - cross( N, T1 );\n	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n	vec3 coords[ 4 ];\n	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n	coords[ 0 ] = normalize( coords[ 0 ] );\n	coords[ 1 ] = normalize( coords[ 1 ] );\n	coords[ 2 ] = normalize( coords[ 2 ] );\n	coords[ 3 ] = normalize( coords[ 3 ] );\n	vec3 vectorFormFactor = vec3( 0.0 );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n	return vec3( result );\n}\nfloat G_BlinnPhong_Implicit( ) {\n	return 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float dotVH = saturate( dot( viewDir, halfDir ) );\n	vec3 F = F_Schlick( specularColor, 1.0, dotVH );\n	float G = G_BlinnPhong_Implicit( );\n	float D = D_BlinnPhong( shininess, dotNH );\n	return F * ( G * D );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n	float alpha = pow2( roughness );\n	float invAlpha = 1.0 / alpha;\n	float cos2h = dotNH * dotNH;\n	float sin2h = max( 1.0 - cos2h, 0.0078125 );\n	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNL = saturate( dot( normal, lightDir ) );\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float D = D_Charlie( sheenRoughness, dotNH );\n	float V = V_Neubelt( dotNV, dotNL );\n	return sheenColor * ( D * V );\n}\n#endif",iridescence_fragment:"#ifdef USE_IRIDESCENCE\n	const mat3 XYZ_TO_REC709 = mat3(\n		 3.2404542, -0.9692660,  0.0556434,\n		-1.5371385,  1.8760108, -0.2040259,\n		-0.4985314,  0.0415560,  1.0572252\n	);\n	vec3 Fresnel0ToIor( vec3 fresnel0 ) {\n		vec3 sqrtF0 = sqrt( fresnel0 );\n		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\n	}\n	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\n		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\n	}\n	float IorToFresnel0( float transmittedIor, float incidentIor ) {\n		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\n	}\n	vec3 evalSensitivity( float OPD, vec3 shift ) {\n		float phase = 2.0 * PI * OPD * 1.0e-9;\n		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\n		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\n		xyz /= 1.0685e-7;\n		vec3 rgb = XYZ_TO_REC709 * xyz;\n		return rgb;\n	}\n	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\n		vec3 I;\n		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\n		float cosTheta2Sq = 1.0 - sinTheta2Sq;\n		if ( cosTheta2Sq < 0.0 ) {\n			 return vec3( 1.0 );\n		}\n		float cosTheta2 = sqrt( cosTheta2Sq );\n		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n		float R12 = F_Schlick( R0, 1.0, cosTheta1 );\n		float R21 = R12;\n		float T121 = 1.0 - R12;\n		float phi12 = 0.0;\n		if ( iridescenceIOR < outsideIOR ) phi12 = PI;\n		float phi21 = PI - phi12;\n		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\n		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\n		vec3 phi23 = vec3( 0.0 );\n		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\n		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\n		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\n		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n		vec3 phi = vec3( phi21 ) + phi23;\n		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\n		vec3 r123 = sqrt( R123 );\n		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\n		vec3 C0 = R12 + Rs;\n		I = C0;\n		vec3 Cm = Rs - T121;\n		for ( int m = 1; m <= 2; ++ m ) {\n			Cm *= r123;\n			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\n			I += Cm * Sm;\n		}\n		return max( I, vec3( 0.0 ) );\n	}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n	uniform sampler2D bumpMap;\n	uniform float bumpScale;\n	vec2 dHdxy_fwd() {\n		vec2 dSTdx = dFdx( vUv );\n		vec2 dSTdy = dFdy( vUv );\n		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n		return vec2( dBx, dBy );\n	}\n	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n		vec3 vSigmaX = dFdx( surf_pos.xyz );\n		vec3 vSigmaY = dFdy( surf_pos.xyz );\n		vec3 vN = surf_norm;\n		vec3 R1 = cross( vSigmaY, vN );\n		vec3 R2 = cross( vN, vSigmaX );\n		float fDet = dot( vSigmaX, R1 ) * faceDirection;\n		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n		return normalize( abs( fDet ) * surf_norm - vGrad );\n	}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n	vec4 plane;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n		plane = clippingPlanes[ i ];\n		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n	}\n	#pragma unroll_loop_end\n	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n		bool clipped = true;\n		#pragma unroll_loop_start\n		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n			plane = clippingPlanes[ i ];\n			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n		}\n		#pragma unroll_loop_end\n		if ( clipped ) discard;\n	#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n	varying vec3 vClipPosition;\n	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n	varying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n	vClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n	diffuseColor *= vColor;\n#elif defined( USE_COLOR )\n	diffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n	varying vec4 vColor;\n#elif defined( USE_COLOR )\n	varying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n	varying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n	varying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n	vColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n	vColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n	vColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n	vColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nvec3 pow2( const in vec3 x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\nhighp float rand( const in vec2 uv ) {\n	const highp float a = 12.9898, b = 78.233, c = 43758.5453;\n	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n	return fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n	float precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n	float precisionSafeLength( vec3 v ) {\n		float maxComponent = max3( abs( v ) );\n		return length( v / maxComponent ) * maxComponent;\n	}\n#endif\nstruct IncidentLight {\n	vec3 color;\n	vec3 direction;\n	bool visible;\n};\nstruct ReflectedLight {\n	vec3 directDiffuse;\n	vec3 directSpecular;\n	vec3 indirectDiffuse;\n	vec3 indirectSpecular;\n};\nstruct GeometricContext {\n	vec3 position;\n	vec3 normal;\n	vec3 viewDir;\n#ifdef USE_CLEARCOAT\n	vec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n	mat3 tmp;\n	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n	return tmp;\n}\nfloat luminance( const in vec3 rgb ) {\n	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\n	return dot( weights, rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n	return m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n	return vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n	#define cubeUV_minMipLevel 4.0\n	#define cubeUV_minTileSize 16.0\n	float getFace( vec3 direction ) {\n		vec3 absDirection = abs( direction );\n		float face = - 1.0;\n		if ( absDirection.x > absDirection.z ) {\n			if ( absDirection.x > absDirection.y )\n				face = direction.x > 0.0 ? 0.0 : 3.0;\n			else\n				face = direction.y > 0.0 ? 1.0 : 4.0;\n		} else {\n			if ( absDirection.z > absDirection.y )\n				face = direction.z > 0.0 ? 2.0 : 5.0;\n			else\n				face = direction.y > 0.0 ? 1.0 : 4.0;\n		}\n		return face;\n	}\n	vec2 getUV( vec3 direction, float face ) {\n		vec2 uv;\n		if ( face == 0.0 ) {\n			uv = vec2( direction.z, direction.y ) / abs( direction.x );\n		} else if ( face == 1.0 ) {\n			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n		} else if ( face == 2.0 ) {\n			uv = vec2( - direction.x, direction.y ) / abs( direction.z );\n		} else if ( face == 3.0 ) {\n			uv = vec2( - direction.z, direction.y ) / abs( direction.x );\n		} else if ( face == 4.0 ) {\n			uv = vec2( - direction.x, direction.z ) / abs( direction.y );\n		} else {\n			uv = vec2( direction.x, direction.y ) / abs( direction.z );\n		}\n		return 0.5 * ( uv + 1.0 );\n	}\n	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n		float face = getFace( direction );\n		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n		mipInt = max( mipInt, cubeUV_minMipLevel );\n		float faceSize = exp2( mipInt );\n		vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n		if ( face > 2.0 ) {\n			uv.y += faceSize;\n			face -= 3.0;\n		}\n		uv.x += face * faceSize;\n		uv.x += filterInt * 3.0 * cubeUV_minTileSize;\n		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n		uv.x *= CUBEUV_TEXEL_WIDTH;\n		uv.y *= CUBEUV_TEXEL_HEIGHT;\n		#ifdef texture2DGradEXT\n			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n		#else\n			return texture2D( envMap, uv ).rgb;\n		#endif\n	}\n	#define cubeUV_r0 1.0\n	#define cubeUV_v0 0.339\n	#define cubeUV_m0 - 2.0\n	#define cubeUV_r1 0.8\n	#define cubeUV_v1 0.276\n	#define cubeUV_m1 - 1.0\n	#define cubeUV_r4 0.4\n	#define cubeUV_v4 0.046\n	#define cubeUV_m4 2.0\n	#define cubeUV_r5 0.305\n	#define cubeUV_v5 0.016\n	#define cubeUV_m5 3.0\n	#define cubeUV_r6 0.21\n	#define cubeUV_v6 0.0038\n	#define cubeUV_m6 4.0\n	float roughnessToMip( float roughness ) {\n		float mip = 0.0;\n		if ( roughness >= cubeUV_r1 ) {\n			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\n		} else if ( roughness >= cubeUV_r4 ) {\n			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\n		} else if ( roughness >= cubeUV_r5 ) {\n			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\n		} else if ( roughness >= cubeUV_r6 ) {\n			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\n		} else {\n			mip = - 2.0 * log2( 1.16 * roughness );		}\n		return mip;\n	}\n	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\n		float mipF = fract( mip );\n		float mipInt = floor( mip );\n		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n		if ( mipF == 0.0 ) {\n			return vec4( color0, 1.0 );\n		} else {\n			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n			return vec4( mix( color0, color1, mipF ), 1.0 );\n		}\n	}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n	mat3 m = mat3( instanceMatrix );\n	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n	transformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n	transformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n	#ifdef FLIP_SIDED\n		transformedTangent = - transformedTangent;\n	#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n	uniform sampler2D displacementMap;\n	uniform float displacementScale;\n	uniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n	vec4 emissiveColor = texture2D( emissiveMap, vUv );\n	totalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n	uniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"vec4 LinearToLinear( in vec4 value ) {\n	return value;\n}\nvec4 LinearTosRGB( in vec4 value ) {\n	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n	#ifdef ENV_WORLDPOS\n		vec3 cameraToFrag;\n		if ( isOrthographic ) {\n			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n		} else {\n			cameraToFrag = normalize( vWorldPosition - cameraPosition );\n		}\n		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vec3 reflectVec = reflect( cameraToFrag, worldNormal );\n		#else\n			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n		#endif\n	#else\n		vec3 reflectVec = vReflect;\n	#endif\n	#ifdef ENVMAP_TYPE_CUBE\n		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n	#elif defined( ENVMAP_TYPE_CUBE_UV )\n		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n	#else\n		vec4 envColor = vec4( 0.0 );\n	#endif\n	#ifdef ENVMAP_BLENDING_MULTIPLY\n		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_MIX )\n		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_ADD )\n		outgoingLight += envColor.xyz * specularStrength * reflectivity;\n	#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n	uniform float envMapIntensity;\n	uniform float flipEnvMap;\n	#ifdef ENVMAP_TYPE_CUBE\n		uniform samplerCube envMap;\n	#else\n		uniform sampler2D envMap;\n	#endif\n	\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n	uniform float reflectivity;\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n		#define ENV_WORLDPOS\n	#endif\n	#ifdef ENV_WORLDPOS\n		varying vec3 vWorldPosition;\n		uniform float refractionRatio;\n	#else\n		varying vec3 vReflect;\n	#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n		#define ENV_WORLDPOS\n	#endif\n	#ifdef ENV_WORLDPOS\n		\n		varying vec3 vWorldPosition;\n	#else\n		varying vec3 vReflect;\n		uniform float refractionRatio;\n	#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n	vec3 getIBLIrradiance( const in vec3 normal ) {\n		#if defined( ENVMAP_TYPE_CUBE_UV )\n			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n			return PI * envMapColor.rgb * envMapIntensity;\n		#else\n			return vec3( 0.0 );\n		#endif\n	}\n	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n		#if defined( ENVMAP_TYPE_CUBE_UV )\n			vec3 reflectVec = reflect( - viewDir, normal );\n			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n			return envMapColor.rgb * envMapIntensity;\n		#else\n			return vec3( 0.0 );\n		#endif\n	}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n	#ifdef ENV_WORLDPOS\n		vWorldPosition = worldPosition.xyz;\n	#else\n		vec3 cameraToVertex;\n		if ( isOrthographic ) {\n			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n		} else {\n			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n		}\n		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vReflect = reflect( cameraToVertex, worldNormal );\n		#else\n			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n		#endif\n	#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n	vFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n	varying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n	#ifdef FOG_EXP2\n		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n	#else\n		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n	#endif\n	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n	uniform vec3 fogColor;\n	varying float vFogDepth;\n	#ifdef FOG_EXP2\n		uniform float fogDensity;\n	#else\n		uniform float fogNear;\n		uniform float fogFar;\n	#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n	uniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n	float dotNL = dot( normal, lightDirection );\n	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n	#ifdef USE_GRADIENTMAP\n		return vec3( texture2D( gradientMap, coord ).r );\n	#else\n		vec2 fw = fwidth( coord ) * 0.5;\n		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\n	#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n	vec4 lightMapTexel = texture2D( lightMap, vUv2 );\n	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n	reflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n	uniform sampler2D lightMap;\n	uniform float lightMapIntensity;\n#endif",lights_lambert_fragment:"LambertMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularStrength = specularStrength;",lights_lambert_pars_fragment:"varying vec3 vViewPosition;\nstruct LambertMaterial {\n	vec3 diffuseColor;\n	float specularStrength;\n};\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_Lambert\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert\n#define Material_LightProbeLOD( material )	(0)",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n	float x = normal.x, y = normal.y, z = normal.z;\n	vec3 result = shCoefficients[ 0 ] * 0.886227;\n	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n	return result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n	return irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n	vec3 irradiance = ambientLightColor;\n	return irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n	#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n		if ( cutoffDistance > 0.0 ) {\n			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n		}\n		return distanceFalloff;\n	#else\n		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n		}\n		return 1.0;\n	#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n	return smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n	struct DirectionalLight {\n		vec3 direction;\n		vec3 color;\n	};\n	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n		light.color = directionalLight.color;\n		light.direction = directionalLight.direction;\n		light.visible = true;\n	}\n#endif\n#if NUM_POINT_LIGHTS > 0\n	struct PointLight {\n		vec3 position;\n		vec3 color;\n		float distance;\n		float decay;\n	};\n	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n		vec3 lVector = pointLight.position - geometry.position;\n		light.direction = normalize( lVector );\n		float lightDistance = length( lVector );\n		light.color = pointLight.color;\n		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n		light.visible = ( light.color != vec3( 0.0 ) );\n	}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n	struct SpotLight {\n		vec3 position;\n		vec3 direction;\n		vec3 color;\n		float distance;\n		float decay;\n		float coneCos;\n		float penumbraCos;\n	};\n	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n		vec3 lVector = spotLight.position - geometry.position;\n		light.direction = normalize( lVector );\n		float angleCos = dot( light.direction, spotLight.direction );\n		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n		if ( spotAttenuation > 0.0 ) {\n			float lightDistance = length( lVector );\n			light.color = spotLight.color * spotAttenuation;\n			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n			light.visible = ( light.color != vec3( 0.0 ) );\n		} else {\n			light.color = vec3( 0.0 );\n			light.visible = false;\n		}\n	}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n	struct RectAreaLight {\n		vec3 color;\n		vec3 position;\n		vec3 halfWidth;\n		vec3 halfHeight;\n	};\n	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;\n	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n	struct HemisphereLight {\n		vec3 direction;\n		vec3 skyColor;\n		vec3 groundColor;\n	};\n	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n		float dotNL = dot( normal, hemiLight.direction );\n		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n		return irradiance;\n	}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n	vec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_Toon\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )	(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n	vec3 diffuseColor;\n	vec3 specularColor;\n	float specularShininess;\n	float specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_BlinnPhong\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )	(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n	material.ior = ior;\n	#ifdef SPECULAR\n		float specularIntensityFactor = specularIntensity;\n		vec3 specularColorFactor = specularColor;\n		#ifdef USE_SPECULARINTENSITYMAP\n			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\n		#endif\n		#ifdef USE_SPECULARCOLORMAP\n			specularColorFactor *= texture2D( specularColorMap, vUv ).rgb;\n		#endif\n		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n	#else\n		float specularIntensityFactor = 1.0;\n		vec3 specularColorFactor = vec3( 1.0 );\n		material.specularF90 = 1.0;\n	#endif\n	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n	material.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n	material.clearcoat = clearcoat;\n	material.clearcoatRoughness = clearcoatRoughness;\n	material.clearcoatF0 = vec3( 0.04 );\n	material.clearcoatF90 = 1.0;\n	#ifdef USE_CLEARCOATMAP\n		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n	#endif\n	#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n	#endif\n	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n	material.clearcoatRoughness += geometryRoughness;\n	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_IRIDESCENCE\n	material.iridescence = iridescence;\n	material.iridescenceIOR = iridescenceIOR;\n	#ifdef USE_IRIDESCENCEMAP\n		material.iridescence *= texture2D( iridescenceMap, vUv ).r;\n	#endif\n	#ifdef USE_IRIDESCENCE_THICKNESSMAP\n		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;\n	#else\n		material.iridescenceThickness = iridescenceThicknessMaximum;\n	#endif\n#endif\n#ifdef USE_SHEEN\n	material.sheenColor = sheenColor;\n	#ifdef USE_SHEENCOLORMAP\n		material.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;\n	#endif\n	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n	#ifdef USE_SHEENROUGHNESSMAP\n		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\n	#endif\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n	vec3 diffuseColor;\n	float roughness;\n	vec3 specularColor;\n	float specularF90;\n	#ifdef USE_CLEARCOAT\n		float clearcoat;\n		float clearcoatRoughness;\n		vec3 clearcoatF0;\n		float clearcoatF90;\n	#endif\n	#ifdef USE_IRIDESCENCE\n		float iridescence;\n		float iridescenceIOR;\n		float iridescenceThickness;\n		vec3 iridescenceFresnel;\n		vec3 iridescenceF0;\n	#endif\n	#ifdef USE_SHEEN\n		vec3 sheenColor;\n		float sheenRoughness;\n	#endif\n	#ifdef IOR\n		float ior;\n	#endif\n	#ifdef USE_TRANSMISSION\n		float transmission;\n		float transmissionAlpha;\n		float thickness;\n		float attenuationDistance;\n		vec3 attenuationColor;\n	#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec3 sheenSpecular = vec3( 0.0 );\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float r2 = roughness * roughness;\n	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n	return saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n	float dotNV = saturate( dot( normal, viewDir ) );\n	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n	vec4 r = roughness * c0 + c1;\n	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n	return fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n	vec2 fab = DFGApprox( normal, viewDir, roughness );\n	return specularColor * fab.x + specularF90 * fab.y;\n}\n#ifdef USE_IRIDESCENCE\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#else\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#endif\n	vec2 fab = DFGApprox( normal, viewDir, roughness );\n	#ifdef USE_IRIDESCENCE\n		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );\n	#else\n		vec3 Fr = specularColor;\n	#endif\n	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;\n	float Ess = fab.x + fab.y;\n	float Ems = 1.0 - Ess;\n	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n	singleScatter += FssEss;\n	multiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n		vec3 normal = geometry.normal;\n		vec3 viewDir = geometry.viewDir;\n		vec3 position = geometry.position;\n		vec3 lightPos = rectAreaLight.position;\n		vec3 halfWidth = rectAreaLight.halfWidth;\n		vec3 halfHeight = rectAreaLight.halfHeight;\n		vec3 lightColor = rectAreaLight.color;\n		float roughness = material.roughness;\n		vec3 rectCoords[ 4 ];\n		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n		vec2 uv = LTC_Uv( normal, viewDir, roughness );\n		vec4 t1 = texture2D( ltc_1, uv );\n		vec4 t2 = texture2D( ltc_2, uv );\n		mat3 mInv = mat3(\n			vec3( t1.x, 0, t1.y ),\n			vec3(    0, 1,    0 ),\n			vec3( t1.z, 0, t1.w )\n		);\n		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n	}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	#ifdef USE_CLEARCOAT\n		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n		vec3 ccIrradiance = dotNLcc * directLight.color;\n		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n	#endif\n	#ifdef USE_SHEEN\n		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\n	#endif\n	#ifdef USE_IRIDESCENCE\n		reflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );\n	#else\n		reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\n	#endif\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n	#ifdef USE_CLEARCOAT\n		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n	#endif\n	#ifdef USE_SHEEN\n		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\n	#endif\n	vec3 singleScattering = vec3( 0.0 );\n	vec3 multiScattering = vec3( 0.0 );\n	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n	#ifdef USE_IRIDESCENCE\n		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\n	#else\n		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n	#endif\n	vec3 totalScattering = singleScattering + multiScattering;\n	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\n	reflectedLight.indirectSpecular += radiance * singleScattering;\n	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct				RE_Direct_Physical\n#define RE_Direct_RectArea		RE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular		RE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n	geometry.clearcoatNormal = clearcoatNormal;\n#endif\n#ifdef USE_IRIDESCENCE\n	float dotNVi = saturate( dot( normal, geometry.viewDir ) );\n	if ( material.iridescenceThickness == 0.0 ) {\n		material.iridescence = 0.0;\n	} else {\n		material.iridescence = saturate( material.iridescence );\n	}\n	if ( material.iridescence > 0.0 ) {\n		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n	}\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n	PointLight pointLight;\n	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n	PointLightShadow pointLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		pointLight = pointLights[ i ];\n		getPointLightInfo( pointLight, geometry, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n		pointLightShadow = pointLightShadows[ i ];\n		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n	SpotLight spotLight;\n	vec4 spotColor;\n	vec3 spotLightCoord;\n	bool inSpotLightMap;\n	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n	SpotLightShadow spotLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		spotLight = spotLights[ i ];\n		getSpotLightInfo( spotLight, geometry, directLight );\n		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\n		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\n		#else\n		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n		#endif\n		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\n			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\n			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\n			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\n			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\n		#endif\n		#undef SPOT_LIGHT_MAP_INDEX\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n		spotLightShadow = spotLightShadows[ i ];\n		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n	DirectionalLight directionalLight;\n	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n	DirectionalLightShadow directionalLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		directionalLight = directionalLights[ i ];\n		getDirectionalLightInfo( directionalLight, geometry, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n		directionalLightShadow = directionalLightShadows[ i ];\n		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n	RectAreaLight rectAreaLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n		rectAreaLight = rectAreaLights[ i ];\n		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n	vec3 iblIrradiance = vec3( 0.0 );\n	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n	#if ( NUM_HEMI_LIGHTS > 0 )\n		#pragma unroll_loop_start\n		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n		}\n		#pragma unroll_loop_end\n	#endif\n#endif\n#if defined( RE_IndirectSpecular )\n	vec3 radiance = vec3( 0.0 );\n	vec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n	#ifdef USE_LIGHTMAP\n		vec4 lightMapTexel = texture2D( lightMap, vUv2 );\n		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n		irradiance += lightMapIrradiance;\n	#endif\n	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n		iblIrradiance += getIBLIrradiance( geometry.normal );\n	#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n	#ifdef USE_CLEARCOAT\n		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n	#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n	uniform float logDepthBufFC;\n	varying float vFragDepth;\n	varying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n	#ifdef USE_LOGDEPTHBUF_EXT\n		varying float vFragDepth;\n		varying float vIsPerspective;\n	#else\n		uniform float logDepthBufFC;\n	#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n	#ifdef USE_LOGDEPTHBUF_EXT\n		vFragDepth = 1.0 + gl_Position.w;\n		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n	#else\n		if ( isPerspectiveMatrix( projectionMatrix ) ) {\n			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n			gl_Position.z *= gl_Position.w;\n		}\n	#endif\n#endif",map_fragment:"#ifdef USE_MAP\n	vec4 sampledDiffuseColor = texture2D( map, vUv );\n	#ifdef DECODE_VIDEO_TEXTURE\n		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\n	#endif\n	diffuseColor *= sampledDiffuseColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n	uniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n	diffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n	diffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n	uniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n	uniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n	uniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n	vec4 texelMetalness = texture2D( metalnessMap, vUv );\n	metalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n	uniform sampler2D metalnessMap;\n#endif",morphcolor_vertex:"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\n	vColor *= morphTargetBaseInfluence;\n	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n		#if defined( USE_COLOR_ALPHA )\n			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n		#elif defined( USE_COLOR )\n			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n		#endif\n	}\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n	objectNormal *= morphTargetBaseInfluence;\n	#ifdef MORPHTARGETS_TEXTURE\n		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n		}\n	#else\n		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n	#endif\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n	uniform float morphTargetBaseInfluence;\n	#ifdef MORPHTARGETS_TEXTURE\n		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n		uniform sampler2DArray morphTargetsTexture;\n		uniform ivec2 morphTargetsTextureSize;\n		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n			int y = texelIndex / morphTargetsTextureSize.x;\n			int x = texelIndex - y * morphTargetsTextureSize.x;\n			ivec3 morphUV = ivec3( x, y, morphTargetIndex );\n			return texelFetch( morphTargetsTexture, morphUV, 0 );\n		}\n	#else\n		#ifndef USE_MORPHNORMALS\n			uniform float morphTargetInfluences[ 8 ];\n		#else\n			uniform float morphTargetInfluences[ 4 ];\n		#endif\n	#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n	transformed *= morphTargetBaseInfluence;\n	#ifdef MORPHTARGETS_TEXTURE\n		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n		}\n	#else\n		transformed += morphTarget0 * morphTargetInfluences[ 0 ];\n		transformed += morphTarget1 * morphTargetInfluences[ 1 ];\n		transformed += morphTarget2 * morphTargetInfluences[ 2 ];\n		transformed += morphTarget3 * morphTargetInfluences[ 3 ];\n		#ifndef USE_MORPHNORMALS\n			transformed += morphTarget4 * morphTargetInfluences[ 4 ];\n			transformed += morphTarget5 * morphTargetInfluences[ 5 ];\n			transformed += morphTarget6 * morphTargetInfluences[ 6 ];\n			transformed += morphTarget7 * morphTargetInfluences[ 7 ];\n		#endif\n	#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n	vec3 normal = normalize( cross( fdx, fdy ) );\n#else\n	vec3 normal = normalize( vNormal );\n	#ifdef DOUBLE_SIDED\n		normal = normal * faceDirection;\n	#endif\n	#ifdef USE_TANGENT\n		vec3 tangent = normalize( vTangent );\n		vec3 bitangent = normalize( vBitangent );\n		#ifdef DOUBLE_SIDED\n			tangent = tangent * faceDirection;\n			bitangent = bitangent * faceDirection;\n		#endif\n		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n			mat3 vTBN = mat3( tangent, bitangent, normal );\n		#endif\n	#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n	#ifdef FLIP_SIDED\n		normal = - normal;\n	#endif\n	#ifdef DOUBLE_SIDED\n		normal = normal * faceDirection;\n	#endif\n	normal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n	mapN.xy *= normalScale;\n	#ifdef USE_TANGENT\n		normal = normalize( vTBN * mapN );\n	#else\n		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\n	#endif\n#elif defined( USE_BUMPMAP )\n	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n	vNormal = normalize( transformedNormal );\n	#ifdef USE_TANGENT\n		vTangent = normalize( transformedTangent );\n		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n	#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n	uniform sampler2D normalMap;\n	uniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n	uniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n		vec3 q0 = dFdx( eye_pos.xyz );\n		vec3 q1 = dFdy( eye_pos.xyz );\n		vec2 st0 = dFdx( vUv.st );\n		vec2 st1 = dFdy( vUv.st );\n		vec3 N = surf_norm;\n		vec3 q1perp = cross( q1, N );\n		vec3 q0perp = cross( N, q0 );\n		vec3 T = q1perp * st0.x + q0perp * st1.x;\n		vec3 B = q1perp * st0.y + q0perp * st1.y;\n		float det = max( dot( T, T ), dot( B, B ) );\n		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n	}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n	vec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n	clearcoatMapN.xy *= clearcoatNormalScale;\n	#ifdef USE_TANGENT\n		clearcoatNormal = normalize( vTBN * clearcoatMapN );\n	#else\n		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n	#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n	uniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n	uniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	uniform sampler2D clearcoatNormalMap;\n	uniform vec2 clearcoatNormalScale;\n#endif",iridescence_pars_fragment:"#ifdef USE_IRIDESCENCEMAP\n	uniform sampler2D iridescenceMap;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n	uniform sampler2D iridescenceThicknessMap;\n#endif",output_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= material.transmissionAlpha + 0.1;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n	return normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n	return 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n	vec4 r = vec4( fract( v * PackFactors ), v );\n	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n	return dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n	return ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n	return linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n	return ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n	gl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n	mvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n	gl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n	vec3 dithering( vec3 color ) {\n		float grid_position = rand( gl_FragCoord.xy );\n		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n		return color + dither_shift_RGB;\n	}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n	vec4 texelRoughness = texture2D( roughnessMap, vUv );\n	roughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n	uniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#if NUM_SPOT_LIGHT_COORDS > 0\n  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#if NUM_SPOT_LIGHT_MAPS > 0\n  uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\n#endif\n#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n		struct DirectionalLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n		struct SpotLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n		struct PointLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n			float shadowCameraNear;\n			float shadowCameraFar;\n		};\n		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n	#endif\n	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n	}\n	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n		return unpackRGBATo2Half( texture2D( shadow, uv ) );\n	}\n	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n		float occlusion = 1.0;\n		vec2 distribution = texture2DDistribution( shadow, uv );\n		float hard_shadow = step( compare , distribution.x );\n		if (hard_shadow != 1.0 ) {\n			float distance = compare - distribution.x ;\n			float variance = max( 0.00000, distribution.y * distribution.y );\n			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n		}\n		return occlusion;\n	}\n	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n		float shadow = 1.0;\n		shadowCoord.xyz /= shadowCoord.w;\n		shadowCoord.z += shadowBias;\n		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n		bool inFrustum = all( inFrustumVec );\n		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n		bool frustumTest = all( frustumTestVec );\n		if ( frustumTest ) {\n		#if defined( SHADOWMAP_TYPE_PCF )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx0 = - texelSize.x * shadowRadius;\n			float dy0 = - texelSize.y * shadowRadius;\n			float dx1 = + texelSize.x * shadowRadius;\n			float dy1 = + texelSize.y * shadowRadius;\n			float dx2 = dx0 / 2.0;\n			float dy2 = dy0 / 2.0;\n			float dx3 = dx1 / 2.0;\n			float dy3 = dy1 / 2.0;\n			shadow = (\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n			) * ( 1.0 / 17.0 );\n		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx = texelSize.x;\n			float dy = texelSize.y;\n			vec2 uv = shadowCoord.xy;\n			vec2 f = fract( uv * shadowMapSize + 0.5 );\n			uv -= f * texelSize;\n			shadow = (\n				texture2DCompare( shadowMap, uv, shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\n					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n					 f.x ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\n					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n					 f.x ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\n					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n					 f.y ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\n					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n					 f.y ) +\n				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\n						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n						  f.x ),\n					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\n						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n						  f.x ),\n					 f.y )\n			) * ( 1.0 / 9.0 );\n		#elif defined( SHADOWMAP_TYPE_VSM )\n			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#else\n			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#endif\n		}\n		return shadow;\n	}\n	vec2 cubeToUV( vec3 v, float texelSizeY ) {\n		vec3 absV = abs( v );\n		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n		absV *= scaleToCube;\n		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n		vec2 planar = v.xy;\n		float almostATexel = 1.5 * texelSizeY;\n		float almostOne = 1.0 - almostATexel;\n		if ( absV.z >= almostOne ) {\n			if ( v.z > 0.0 )\n				planar.x = 4.0 - v.x;\n		} else if ( absV.x >= almostOne ) {\n			float signX = sign( v.x );\n			planar.x = v.z * signX + 2.0 * signX;\n		} else if ( absV.y >= almostOne ) {\n			float signY = sign( v.y );\n			planar.x = v.x + 2.0 * signY + 2.0;\n			planar.y = v.z * signY - 2.0;\n		}\n		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n	}\n	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n		vec3 lightToPosition = shadowCoord.xyz;\n		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;\n		vec3 bd3D = normalize( lightToPosition );\n		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n			return (\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n			) * ( 1.0 / 9.0 );\n		#else\n			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n		#endif\n	}\n#endif",shadowmap_pars_vertex:"#if NUM_SPOT_LIGHT_COORDS > 0\n  uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\n  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n		struct DirectionalLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n		struct SpotLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n		struct PointLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n			float shadowCameraNear;\n			float shadowCameraFar;\n		};\n		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n	#endif\n#endif",shadowmap_vertex:"#if defined( USE_SHADOWMAP ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\n	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_COORDS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n		vec4 shadowWorldPosition;\n	#endif\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_SPOT_LIGHT_COORDS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\n		shadowWorldPosition = worldPosition;\n		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\n		#endif\n		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n	}\n	#pragma unroll_loop_end\n	#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n	float shadow = 1.0;\n	#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n	DirectionalLightShadow directionalLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n		directionalLight = directionalLightShadows[ i ];\n		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n	SpotLightShadow spotLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n		spotLight = spotLightShadows[ i ];\n		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n	PointLightShadow pointLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n		pointLight = pointLightShadows[ i ];\n		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#endif\n	return shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n	mat4 boneMatX = getBoneMatrix( skinIndex.x );\n	mat4 boneMatY = getBoneMatrix( skinIndex.y );\n	mat4 boneMatZ = getBoneMatrix( skinIndex.z );\n	mat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n	uniform mat4 bindMatrix;\n	uniform mat4 bindMatrixInverse;\n	uniform highp sampler2D boneTexture;\n	uniform int boneTextureSize;\n	mat4 getBoneMatrix( const in float i ) {\n		float j = i * 4.0;\n		float x = mod( j, float( boneTextureSize ) );\n		float y = floor( j / float( boneTextureSize ) );\n		float dx = 1.0 / float( boneTextureSize );\n		float dy = 1.0 / float( boneTextureSize );\n		y = dy * ( y + 0.5 );\n		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n		mat4 bone = mat4( v1, v2, v3, v4 );\n		return bone;\n	}\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n	vec4 skinned = vec4( 0.0 );\n	skinned += boneMatX * skinVertex * skinWeight.x;\n	skinned += boneMatY * skinVertex * skinWeight.y;\n	skinned += boneMatZ * skinVertex * skinWeight.z;\n	skinned += boneMatW * skinVertex * skinWeight.w;\n	transformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n	mat4 skinMatrix = mat4( 0.0 );\n	skinMatrix += skinWeight.x * boneMatX;\n	skinMatrix += skinWeight.y * boneMatY;\n	skinMatrix += skinWeight.z * boneMatZ;\n	skinMatrix += skinWeight.w * boneMatW;\n	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n	#ifdef USE_TANGENT\n		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n	#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n	vec4 texelSpecular = texture2D( specularMap, vUv );\n	specularStrength = texelSpecular.r;\n#else\n	specularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n	uniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n	return toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	return saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	color = max( vec3( 0.0 ), color - 0.004 );\n	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n	return a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n	const mat3 ACESInputMat = mat3(\n		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),\n		vec3( 0.04823, 0.01566, 0.83777 )\n	);\n	const mat3 ACESOutputMat = mat3(\n		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),\n		vec3( -0.07367, -0.00605,  1.07602 )\n	);\n	color *= toneMappingExposure / 0.6;\n	color = ACESInputMat * color;\n	color = RRTAndODTFit( color );\n	color = ACESOutputMat * color;\n	return saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n	material.transmission = transmission;\n	material.transmissionAlpha = 1.0;\n	material.thickness = thickness;\n	material.attenuationDistance = attenuationDistance;\n	material.attenuationColor = attenuationColor;\n	#ifdef USE_TRANSMISSIONMAP\n		material.transmission *= texture2D( transmissionMap, vUv ).r;\n	#endif\n	#ifdef USE_THICKNESSMAP\n		material.thickness *= texture2D( thicknessMap, vUv ).g;\n	#endif\n	vec3 pos = vWorldPosition;\n	vec3 v = normalize( cameraPosition - pos );\n	vec3 n = inverseTransformDirection( normal, viewMatrix );\n	vec4 transmission = getIBLVolumeRefraction(\n		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\n		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\n		material.attenuationColor, material.attenuationDistance );\n	material.transmissionAlpha = mix( material.transmissionAlpha, transmission.a, material.transmission );\n	totalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n	uniform float transmission;\n	uniform float thickness;\n	uniform float attenuationDistance;\n	uniform vec3 attenuationColor;\n	#ifdef USE_TRANSMISSIONMAP\n		uniform sampler2D transmissionMap;\n	#endif\n	#ifdef USE_THICKNESSMAP\n		uniform sampler2D thicknessMap;\n	#endif\n	uniform vec2 transmissionSamplerSize;\n	uniform sampler2D transmissionSamplerMap;\n	uniform mat4 modelMatrix;\n	uniform mat4 projectionMatrix;\n	varying vec3 vWorldPosition;\n	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n		vec3 modelScale;\n		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n		return normalize( refractionVector ) * thickness * modelScale;\n	}\n	float applyIorToRoughness( const in float roughness, const in float ior ) {\n		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n	}\n	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n		#ifdef texture2DLodEXT\n			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n		#else\n			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n		#endif\n	}\n	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n		if ( attenuationDistance == 0.0 ) {\n			return radiance;\n		} else {\n			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;\n		}\n	}\n	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\n		const in vec3 attenuationColor, const in float attenuationDistance ) {\n		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n		vec3 refractedRayExit = position + transmissionRay;\n		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n		vec2 refractionCoords = ndcPos.xy / ndcPos.w;\n		refractionCoords += 1.0;\n		refractionCoords /= 2.0;\n		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n	}\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n	varying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n	#ifdef UVS_VERTEX_ONLY\n		vec2 vUv;\n	#else\n		varying vec2 vUv;\n	#endif\n	uniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	varying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	attribute vec2 uv2;\n	varying vec2 vUv2;\n	uniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\n	vec4 worldPosition = vec4( transformed, 1.0 );\n	#ifdef USE_INSTANCING\n		worldPosition = instanceMatrix * worldPosition;\n	#endif\n	worldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n	gl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n	gl_FragColor = texture2D( t2D, vUv );\n	#ifdef DECODE_VIDEO_TEXTURE\n		gl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );\n	#endif\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n	gl_Position.z = gl_Position.w;\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n	vec3 vReflect = vWorldDirection;\n	#include <envmap_fragment>\n	gl_FragColor = envColor;\n	gl_FragColor.a *= opacity;\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n	#include <uv_vertex>\n	#include <skinbase_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n	uniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( 1.0 );\n	#if DEPTH_PACKING == 3200\n		diffuseColor.a = opacity;\n	#endif\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <logdepthbuf_fragment>\n	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n	#if DEPTH_PACKING == 3200\n		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n	#elif DEPTH_PACKING == 3201\n		gl_FragColor = packDepthToRGBA( fragCoordZ );\n	#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <skinbase_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <worldpos_vertex>\n	#include <clipping_planes_vertex>\n	vWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( 1.0 );\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	float dist = length( vWorldPosition - referencePosition );\n	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n	dist = saturate( dist );\n	gl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vec3 direction = normalize( vWorldDirection );\n	vec2 sampleUV = equirectUv( direction );\n	gl_FragColor = texture2D( tEquirect, sampleUV );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	vLineDistance = scale * lineDistance;\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	if ( mod( vLineDistance, totalSize ) > dashSize ) {\n		discard;\n	}\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <color_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinbase_vertex>\n		#include <skinnormal_vertex>\n		#include <defaultnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	#ifdef USE_LIGHTMAP\n		vec4 lightMapTexel = texture2D( lightMap, vUv2 );\n		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n	#else\n		reflectedLight.indirectDiffuse += vec3( 1.0 );\n	#endif\n	#include <aomap_fragment>\n	reflectedLight.indirectDiffuse *= diffuseColor.rgb;\n	vec3 outgoingLight = reflectedLight.indirectDiffuse;\n	#include <envmap_fragment>\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshlambert_frag:"#define LAMBERT\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_lambert_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_lambert_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n	vViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	vec3 viewDir = normalize( vViewPosition );\n	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n	vec3 y = cross( viewDir, x );\n	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n	#ifdef USE_MATCAP\n		vec4 matcapColor = texture2D( matcap, uv );\n	#else\n		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n	#endif\n	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n	varying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n	vViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n	varying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	#include <logdepthbuf_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n	#ifdef OPAQUE\n		gl_FragColor.a = 1.0;\n	#endif\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_phong_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n	varying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n	vWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n	#define IOR\n	#define SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n	uniform float ior;\n#endif\n#ifdef SPECULAR\n	uniform float specularIntensity;\n	uniform vec3 specularColor;\n	#ifdef USE_SPECULARINTENSITYMAP\n		uniform sampler2D specularIntensityMap;\n	#endif\n	#ifdef USE_SPECULARCOLORMAP\n		uniform sampler2D specularColorMap;\n	#endif\n#endif\n#ifdef USE_CLEARCOAT\n	uniform float clearcoat;\n	uniform float clearcoatRoughness;\n#endif\n#ifdef USE_IRIDESCENCE\n	uniform float iridescence;\n	uniform float iridescenceIOR;\n	uniform float iridescenceThicknessMinimum;\n	uniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n	uniform vec3 sheenColor;\n	uniform float sheenRoughness;\n	#ifdef USE_SHEENCOLORMAP\n		uniform sampler2D sheenColorMap;\n	#endif\n	#ifdef USE_SHEENROUGHNESSMAP\n		uniform sampler2D sheenRoughnessMap;\n	#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <roughnessmap_fragment>\n	#include <metalnessmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <clearcoat_normal_fragment_begin>\n	#include <clearcoat_normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_physical_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n	#include <transmission_fragment>\n	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n	#ifdef USE_SHEEN\n		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\n	#endif\n	#ifdef USE_CLEARCOAT\n		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\n	#endif\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_toon_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	gl_PointSize = size;\n	#ifdef USE_SIZEATTENUATION\n		bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n	#endif\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_particle_fragment>\n	#include <color_fragment>\n	#include <alphatest_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n	vec2 scale;\n	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n	#ifndef USE_SIZEATTENUATION\n		bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n		if ( isPerspective ) scale *= - mvPosition.z;\n	#endif\n	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n	vec2 rotatedPosition;\n	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n	mvPosition.xy += rotatedPosition;\n	gl_Position = projectionMatrix * mvPosition;\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}"},rX={common:{diffuse:{value:new iC(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new id},uv2Transform:{value:new id},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new ic(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new iC(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new iC(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new id}},sprite:{diffuse:{value:new iC(16777215)},opacity:{value:1},center:{value:new ic(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new id}}},rY={basic:{uniforms:rC([rX.common,rX.specularmap,rX.envmap,rX.aomap,rX.lightmap,rX.fog]),vertexShader:rq.meshbasic_vert,fragmentShader:rq.meshbasic_frag},lambert:{uniforms:rC([rX.common,rX.specularmap,rX.envmap,rX.aomap,rX.lightmap,rX.emissivemap,rX.bumpmap,rX.normalmap,rX.displacementmap,rX.fog,rX.lights,{emissive:{value:new iC(0)}}]),vertexShader:rq.meshlambert_vert,fragmentShader:rq.meshlambert_frag},phong:{uniforms:rC([rX.common,rX.specularmap,rX.envmap,rX.aomap,rX.lightmap,rX.emissivemap,rX.bumpmap,rX.normalmap,rX.displacementmap,rX.fog,rX.lights,{emissive:{value:new iC(0)},specular:{value:new iC(1118481)},shininess:{value:30}}]),vertexShader:rq.meshphong_vert,fragmentShader:rq.meshphong_frag},standard:{uniforms:rC([rX.common,rX.envmap,rX.aomap,rX.lightmap,rX.emissivemap,rX.bumpmap,rX.normalmap,rX.displacementmap,rX.roughnessmap,rX.metalnessmap,rX.fog,rX.lights,{emissive:{value:new iC(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:rq.meshphysical_vert,fragmentShader:rq.meshphysical_frag},toon:{uniforms:rC([rX.common,rX.aomap,rX.lightmap,rX.emissivemap,rX.bumpmap,rX.normalmap,rX.displacementmap,rX.gradientmap,rX.fog,rX.lights,{emissive:{value:new iC(0)}}]),vertexShader:rq.meshtoon_vert,fragmentShader:rq.meshtoon_frag},matcap:{uniforms:rC([rX.common,rX.bumpmap,rX.normalmap,rX.displacementmap,rX.fog,{matcap:{value:null}}]),vertexShader:rq.meshmatcap_vert,fragmentShader:rq.meshmatcap_frag},points:{uniforms:rC([rX.points,rX.fog]),vertexShader:rq.points_vert,fragmentShader:rq.points_frag},dashed:{uniforms:rC([rX.common,rX.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:rq.linedashed_vert,fragmentShader:rq.linedashed_frag},depth:{uniforms:rC([rX.common,rX.displacementmap]),vertexShader:rq.depth_vert,fragmentShader:rq.depth_frag},normal:{uniforms:rC([rX.common,rX.bumpmap,rX.normalmap,rX.displacementmap,{opacity:{value:1}}]),vertexShader:rq.meshnormal_vert,fragmentShader:rq.meshnormal_frag},sprite:{uniforms:rC([rX.sprite,rX.fog]),vertexShader:rq.sprite_vert,fragmentShader:rq.sprite_frag},background:{uniforms:{uvTransform:{value:new id},t2D:{value:null}},vertexShader:rq.background_vert,fragmentShader:rq.background_frag},cube:{uniforms:rC([rX.envmap,{opacity:{value:1}}]),vertexShader:rq.cube_vert,fragmentShader:rq.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:rq.equirect_vert,fragmentShader:rq.equirect_frag},distanceRGBA:{uniforms:rC([rX.common,rX.displacementmap,{referencePosition:{value:new iH},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:rq.distanceRGBA_vert,fragmentShader:rq.distanceRGBA_frag},shadow:{uniforms:rC([rX.lights,rX.fog,{color:{value:new iC(0)},opacity:{value:1}},]),vertexShader:rq.shadow_vert,fragmentShader:rq.shadow_frag}};function rZ(e,t,i,n,r,a){let s=new iC(0),o=!0===r?0:1,l,h,u=null,c=0,d=null;function p(e,t){i.buffers.color.setClear(e.r,e.g,e.b,t,a)}return{getClearColor:function(){return s},setClearColor:function(e,t=1){s.set(e),p(s,o=t)},getClearAlpha:function(){return o},setClearAlpha:function(e){p(s,o=e)},render:function(i,r){let a=!1,g=!0===r.isScene?r.background:null;g&&g.isTexture&&(g=t.get(g));let v=e.xr,x=v.getSession&&v.getSession();x&&"additive"===x.environmentBlendMode&&(g=null),null===g?p(s,o):g&&g.isColor&&(p(g,1),a=!0),(e.autoClear||a)&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),g&&(g.isCubeTexture||g.mapping===eo)?(void 0===h&&((h=new rw(new rA(1,1,1),new rR({name:"BackgroundCubeMaterial",uniforms:rE(rY.cube.uniforms),vertexShader:rY.cube.vertexShader,fragmentShader:rY.cube.fragmentShader,side:m,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),h.geometry.deleteAttribute("uv"),h.onBeforeRender=function(e,t,i){this.matrixWorld.copyPosition(i.matrixWorld)},Object.defineProperty(h.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(h)),h.material.uniforms.envMap.value=g,h.material.uniforms.flipEnvMap.value=g.isCubeTexture&&!1===g.isRenderTargetTexture?-1:1,(u!==g||c!==g.version||d!==e.toneMapping)&&(h.material.needsUpdate=!0,u=g,c=g.version,d=e.toneMapping),h.layers.enableAll(),i.unshift(h,h.geometry,h.material,0,0,null)):g&&g.isTexture&&(void 0===l&&((l=new rw(new rj(2,2),new rR({name:"BackgroundMaterial",uniforms:rE(rY.background.uniforms),vertexShader:rY.background.vertexShader,fragmentShader:rY.background.fragmentShader,side:f,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(l)),l.material.uniforms.t2D.value=g,!0===g.matrixAutoUpdate&&g.updateMatrix(),l.material.uniforms.uvTransform.value.copy(g.matrix),(u!==g||c!==g.version||d!==e.toneMapping)&&(l.material.needsUpdate=!0,u=g,c=g.version,d=e.toneMapping),l.layers.enableAll(),i.unshift(l,l.geometry,l.material,0,0,null))}}}function rJ(e,t,i,n){let r=e.getParameter(34921),a=n.isWebGL2?null:t.get("OES_vertex_array_object"),s=n.isWebGL2||null!==a,o={},l=p(null),h=l,u=!1;function c(t){return n.isWebGL2?e.bindVertexArray(t):a.bindVertexArrayOES(t)}function d(t){return n.isWebGL2?e.deleteVertexArray(t):a.deleteVertexArrayOES(t)}function p(e){let t=[],i=[],n=[];for(let a=0;a<r;a++)t[a]=0,i[a]=0,n[a]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:t,enabledAttributes:i,attributeDivisors:n,object:e,attributes:{},index:null}}function f(){let e=h.newAttributes;for(let t=0,i=e.length;t<i;t++)e[t]=0}function m(e){g(e,0)}function g(i,r){let a=h.newAttributes,s=h.enabledAttributes,o=h.attributeDivisors;if(a[i]=1,0===s[i]&&(e.enableVertexAttribArray(i),s[i]=1),o[i]!==r){let l=n.isWebGL2?e:t.get("ANGLE_instanced_arrays");l[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](i,r),o[i]=r}}function v(){let t=h.newAttributes,i=h.enabledAttributes;for(let n=0,r=i.length;n<r;n++)i[n]!==t[n]&&(e.disableVertexAttribArray(n),i[n]=0)}function x(t,i,r,a,s,o){!0===n.isWebGL2&&(5124===r||5125===r)?e.vertexAttribIPointer(t,i,r,s,o):e.vertexAttribPointer(t,i,r,a,s,o)}function _(){y(),u=!0,h!==l&&c((h=l).object)}function y(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:function(r,l,d,_,y){let M=!1;if(s){let b=function(t,i,r){let s=!0===r.wireframe,l=o[t.id];void 0===l&&(l={},o[t.id]=l);let h=l[i.id];void 0===h&&(h={},l[i.id]=h);let u=h[s];return void 0===u&&(u=p(n.isWebGL2?e.createVertexArray():a.createVertexArrayOES()),h[s]=u),u}(_,d,l);h!==b&&c((h=b).object),(M=function(e,t,i,n){let r=h.attributes,a=t.attributes,s=0,o=i.getAttributes();for(let l in o){let u=o[l];if(u.location>=0){let c=r[l],d=a[l];if(void 0===d&&("instanceMatrix"===l&&e.instanceMatrix&&(d=e.instanceMatrix),"instanceColor"===l&&e.instanceColor&&(d=e.instanceColor)),void 0===c||c.attribute!==d||d&&c.data!==d.data)return!0;s++}}return h.attributesNum!==s||h.index!==n}(r,_,d,y))&&function(e,t,i,n){let r={},a=t.attributes,s=0,o=i.getAttributes();for(let l in o){let u=o[l];if(u.location>=0){let c=a[l];void 0===c&&("instanceMatrix"===l&&e.instanceMatrix&&(c=e.instanceMatrix),"instanceColor"===l&&e.instanceColor&&(c=e.instanceColor));let d={};d.attribute=c,c&&c.data&&(d.data=c.data),r[l]=d,s++}}h.attributes=r,h.attributesNum=s,h.index=n}(r,_,d,y)}else{let S=!0===l.wireframe;(h.geometry!==_.id||h.program!==d.id||h.wireframe!==S)&&(h.geometry=_.id,h.program=d.id,h.wireframe=S,M=!0)}null!==y&&i.update(y,34963),(M||u)&&(u=!1,function(r,a,s,o){if(!1===n.isWebGL2&&(r.isInstancedMesh||o.isInstancedBufferGeometry)&&null===t.get("ANGLE_instanced_arrays"))return;f();let l=o.attributes,h=s.getAttributes(),u=a.defaultAttributeValues;for(let c in h){let d=h[c];if(d.location>=0){let p=l[c];if(void 0===p&&("instanceMatrix"===c&&r.instanceMatrix&&(p=r.instanceMatrix),"instanceColor"===c&&r.instanceColor&&(p=r.instanceColor)),void 0!==p){let _=p.normalized,y=p.itemSize,M=i.get(p);if(void 0===M)continue;let b=M.buffer,S=M.type,w=M.bytesPerElement;if(p.isInterleavedBufferAttribute){let T=p.data,A=T.stride,E=p.offset;if(T.isInstancedInterleavedBuffer){for(let C=0;C<d.locationSize;C++)g(d.location+C,T.meshPerAttribute);!0!==r.isInstancedMesh&&void 0===o._maxInstanceCount&&(o._maxInstanceCount=T.meshPerAttribute*T.count)}else for(let L=0;L<d.locationSize;L++)m(d.location+L);e.bindBuffer(34962,b);for(let R=0;R<d.locationSize;R++)x(d.location+R,y/d.locationSize,S,_,A*w,(E+y/d.locationSize*R)*w)}else{if(p.isInstancedBufferAttribute){for(let P=0;P<d.locationSize;P++)g(d.location+P,p.meshPerAttribute);!0!==r.isInstancedMesh&&void 0===o._maxInstanceCount&&(o._maxInstanceCount=p.meshPerAttribute*p.count)}else for(let I=0;I<d.locationSize;I++)m(d.location+I);e.bindBuffer(34962,b);for(let D=0;D<d.locationSize;D++)x(d.location+D,y/d.locationSize,S,_,y*w,y/d.locationSize*D*w)}}else if(void 0!==u){let N=u[c];if(void 0!==N)switch(N.length){case 2:e.vertexAttrib2fv(d.location,N);break;case 3:e.vertexAttrib3fv(d.location,N);break;case 4:e.vertexAttrib4fv(d.location,N);break;default:e.vertexAttrib1fv(d.location,N)}}}}v()}(r,l,d,_),null!==y&&e.bindBuffer(34963,i.get(y).buffer))},reset:_,resetDefaultState:y,dispose:function(){for(let e in _(),o){let t=o[e];for(let i in t){let n=t[i];for(let r in n)d(n[r].object),delete n[r];delete t[i]}delete o[e]}},releaseStatesOfGeometry:function(e){if(void 0===o[e.id])return;let t=o[e.id];for(let i in t){let n=t[i];for(let r in n)d(n[r].object),delete n[r];delete t[i]}delete o[e.id]},releaseStatesOfProgram:function(e){for(let t in o){let i=o[t];if(void 0===i[e.id])continue;let n=i[e.id];for(let r in n)d(n[r].object),delete n[r];delete i[e.id]}},initAttributes:f,enableAttribute:m,disableUnusedAttributes:v}}function rK(e,t,i,n){let r=n.isWebGL2,a;function s(e){a=e}this.setMode=s,this.render=function(t,n){e.drawArrays(a,t,n),i.update(n,a,1)},this.renderInstances=function(n,s,o){if(0===o)return;let l,h;if(r)l=e,h="drawArraysInstanced";else if(l=t.get("ANGLE_instanced_arrays"),h="drawArraysInstancedANGLE",null===l){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}l[h](a,n,s,o),i.update(s,a,o)}}function r$(e,t,i){let n;function r(t){if("highp"===t){if(e.getShaderPrecisionFormat(35633,36338).precision>0&&e.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";t="mediump"}return"mediump"===t&&e.getShaderPrecisionFormat(35633,36337).precision>0&&e.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}let a="undefined"!=typeof WebGL2RenderingContext&&e instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&e instanceof WebGL2ComputeRenderingContext,s=void 0!==i.precision?i.precision:"highp",o=r(s);o!==s&&(console.warn("THREE.WebGLRenderer:",s,"not supported, using",o,"instead."),s=o);let l=a||t.has("WEBGL_draw_buffers"),h=!0===i.logarithmicDepthBuffer,u=e.getParameter(34930),c=e.getParameter(35660),d=e.getParameter(3379),p=e.getParameter(34076),f=e.getParameter(34921),m=e.getParameter(36347),g=e.getParameter(36348),v=e.getParameter(36349),x=c>0,_=a||t.has("OES_texture_float"),y=a?e.getParameter(36183):0;return{isWebGL2:a,drawBuffers:l,getMaxAnisotropy:function(){if(void 0!==n)return n;if(!0===t.has("EXT_texture_filter_anisotropic")){let i=t.get("EXT_texture_filter_anisotropic");n=e.getParameter(i.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n},getMaxPrecision:r,precision:s,logarithmicDepthBuffer:h,maxTextures:u,maxVertexTextures:c,maxTextureSize:d,maxCubemapSize:p,maxAttributes:f,maxVertexUniforms:m,maxVaryings:g,maxFragmentUniforms:v,vertexTextures:x,floatFragmentTextures:_,floatVertexTextures:x&&_,maxSamples:y}}function rQ(e){let t=this,i=null,n=0,r=!1,a=!1,s=new rF,o=new id,l={value:null,needsUpdate:!1};function h(){l.value!==i&&(l.value=i,l.needsUpdate=n>0),t.numPlanes=n,t.numIntersection=0}function u(e,i,n,r){let a=null!==e?e.length:0,h=null;if(0!==a){if(h=l.value,!0!==r||null===h){let u=n+4*a,c=i.matrixWorldInverse;o.getNormalMatrix(c),(null===h||h.length<u)&&(h=new Float32Array(u));for(let d=0,p=n;d!==a;++d,p+=4)s.copy(e[d]).applyMatrix4(c,o),s.normal.toArray(h,p),h[p+3]=s.constant}l.value=h,l.needsUpdate=!0}return t.numPlanes=a,t.numIntersection=0,h}this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(e,t,a){let s=0!==e.length||t||0!==n||r;return r=t,i=u(e,a,0),n=e.length,s},this.beginShadows=function(){a=!0,u(null)},this.endShadows=function(){a=!1,h()},this.setState=function(t,s,o){let c=t.clippingPlanes,d=t.clipIntersection,p=t.clipShadows,f=e.get(t);if(r&&null!==c&&0!==c.length&&(!a||p)){let m=a?0:n,g=4*m,v=f.clippingState||null;l.value=v,v=u(c,s,g,o);for(let x=0;x!==g;++x)v[x]=i[x];f.clippingState=v,this.numIntersection=d?this.numPlanes:0,this.numPlanes+=m}else a?u(null):h()}}function r0(e){let t=new WeakMap;function i(e,t){return t===ea?e.mapping=en:t===es&&(e.mapping=er),e}function n(e){let i=e.target;i.removeEventListener("dispose",n);let r=t.get(i);void 0!==r&&(t.delete(i),r.dispose())}return{get:function(r){if(r&&r.isTexture&&!1===r.isRenderTargetTexture){let a=r.mapping;if(a===ea||a===es){if(t.has(r)){let s=t.get(r).texture;return i(s,r.mapping)}{let o=r.image;if(!o||!(o.height>0))return null;{let l=new rO(o.height/2);return l.fromEquirectangularTexture(e,r),t.set(r,l),r.addEventListener("dispose",n),i(l.texture,r.mapping)}}}}return r},dispose:function(){t=new WeakMap}}}rY.physical={uniforms:rC([rY.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new ic(1,1)},clearcoatNormalMap:{value:null},iridescence:{value:0},iridescenceMap:{value:null},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},sheen:{value:0},sheenColor:{value:new iC(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new ic},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new iC(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new iC(1,1,1)},specularColorMap:{value:null}}]),vertexShader:rq.meshphysical_vert,fragmentShader:rq.meshphysical_frag};class r1 extends rP{constructor(e=-1,t=1,i=1,n=-1,r=.1,a=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=i,this.bottom=n,this.near=r,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this}setViewOffset(e,t,i,n,r,a){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=n,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){let e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,n=(this.top+this.bottom)/2,r=i-e,a=i+e,s=n+t,o=n-t;if(null!==this.view&&this.view.enabled){let l=(this.right-this.left)/this.view.fullWidth/this.zoom,h=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=l*this.view.offsetX,a=r+l*this.view.width,s-=h*this.view.offsetY,o=s-h*this.view.height}this.projectionMatrix.makeOrthographic(r,a,s,o,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){let t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}let r3=[.125,.215,.35,.446,.526,.582],r2=new r1,r4=new iC,r5=null,r6=(1+Math.sqrt(5))/2,r7=1/r6,r8=[new iH(1,1,1),new iH(-1,1,1),new iH(1,1,-1),new iH(-1,1,-1),new iH(0,r6,r7),new iH(0,r6,-r7),new iH(r7,0,r6),new iH(-r7,0,r6),new iH(r6,r7,0),new iH(-r6,r7,0)];class r9{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,i=.1,n=100){r5=this._renderer.getRenderTarget(),this._setSize(256);let r=this._allocateTargets();return r.depthBuffer=!0,this._sceneToCubeUV(e,i,n,r),t>0&&this._blur(r,0,0,t),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=an(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=ai(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(r5),e.scissorTest=!1,at(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===en||e.mapping===er?this._setSize(0===e.image.length?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),r5=this._renderer.getRenderTarget();let i=t||this._allocateTargets();return this._textureToCubeUV(e,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(){let e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,i={magFilter:eg,minFilter:eg,generateMipmaps:!1,type:eC,format:eN,encoding:ty,depthBuffer:!1},n=ae(e,t,i);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==e){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=ae(e,t,i);let{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=function(e){let t=[],i=[],n=[],r=e,a=e-4+1+r3.length;for(let s=0;s<a;s++){let o=Math.pow(2,r);i.push(o);let l=1/o;s>e-4?l=r3[s-e+4-1]:0===s&&(l=0),n.push(l);let h=1/(o-2),u=-h,c=1+h,d=[u,u,c,u,c,c,u,u,c,c,u,c],p=new Float32Array(108),f=new Float32Array(72),m=new Float32Array(36);for(let g=0;g<6;g++){let v=g%3*2/3-1,x=g>2?0:-1,_=[v,x,0,v+2/3,x,0,v+2/3,x+1,0,v,x,0,v+2/3,x+1,0,v,x+1,0];p.set(_,18*g),f.set(d,12*g);let y=[g,g,g,g,g,g];m.set(y,6*g)}let M=new rs;M.setAttribute("position",new n$(p,3)),M.setAttribute("uv",new n$(f,2)),M.setAttribute("faceIndex",new n$(m,1)),t.push(M),r>4&&r--}return{lodPlanes:t,sizeLods:i,sigmas:n}}(r)),this._blurMaterial=function(e,t,i){let n=new Float32Array(20),r=new iH(0,1,0),a=new rR({name:"SphericalGaussianBlur",defines:{n:20,CUBEUV_TEXEL_WIDTH:1/t,CUBEUV_TEXEL_HEIGHT:1/i,CUBEUV_MAX_MIP:`${e}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:r}},vertexShader:ar(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:v,depthTest:!1,depthWrite:!1});return a}(r,e,t)}return n}_compileMaterial(e){let t=new rw(this._lodPlanes[0],e);this._renderer.compile(t,r2)}_sceneToCubeUV(e,t,i,n){let r=new rI(90,1,t,i),a=[1,-1,1,1,1,1],s=[1,1,1,-1,-1,-1],o=this._renderer,l=o.autoClear,h=o.toneMapping;o.getClearColor(r4),o.toneMapping=J,o.autoClear=!1;let u=new nZ({name:"PMREM.Background",side:m,depthWrite:!1,depthTest:!1}),c=new rw(new rA,u),d=!1,p=e.background;p?p.isColor&&(u.color.copy(p),e.background=null,d=!0):(u.color.copy(r4),d=!0);for(let f=0;f<6;f++){let g=f%3;0===g?(r.up.set(0,a[f],0),r.lookAt(s[f],0,0)):1===g?(r.up.set(0,0,a[f]),r.lookAt(0,s[f],0)):(r.up.set(0,a[f],0),r.lookAt(0,0,s[f]));let v=this._cubeSize;at(n,g*v,f>2?v:0,v,v),o.setRenderTarget(n),d&&o.render(c,r),o.render(e,r)}c.geometry.dispose(),c.material.dispose(),o.toneMapping=h,o.autoClear=l,e.background=p}_textureToCubeUV(e,t){let i=this._renderer,n=e.mapping===en||e.mapping===er;n?(null===this._cubemapMaterial&&(this._cubemapMaterial=an()),this._cubemapMaterial.uniforms.flipEnvMap.value=!1===e.isRenderTargetTexture?-1:1):null===this._equirectMaterial&&(this._equirectMaterial=ai());let r=n?this._cubemapMaterial:this._equirectMaterial,a=new rw(this._lodPlanes[0],r),s=r.uniforms;s.envMap.value=e;let o=this._cubeSize;at(t,0,0,3*o,2*o),i.setRenderTarget(t),i.render(a,r2)}_applyPMREM(e){let t=this._renderer,i=t.autoClear;t.autoClear=!1;for(let n=1;n<this._lodPlanes.length;n++){let r=Math.sqrt(this._sigmas[n]*this._sigmas[n]-this._sigmas[n-1]*this._sigmas[n-1]),a=r8[(n-1)%r8.length];this._blur(e,n-1,n,r,a)}t.autoClear=i}_blur(e,t,i,n,r){let a=this._pingPongRenderTarget;this._halfBlur(e,a,t,i,n,"latitudinal",r),this._halfBlur(a,e,i,i,n,"longitudinal",r)}_halfBlur(e,t,i,n,r,a,s){let o=this._renderer,l=this._blurMaterial;"latitudinal"!==a&&"longitudinal"!==a&&console.error("blur direction must be either latitudinal or longitudinal!");let h=new rw(this._lodPlanes[n],l),u=l.uniforms,c=this._sizeLods[i]-1,d=isFinite(r)?Math.PI/(2*c):2*Math.PI/39,p=r/d,f=isFinite(r)?1+Math.floor(3*p):20;f>20&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${f} samples when the maximum is set to 20`);let m=[],g=0;for(let v=0;v<20;++v){let x=v/p,_=Math.exp(-x*x/2);m.push(_),0===v?g+=_:v<f&&(g+=2*_)}for(let y=0;y<m.length;y++)m[y]=m[y]/g;u.envMap.value=e.texture,u.samples.value=f,u.weights.value=m,u.latitudinal.value="latitudinal"===a,s&&(u.poleAxis.value=s);let{_lodMax:M}=this;u.dTheta.value=d,u.mipInt.value=M-i;let b=this._sizeLods[n],S=4*(this._cubeSize-b);at(t,3*b*(n>M-4?n-M+4:0),S,3*b,2*b),o.setRenderTarget(t),o.render(h,r2)}}function ae(e,t,i){let n=new iz(e,t,i);return n.texture.mapping=eo,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function at(e,t,i,n,r){e.viewport.set(t,i,n,r),e.scissor.set(t,i,n,r)}function ai(){return new rR({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:ar(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:v,depthTest:!1,depthWrite:!1})}function an(){return new rR({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:ar(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:v,depthTest:!1,depthWrite:!1})}function ar(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function aa(e){let t=new WeakMap,i=null;function n(e){let i=e.target;i.removeEventListener("dispose",n);let r=t.get(i);void 0!==r&&(t.delete(i),r.dispose())}return{get:function(r){if(r&&r.isTexture){let a=r.mapping,s=a===ea||a===es,o=a===en||a===er;if(s||o){if(r.isRenderTargetTexture&&!0===r.needsPMREMUpdate){r.needsPMREMUpdate=!1;let l=t.get(r);return null===i&&(i=new r9(e)),l=s?i.fromEquirectangular(r,l):i.fromCubemap(r,l),t.set(r,l),l.texture}if(t.has(r))return t.get(r).texture;{let h=r.image;if(!(s&&h&&h.height>0||o&&h&&function(e){let t=0;for(let i=0;i<6;i++)void 0!==e[i]&&t++;return 6===t}(h)))return null;{null===i&&(i=new r9(e));let u=s?i.fromEquirectangular(r):i.fromCubemap(r);return t.set(r,u),r.addEventListener("dispose",n),u.texture}}}}return r},dispose:function(){t=new WeakMap,null!==i&&(i.dispose(),i=null)}}}function as(e){let t={};function i(i){if(void 0!==t[i])return t[i];let n;switch(i){case"WEBGL_depth_texture":n=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":n=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":n=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":n=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:n=e.getExtension(i)}return t[i]=n,n}return{has:function(e){return null!==i(e)},init:function(e){e.isWebGL2?i("EXT_color_buffer_float"):(i("WEBGL_depth_texture"),i("OES_texture_float"),i("OES_texture_half_float"),i("OES_texture_half_float_linear"),i("OES_standard_derivatives"),i("OES_element_index_uint"),i("OES_vertex_array_object"),i("ANGLE_instanced_arrays")),i("OES_texture_float_linear"),i("EXT_color_buffer_half_float"),i("WEBGL_multisampled_render_to_texture")},get:function(e){let t=i(e);return null===t&&console.warn("THREE.WebGLRenderer: "+e+" extension not supported."),t}}}function ao(e,t,i,n){let r={},a=new WeakMap;function s(e){let o=e.target;for(let l in null!==o.index&&t.remove(o.index),o.attributes)t.remove(o.attributes[l]);o.removeEventListener("dispose",s),delete r[o.id];let h=a.get(o);h&&(t.remove(h),a.delete(o)),n.releaseStatesOfGeometry(o),!0===o.isInstancedBufferGeometry&&delete o._maxInstanceCount,i.memory.geometries--}function o(e){let i=[],n=e.index,r=e.attributes.position,s=0;if(null!==n){let o=n.array;s=n.version;for(let l=0,h=o.length;l<h;l+=3){let u=o[l+0],c=o[l+1],d=o[l+2];i.push(u,c,c,d,d,u)}}else{let p=r.array;s=r.version;for(let f=0,m=p.length/3-1;f<m;f+=3){let g=f+0,v=f+1,x=f+2;i.push(g,v,v,x,x,g)}}let _=new(ip(i)?n5:n2)(i,1);_.version=s;let y=a.get(e);y&&t.remove(y),a.set(e,_)}return{get:function(e,t){return!0===r[t.id]||(t.addEventListener("dispose",s),r[t.id]=!0,i.memory.geometries++),t},update:function(e){let i=e.attributes;for(let n in i)t.update(i[n],34962);let r=e.morphAttributes;for(let a in r){let s=r[a];for(let o=0,l=s.length;o<l;o++)t.update(s[o],34962)}},getWireframeAttribute:function(e){let t=a.get(e);if(t){let i=e.index;null!==i&&t.version<i.version&&o(e)}else o(e);return a.get(e)}}}function al(e,t,i,n){let r=n.isWebGL2,a;function s(e){a=e}let o,l;this.setMode=s,this.setIndex=function(e){o=e.type,l=e.bytesPerElement},this.render=function(t,n){e.drawElements(a,n,o,t*l),i.update(n,a,1)},this.renderInstances=function(n,s,h){if(0===h)return;let u,c;if(r)u=e,c="drawElementsInstanced";else if(u=t.get("ANGLE_instanced_arrays"),c="drawElementsInstancedANGLE",null===u){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}u[c](a,s,o,n*l,h),i.update(s,a,h)}}function ah(e){let t={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:t,programs:null,autoReset:!0,reset:function(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0},update:function(e,i,n){switch(t.calls++,i){case 4:t.triangles+=n*(e/3);break;case 1:t.lines+=n*(e/2);break;case 3:t.lines+=n*(e-1);break;case 2:t.lines+=n*e;break;case 0:t.points+=n*e;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",i)}}}}function au(e,t){return e[0]-t[0]}function ac(e,t){return Math.abs(t[1])-Math.abs(e[1])}function ad(e,t,i){let n={},r=new Float32Array(8),a=new WeakMap,s=new iO,o=[];for(let l=0;l<8;l++)o[l]=[l,0];return{update:function(l,h,u,c){let d=l.morphTargetInfluences;if(!0===t.isWebGL2){let p=h.morphAttributes.position||h.morphAttributes.normal||h.morphAttributes.color,f=void 0!==p?p.length:0,m=a.get(h);if(void 0===m||m.count!==f){void 0!==m&&m.texture.dispose();let g=void 0!==h.morphAttributes.position,v=void 0!==h.morphAttributes.normal,x=void 0!==h.morphAttributes.color,_=h.morphAttributes.position||[],y=h.morphAttributes.normal||[],M=h.morphAttributes.color||[],b=0;!0===g&&(b=1),!0===v&&(b=2),!0===x&&(b=3);let S=h.attributes.position.count*b,w=1;S>t.maxTextureSize&&(w=Math.ceil(S/t.maxTextureSize),S=t.maxTextureSize);let T=new Float32Array(S*w*4*f),A=new iU(T,S,w,f);A.type=eE,A.needsUpdate=!0;let E=4*b;for(let C=0;C<f;C++){let L=_[C],R=y[C],P=M[C],I=S*w*4*C;for(let D=0;D<L.count;D++){let N=D*E;!0===g&&(s.fromBufferAttribute(L,D),T[I+N+0]=s.x,T[I+N+1]=s.y,T[I+N+2]=s.z,T[I+N+3]=0),!0===v&&(s.fromBufferAttribute(R,D),T[I+N+4]=s.x,T[I+N+5]=s.y,T[I+N+6]=s.z,T[I+N+7]=0),!0===x&&(s.fromBufferAttribute(P,D),T[I+N+8]=s.x,T[I+N+9]=s.y,T[I+N+10]=s.z,T[I+N+11]=4===P.itemSize?s.w:1)}}function O(){A.dispose(),a.delete(h),h.removeEventListener("dispose",O)}m={count:f,texture:A,size:new ic(S,w)},a.set(h,m),h.addEventListener("dispose",O)}let z=0;for(let U=0;U<d.length;U++)z+=d[U];let B=h.morphTargetsRelative?1:1-z;c.getUniforms().setValue(e,"morphTargetBaseInfluence",B),c.getUniforms().setValue(e,"morphTargetInfluences",d),c.getUniforms().setValue(e,"morphTargetsTexture",m.texture,i),c.getUniforms().setValue(e,"morphTargetsTextureSize",m.size)}else{let F=void 0===d?0:d.length,k=n[h.id];if(void 0===k||k.length!==F){k=[];for(let G=0;G<F;G++)k[G]=[G,0];n[h.id]=k}for(let V=0;V<F;V++){let H=k[V];H[0]=V,H[1]=d[V]}k.sort(ac);for(let W=0;W<8;W++)W<F&&k[W][1]?(o[W][0]=k[W][0],o[W][1]=k[W][1]):(o[W][0]=Number.MAX_SAFE_INTEGER,o[W][1]=0);o.sort(au);let j=h.morphAttributes.position,q=h.morphAttributes.normal,X=0;for(let Y=0;Y<8;Y++){let Z=o[Y],J=Z[0],K=Z[1];J!==Number.MAX_SAFE_INTEGER&&K?(j&&h.getAttribute("morphTarget"+Y)!==j[J]&&h.setAttribute("morphTarget"+Y,j[J]),q&&h.getAttribute("morphNormal"+Y)!==q[J]&&h.setAttribute("morphNormal"+Y,q[J]),r[Y]=K,X+=K):(j&&!0===h.hasAttribute("morphTarget"+Y)&&h.deleteAttribute("morphTarget"+Y),q&&!0===h.hasAttribute("morphNormal"+Y)&&h.deleteAttribute("morphNormal"+Y),r[Y]=0)}let $=h.morphTargetsRelative?1:1-X;c.getUniforms().setValue(e,"morphTargetBaseInfluence",$),c.getUniforms().setValue(e,"morphTargetInfluences",r)}}}}function ap(e,t,i,n){let r=new WeakMap;function a(e){let t=e.target;t.removeEventListener("dispose",a),i.remove(t.instanceMatrix),null!==t.instanceColor&&i.remove(t.instanceColor)}return{update:function(e){let s=n.render.frame,o=e.geometry,l=t.get(e,o);return r.get(l)!==s&&(t.update(l),r.set(l,s)),e.isInstancedMesh&&(!1===e.hasEventListener("dispose",a)&&e.addEventListener("dispose",a),i.update(e.instanceMatrix,34962),null!==e.instanceColor&&i.update(e.instanceColor,34962)),l},dispose:function(){r=new WeakMap}}}let af=new iN,am=new iU,ag=new iF,av=new rN,ax=[],a_=[],ay=new Float32Array(16),aM=new Float32Array(9),ab=new Float32Array(4);function aS(e,t,i){let n=e[0];if(n<=0||n>0)return e;let r=t*i,a=ax[r];if(void 0===a&&(a=new Float32Array(r),ax[r]=a),0!==t){n.toArray(a,0);for(let s=1,o=0;s!==t;++s)o+=i,e[s].toArray(a,o)}return a}function aw(e,t){if(e.length!==t.length)return!1;for(let i=0,n=e.length;i<n;i++)if(e[i]!==t[i])return!1;return!0}function aT(e,t){for(let i=0,n=t.length;i<n;i++)e[i]=t[i]}function aA(e,t){let i=a_[t];void 0===i&&(i=new Int32Array(t),a_[t]=i);for(let n=0;n!==t;++n)i[n]=e.allocateTextureUnit();return i}function aE(e,t){let i=this.cache;i[0]!==t&&(e.uniform1f(this.addr,t),i[0]=t)}function aC(e,t){let i=this.cache;if(void 0!==t.x)(i[0]!==t.x||i[1]!==t.y)&&(e.uniform2f(this.addr,t.x,t.y),i[0]=t.x,i[1]=t.y);else{if(aw(i,t))return;e.uniform2fv(this.addr,t),aT(i,t)}}function aL(e,t){let i=this.cache;if(void 0!==t.x)(i[0]!==t.x||i[1]!==t.y||i[2]!==t.z)&&(e.uniform3f(this.addr,t.x,t.y,t.z),i[0]=t.x,i[1]=t.y,i[2]=t.z);else if(void 0!==t.r)(i[0]!==t.r||i[1]!==t.g||i[2]!==t.b)&&(e.uniform3f(this.addr,t.r,t.g,t.b),i[0]=t.r,i[1]=t.g,i[2]=t.b);else{if(aw(i,t))return;e.uniform3fv(this.addr,t),aT(i,t)}}function aR(e,t){let i=this.cache;if(void 0!==t.x)(i[0]!==t.x||i[1]!==t.y||i[2]!==t.z||i[3]!==t.w)&&(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),i[0]=t.x,i[1]=t.y,i[2]=t.z,i[3]=t.w);else{if(aw(i,t))return;e.uniform4fv(this.addr,t),aT(i,t)}}function aP(e,t){let i=this.cache,n=t.elements;if(void 0===n){if(aw(i,t))return;e.uniformMatrix2fv(this.addr,!1,t),aT(i,t)}else{if(aw(i,n))return;ab.set(n),e.uniformMatrix2fv(this.addr,!1,ab),aT(i,n)}}function aI(e,t){let i=this.cache,n=t.elements;if(void 0===n){if(aw(i,t))return;e.uniformMatrix3fv(this.addr,!1,t),aT(i,t)}else{if(aw(i,n))return;aM.set(n),e.uniformMatrix3fv(this.addr,!1,aM),aT(i,n)}}function aD(e,t){let i=this.cache,n=t.elements;if(void 0===n){if(aw(i,t))return;e.uniformMatrix4fv(this.addr,!1,t),aT(i,t)}else{if(aw(i,n))return;ay.set(n),e.uniformMatrix4fv(this.addr,!1,ay),aT(i,n)}}function aN(e,t){let i=this.cache;i[0]!==t&&(e.uniform1i(this.addr,t),i[0]=t)}function aO(e,t){let i=this.cache;aw(i,t)||(e.uniform2iv(this.addr,t),aT(i,t))}function az(e,t){let i=this.cache;aw(i,t)||(e.uniform3iv(this.addr,t),aT(i,t))}function aU(e,t){let i=this.cache;aw(i,t)||(e.uniform4iv(this.addr,t),aT(i,t))}function aB(e,t){let i=this.cache;i[0]!==t&&(e.uniform1ui(this.addr,t),i[0]=t)}function aF(e,t){let i=this.cache;aw(i,t)||(e.uniform2uiv(this.addr,t),aT(i,t))}function ak(e,t){let i=this.cache;aw(i,t)||(e.uniform3uiv(this.addr,t),aT(i,t))}function aG(e,t){let i=this.cache;aw(i,t)||(e.uniform4uiv(this.addr,t),aT(i,t))}function aV(e,t,i){let n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(e.uniform1i(this.addr,r),n[0]=r),i.setTexture2D(t||af,r)}function aH(e,t,i){let n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(e.uniform1i(this.addr,r),n[0]=r),i.setTexture3D(t||ag,r)}function aW(e,t,i){let n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(e.uniform1i(this.addr,r),n[0]=r),i.setTextureCube(t||av,r)}function aj(e,t,i){let n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(e.uniform1i(this.addr,r),n[0]=r),i.setTexture2DArray(t||am,r)}function aq(e,t){e.uniform1fv(this.addr,t)}function aX(e,t){let i=aS(t,this.size,2);e.uniform2fv(this.addr,i)}function aY(e,t){let i=aS(t,this.size,3);e.uniform3fv(this.addr,i)}function aZ(e,t){let i=aS(t,this.size,4);e.uniform4fv(this.addr,i)}function aJ(e,t){let i=aS(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,i)}function aK(e,t){let i=aS(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,i)}function a$(e,t){let i=aS(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,i)}function aQ(e,t){e.uniform1iv(this.addr,t)}function a0(e,t){e.uniform2iv(this.addr,t)}function a1(e,t){e.uniform3iv(this.addr,t)}function a3(e,t){e.uniform4iv(this.addr,t)}function a2(e,t){e.uniform1uiv(this.addr,t)}function a4(e,t){e.uniform2uiv(this.addr,t)}function a5(e,t){e.uniform3uiv(this.addr,t)}function a6(e,t){e.uniform4uiv(this.addr,t)}function a7(e,t,i){let n=t.length,r=aA(i,n);e.uniform1iv(this.addr,r);for(let a=0;a!==n;++a)i.setTexture2D(t[a]||af,r[a])}function a8(e,t,i){let n=t.length,r=aA(i,n);e.uniform1iv(this.addr,r);for(let a=0;a!==n;++a)i.setTexture3D(t[a]||ag,r[a])}function a9(e,t,i){let n=t.length,r=aA(i,n);e.uniform1iv(this.addr,r);for(let a=0;a!==n;++a)i.setTextureCube(t[a]||av,r[a])}function se(e,t,i){let n=t.length,r=aA(i,n);e.uniform1iv(this.addr,r);for(let a=0;a!==n;++a)i.setTexture2DArray(t[a]||am,r[a])}class st{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.setValue=function(e){switch(e){case 5126:return aE;case 35664:return aC;case 35665:return aL;case 35666:return aR;case 35674:return aP;case 35675:return aI;case 35676:return aD;case 5124:case 35670:return aN;case 35667:case 35671:return aO;case 35668:case 35672:return az;case 35669:case 35673:return aU;case 5125:return aB;case 36294:return aF;case 36295:return ak;case 36296:return aG;case 35678:case 36198:case 36298:case 36306:case 35682:return aV;case 35679:case 36299:case 36307:return aH;case 35680:case 36300:case 36308:case 36293:return aW;case 36289:case 36303:case 36311:case 36292:return aj}}(t.type)}}class si{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.size=t.size,this.setValue=function(e){switch(e){case 5126:return aq;case 35664:return aX;case 35665:return aY;case 35666:return aZ;case 35674:return aJ;case 35675:return aK;case 35676:return a$;case 5124:case 35670:return aQ;case 35667:case 35671:return a0;case 35668:case 35672:return a1;case 35669:case 35673:return a3;case 5125:return a2;case 36294:return a4;case 36295:return a5;case 36296:return a6;case 35678:case 36198:case 36298:case 36306:case 35682:return a7;case 35679:case 36299:case 36307:return a8;case 35680:case 36300:case 36308:case 36293:return a9;case 36289:case 36303:case 36311:case 36292:return se}}(t.type)}}class sn{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,i){let n=this.seq;for(let r=0,a=n.length;r!==a;++r){let s=n[r];s.setValue(e,t[s.id],i)}}}let sr=/(\w+)(\])?(\[|\.)?/g;function sa(e,t){e.seq.push(t),e.map[t.id]=t}function ss(e,t,i){let n=e.name,r=n.length;for(sr.lastIndex=0;;){let a=sr.exec(n),s=sr.lastIndex,o=a[1],l="]"===a[2],h=a[3];if(l&&(o|=0),void 0===h||"["===h&&s+2===r){sa(i,void 0===h?new st(o,e,t):new si(o,e,t));break}{let u=i.map,c=u[o];void 0===c&&sa(i,c=new sn(o)),i=c}}}class so{constructor(e,t){this.seq=[],this.map={};let i=e.getProgramParameter(t,35718);for(let n=0;n<i;++n){let r=e.getActiveUniform(t,n),a=e.getUniformLocation(t,r.name);ss(r,a,this)}}setValue(e,t,i,n){let r=this.map[t];void 0!==r&&r.setValue(e,i,n)}setOptional(e,t,i){let n=t[i];void 0!==n&&this.setValue(e,i,n)}static upload(e,t,i,n){for(let r=0,a=t.length;r!==a;++r){let s=t[r],o=i[s.id];!1!==o.needsUpdate&&s.setValue(e,o.value,n)}}static seqWithValue(e,t){let i=[];for(let n=0,r=e.length;n!==r;++n){let a=e[n];a.id in t&&i.push(a)}return i}}function sl(e,t,i){let n=e.createShader(t);return e.shaderSource(n,i),e.compileShader(n),n}let sh=0;function su(e,t,i){let n=e.getShaderParameter(t,35713),r=e.getShaderInfoLog(t).trim();if(n&&""===r)return"";let a=/ERROR: 0:(\d+)/.exec(r);if(!a)return r;{let s=parseInt(a[1]);return i.toUpperCase()+"\n\n"+r+"\n\n"+function(e,t){let i=e.split("\n"),n=[],r=Math.max(t-6,0),a=Math.min(t+6,i.length);for(let s=r;s<a;s++){let o=s+1;n.push(`${o===t?">":" "} ${o}: ${i[s]}`)}return n.join("\n")}(e.getShaderSource(t),s)}}function sc(e){return""!==e}function sd(e,t){let i=t.numSpotLightShadows+t.numSpotLightMaps-t.numSpotLightShadowsWithMaps;return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,t.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,i).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,t.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function sp(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}let sf=/^[ \t]*#include +<([\w\d./]+)>/gm;function sm(e){return e.replace(sf,sg)}function sg(e,t){let i=rq[t];if(void 0===i)throw Error("Can not resolve #include <"+t+">");return sm(i)}let sv=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function sx(e){return e.replace(sv,s_)}function s_(e,t,i,n){let r="";for(let a=parseInt(t);a<parseInt(i);a++)r+=n.replace(/\[\s*i\s*\]/g,"[ "+a+" ]").replace(/UNROLLED_LOOP_INDEX/g,a);return r}function sy(e){let t="precision "+e.precision+" float;\nprecision "+e.precision+" int;";return"highp"===e.precision?t+="\n#define HIGH_PRECISION":"mediump"===e.precision?t+="\n#define MEDIUM_PRECISION":"lowp"===e.precision&&(t+="\n#define LOW_PRECISION"),t}function sM(e,t,i,n){var r,a;let s=e.getContext(),o=i.defines,l=i.vertexShader,h=i.fragmentShader,u,f=(u="SHADOWMAP_TYPE_BASIC",i.shadowMapType===c?u="SHADOWMAP_TYPE_PCF":i.shadowMapType===d?u="SHADOWMAP_TYPE_PCF_SOFT":i.shadowMapType===p&&(u="SHADOWMAP_TYPE_VSM"),u),m=function(e){let t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case en:case er:t="ENVMAP_TYPE_CUBE";break;case eo:t="ENVMAP_TYPE_CUBE_UV"}return t}(i),g,v=(g="ENVMAP_MODE_REFLECTION",i.envMap&&i.envMapMode===er&&(g="ENVMAP_MODE_REFRACTION"),g),x=function(e){let t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case X:t="ENVMAP_BLENDING_MULTIPLY";break;case Y:t="ENVMAP_BLENDING_MIX";break;case Z:t="ENVMAP_BLENDING_ADD"}return t}(i),_=function(e){let t=e.envMapCubeUVHeight;if(null===t)return null;let i=Math.log2(t)-2;return{texelWidth:1/(3*Math.max(Math.pow(2,i),112)),texelHeight:1/t,maxMip:i}}(i),y=i.isWebGL2?"":function(e){let t=[e.extensionDerivatives||e.envMapCubeUVHeight||e.bumpMap||e.tangentSpaceNormalMap||e.clearcoatNormalMap||e.flatShading||"physical"===e.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(e.extensionFragDepth||e.logarithmicDepthBuffer)&&e.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",e.extensionDrawBuffers&&e.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(e.extensionShaderTextureLOD||e.envMap||e.transmission)&&e.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""];return t.filter(sc).join("\n")}(i),M=function(e){let t=[];for(let i in e){let n=e[i];!1!==n&&t.push("#define "+i+" "+n)}return t.join("\n")}(o),b=s.createProgram(),S,w,T=i.glslVersion?"#version "+i.glslVersion+"\n":"";i.isRawShaderMaterial?((S=[M].filter(sc).join("\n")).length>0&&(S+="\n"),(w=[y,M].filter(sc).join("\n")).length>0&&(w+="\n")):(S=[sy(i),"#define SHADER_NAME "+i.shaderName,M,i.instancing?"#define USE_INSTANCING":"",i.instancingColor?"#define USE_INSTANCING_COLOR":"",i.supportsVertexTextures?"#define VERTEX_TEXTURES":"",i.useFog&&i.fog?"#define USE_FOG":"",i.useFog&&i.fogExp2?"#define FOG_EXP2":"",i.map?"#define USE_MAP":"",i.envMap?"#define USE_ENVMAP":"",i.envMap?"#define "+v:"",i.lightMap?"#define USE_LIGHTMAP":"",i.aoMap?"#define USE_AOMAP":"",i.emissiveMap?"#define USE_EMISSIVEMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.normalMap&&i.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",i.normalMap&&i.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",i.clearcoatMap?"#define USE_CLEARCOATMAP":"",i.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",i.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",i.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",i.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",i.displacementMap&&i.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",i.specularColorMap?"#define USE_SPECULARCOLORMAP":"",i.roughnessMap?"#define USE_ROUGHNESSMAP":"",i.metalnessMap?"#define USE_METALNESSMAP":"",i.alphaMap?"#define USE_ALPHAMAP":"",i.transmission?"#define USE_TRANSMISSION":"",i.transmissionMap?"#define USE_TRANSMISSIONMAP":"",i.thicknessMap?"#define USE_THICKNESSMAP":"",i.sheenColorMap?"#define USE_SHEENCOLORMAP":"",i.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",i.vertexTangents?"#define USE_TANGENT":"",i.vertexColors?"#define USE_COLOR":"",i.vertexAlphas?"#define USE_COLOR_ALPHA":"",i.vertexUvs?"#define USE_UV":"",i.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",i.flatShading?"#define FLAT_SHADED":"",i.skinning?"#define USE_SKINNING":"",i.morphTargets?"#define USE_MORPHTARGETS":"",i.morphNormals&&!1===i.flatShading?"#define USE_MORPHNORMALS":"",i.morphColors&&i.isWebGL2?"#define USE_MORPHCOLORS":"",i.morphTargetsCount>0&&i.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",i.morphTargetsCount>0&&i.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+i.morphTextureStride:"",i.morphTargetsCount>0&&i.isWebGL2?"#define MORPHTARGETS_COUNT "+i.morphTargetsCount:"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"",i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+f:"",i.sizeAttenuation?"#define USE_SIZEATTENUATION":"",i.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",i.logarithmicDepthBuffer&&i.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif","\n"].filter(sc).join("\n"),w=[y,sy(i),"#define SHADER_NAME "+i.shaderName,M,i.useFog&&i.fog?"#define USE_FOG":"",i.useFog&&i.fogExp2?"#define FOG_EXP2":"",i.map?"#define USE_MAP":"",i.matcap?"#define USE_MATCAP":"",i.envMap?"#define USE_ENVMAP":"",i.envMap?"#define "+m:"",i.envMap?"#define "+v:"",i.envMap?"#define "+x:"",_?"#define CUBEUV_TEXEL_WIDTH "+_.texelWidth:"",_?"#define CUBEUV_TEXEL_HEIGHT "+_.texelHeight:"",_?"#define CUBEUV_MAX_MIP "+_.maxMip+".0":"",i.lightMap?"#define USE_LIGHTMAP":"",i.aoMap?"#define USE_AOMAP":"",i.emissiveMap?"#define USE_EMISSIVEMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.normalMap&&i.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",i.normalMap&&i.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",i.clearcoat?"#define USE_CLEARCOAT":"",i.clearcoatMap?"#define USE_CLEARCOATMAP":"",i.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",i.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",i.iridescence?"#define USE_IRIDESCENCE":"",i.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",i.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",i.specularColorMap?"#define USE_SPECULARCOLORMAP":"",i.roughnessMap?"#define USE_ROUGHNESSMAP":"",i.metalnessMap?"#define USE_METALNESSMAP":"",i.alphaMap?"#define USE_ALPHAMAP":"",i.alphaTest?"#define USE_ALPHATEST":"",i.sheen?"#define USE_SHEEN":"",i.sheenColorMap?"#define USE_SHEENCOLORMAP":"",i.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",i.transmission?"#define USE_TRANSMISSION":"",i.transmissionMap?"#define USE_TRANSMISSIONMAP":"",i.thicknessMap?"#define USE_THICKNESSMAP":"",i.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",i.vertexTangents?"#define USE_TANGENT":"",i.vertexColors||i.instancingColor?"#define USE_COLOR":"",i.vertexAlphas?"#define USE_COLOR_ALPHA":"",i.vertexUvs?"#define USE_UV":"",i.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",i.gradientMap?"#define USE_GRADIENTMAP":"",i.flatShading?"#define FLAT_SHADED":"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"",i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+f:"",i.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",i.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",i.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",i.logarithmicDepthBuffer&&i.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",i.toneMapping!==J?"#define TONE_MAPPING":"",i.toneMapping!==J?rq.tonemapping_pars_fragment:"",i.toneMapping!==J?function(e,t){let i;switch(t){case K:i="Linear";break;case $:i="Reinhard";break;case Q:i="OptimizedCineon";break;case ee:i="ACESFilmic";break;case et:i="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),i="Linear"}return"vec3 "+e+"( vec3 color ) { return "+i+"ToneMapping( color ); }"}("toneMapping",i.toneMapping):"",i.dithering?"#define DITHERING":"",i.opaque?"#define OPAQUE":"",rq.encodings_pars_fragment,function(e,t){let i=function(e){switch(e){case ty:return["Linear","( value )"];case tM:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",e),["Linear","( value )"]}}(t);return"vec4 "+e+"( vec4 value ) { return LinearTo"+i[0]+i[1]+"; }"}("linearToOutputTexel",i.outputEncoding),i.useDepthPacking?"#define DEPTH_PACKING "+i.depthPacking:"","\n"].filter(sc).join("\n")),l=sp(l=sd(l=sm(l),i),i),h=sp(h=sd(h=sm(h),i),i),l=sx(l),h=sx(h),i.isWebGL2&&!0!==i.isRawShaderMaterial&&(T="#version 300 es\n",S="precision mediump sampler2DArray;\n#define attribute in\n#define varying out\n#define texture2D texture\n"+S,w=["#define varying in",i.glslVersion===t1?"":"layout(location = 0) out highp vec4 pc_fragColor;",i.glslVersion===t1?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+w);let A=T+S+l,E=T+w+h,C=sl(s,35633,A),L=sl(s,35632,E);if(s.attachShader(b,C),s.attachShader(b,L),void 0!==i.index0AttributeName?s.bindAttribLocation(b,0,i.index0AttributeName):!0===i.morphTargets&&s.bindAttribLocation(b,0,"position"),s.linkProgram(b),e.debug.checkShaderErrors){let R=s.getProgramInfoLog(b).trim(),P=s.getShaderInfoLog(C).trim(),I=s.getShaderInfoLog(L).trim(),D=!0,N=!0;if(!1===s.getProgramParameter(b,35714)){D=!1;let O=su(s,C,"vertex"),z=su(s,L,"fragment");console.error("THREE.WebGLProgram: Shader Error "+s.getError()+" - VALIDATE_STATUS "+s.getProgramParameter(b,35715)+"\n\nProgram Info Log: "+R+"\n"+O+"\n"+z)}else""!==R?console.warn("THREE.WebGLProgram: Program Info Log:",R):(""===P||""===I)&&(N=!1);N&&(this.diagnostics={runnable:D,programLog:R,vertexShader:{log:P,prefix:S},fragmentShader:{log:I,prefix:w}})}s.deleteShader(C),s.deleteShader(L);let U;this.getUniforms=function(){return void 0===U&&(U=new so(s,b)),U};let B;return this.getAttributes=function(){return void 0===B&&(B=function(e,t){let i={},n=e.getProgramParameter(t,35721);for(let r=0;r<n;r++){let a=e.getActiveAttrib(t,r),s=a.name,o=1;35674===a.type&&(o=2),35675===a.type&&(o=3),35676===a.type&&(o=4),i[s]={type:a.type,location:e.getAttribLocation(t,s),locationSize:o}}return i}(s,b)),B},this.destroy=function(){n.releaseStatesOfProgram(this),s.deleteProgram(b),this.program=void 0},this.name=i.shaderName,this.id=sh++,this.cacheKey=t,this.usedTimes=1,this.program=b,this.vertexShader=C,this.fragmentShader=L,this}let sb=0;class sS{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){let t=e.vertexShader,i=e.fragmentShader,n=this._getShaderStage(t),r=this._getShaderStage(i),a=this._getShaderCacheForMaterial(e);return!1===a.has(n)&&(a.add(n),n.usedTimes++),!1===a.has(r)&&(a.add(r),r.usedTimes++),this}remove(e){let t=this.materialCache.get(e);for(let i of t)i.usedTimes--,0===i.usedTimes&&this.shaderCache.delete(i.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){let t=this.materialCache,i=t.get(e);return void 0===i&&(i=new Set,t.set(e,i)),i}_getShaderStage(e){let t=this.shaderCache,i=t.get(e);return void 0===i&&(i=new sw(e),t.set(e,i)),i}}class sw{constructor(e){this.id=sb++,this.code=e,this.usedTimes=0}}function sT(e,t,i,n,r,a,s){let o=new nM,l=new sS,h=[],u=r.isWebGL2,c=r.logarithmicDepthBuffer,d=r.vertexTextures,p=r.precision,f={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};return{getParameters:function(a,o,h,v,_){let y=v.fog,M=_.geometry,b=a.isMeshStandardMaterial?v.environment:null,S=(a.isMeshStandardMaterial?i:t).get(a.envMap||b),w=S&&S.mapping===eo?S.image.height:null,T=f[a.type];null!==a.precision&&(p=r.getMaxPrecision(a.precision))!==a.precision&&console.warn("THREE.WebGLProgram.getParameters:",a.precision,"not supported, using",p,"instead.");let A=M.morphAttributes.position||M.morphAttributes.normal||M.morphAttributes.color,E=void 0!==A?A.length:0,C=0;void 0!==M.morphAttributes.position&&(C=1),void 0!==M.morphAttributes.normal&&(C=2),void 0!==M.morphAttributes.color&&(C=3);let L,R,P,I;if(T){let D=rY[T];L=D.vertexShader,R=D.fragmentShader}else L=a.vertexShader,R=a.fragmentShader,l.update(a),P=l.getVertexShaderID(a),I=l.getFragmentShaderID(a);let N=e.getRenderTarget(),O=a.alphaTest>0,z=a.clearcoat>0,U=a.iridescence>0,B={isWebGL2:u,shaderID:T,shaderName:a.type,vertexShader:L,fragmentShader:R,defines:a.defines,customVertexShaderID:P,customFragmentShaderID:I,isRawShaderMaterial:!0===a.isRawShaderMaterial,glslVersion:a.glslVersion,precision:p,instancing:!0===_.isInstancedMesh,instancingColor:!0===_.isInstancedMesh&&null!==_.instanceColor,supportsVertexTextures:d,outputEncoding:null===N?e.outputEncoding:!0===N.isXRRenderTarget?N.texture.encoding:ty,map:!!a.map,matcap:!!a.matcap,envMap:!!S,envMapMode:S&&S.mapping,envMapCubeUVHeight:w,lightMap:!!a.lightMap,aoMap:!!a.aoMap,emissiveMap:!!a.emissiveMap,bumpMap:!!a.bumpMap,normalMap:!!a.normalMap,objectSpaceNormalMap:a.normalMapType===tT,tangentSpaceNormalMap:a.normalMapType===tw,decodeVideoTexture:!!a.map&&!0===a.map.isVideoTexture&&a.map.encoding===tM,clearcoat:z,clearcoatMap:z&&!!a.clearcoatMap,clearcoatRoughnessMap:z&&!!a.clearcoatRoughnessMap,clearcoatNormalMap:z&&!!a.clearcoatNormalMap,iridescence:U,iridescenceMap:U&&!!a.iridescenceMap,iridescenceThicknessMap:U&&!!a.iridescenceThicknessMap,displacementMap:!!a.displacementMap,roughnessMap:!!a.roughnessMap,metalnessMap:!!a.metalnessMap,specularMap:!!a.specularMap,specularIntensityMap:!!a.specularIntensityMap,specularColorMap:!!a.specularColorMap,opaque:!1===a.transparent&&a.blending===x,alphaMap:!!a.alphaMap,alphaTest:O,gradientMap:!!a.gradientMap,sheen:a.sheen>0,sheenColorMap:!!a.sheenColorMap,sheenRoughnessMap:!!a.sheenRoughnessMap,transmission:a.transmission>0,transmissionMap:!!a.transmissionMap,thicknessMap:!!a.thicknessMap,combine:a.combine,vertexTangents:!!a.normalMap&&!!M.attributes.tangent,vertexColors:a.vertexColors,vertexAlphas:!0===a.vertexColors&&!!M.attributes.color&&4===M.attributes.color.itemSize,vertexUvs:!!a.map||!!a.bumpMap||!!a.normalMap||!!a.specularMap||!!a.alphaMap||!!a.emissiveMap||!!a.roughnessMap||!!a.metalnessMap||!!a.clearcoatMap||!!a.clearcoatRoughnessMap||!!a.clearcoatNormalMap||!!a.iridescenceMap||!!a.iridescenceThicknessMap||!!a.displacementMap||!!a.transmissionMap||!!a.thicknessMap||!!a.specularIntensityMap||!!a.specularColorMap||!!a.sheenColorMap||!!a.sheenRoughnessMap,uvsVertexOnly:!(a.map||a.bumpMap||a.normalMap||a.specularMap||a.alphaMap||a.emissiveMap||a.roughnessMap||a.metalnessMap||a.clearcoatNormalMap||a.iridescenceMap||a.iridescenceThicknessMap||a.transmission>0||a.transmissionMap||a.thicknessMap||a.specularIntensityMap||a.specularColorMap||a.sheen>0||a.sheenColorMap||a.sheenRoughnessMap)&&!!a.displacementMap,fog:!!y,useFog:!0===a.fog,fogExp2:y&&y.isFogExp2,flatShading:!!a.flatShading,sizeAttenuation:a.sizeAttenuation,logarithmicDepthBuffer:c,skinning:!0===_.isSkinnedMesh,morphTargets:void 0!==M.morphAttributes.position,morphNormals:void 0!==M.morphAttributes.normal,morphColors:void 0!==M.morphAttributes.color,morphTargetsCount:E,morphTextureStride:C,numDirLights:o.directional.length,numPointLights:o.point.length,numSpotLights:o.spot.length,numSpotLightMaps:o.spotLightMap.length,numRectAreaLights:o.rectArea.length,numHemiLights:o.hemi.length,numDirLightShadows:o.directionalShadowMap.length,numPointLightShadows:o.pointShadowMap.length,numSpotLightShadows:o.spotShadowMap.length,numSpotLightShadowsWithMaps:o.numSpotLightShadowsWithMaps,numClippingPlanes:s.numPlanes,numClipIntersection:s.numIntersection,dithering:a.dithering,shadowMapEnabled:e.shadowMap.enabled&&h.length>0,shadowMapType:e.shadowMap.type,toneMapping:a.toneMapped?e.toneMapping:J,physicallyCorrectLights:e.physicallyCorrectLights,premultipliedAlpha:a.premultipliedAlpha,doubleSided:a.side===g,flipSided:a.side===m,useDepthPacking:!!a.depthPacking,depthPacking:a.depthPacking||0,index0AttributeName:a.index0AttributeName,extensionDerivatives:a.extensions&&a.extensions.derivatives,extensionFragDepth:a.extensions&&a.extensions.fragDepth,extensionDrawBuffers:a.extensions&&a.extensions.drawBuffers,extensionShaderTextureLOD:a.extensions&&a.extensions.shaderTextureLOD,rendererExtensionFragDepth:u||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:u||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:u||n.has("EXT_shader_texture_lod"),customProgramCacheKey:a.customProgramCacheKey()};return B},getProgramCacheKey:function(t){var i,n,r,a;let s=[];if(t.shaderID?s.push(t.shaderID):(s.push(t.customVertexShaderID),s.push(t.customFragmentShaderID)),void 0!==t.defines)for(let l in t.defines)s.push(l),s.push(t.defines[l]);return!1===t.isRawShaderMaterial&&(i=s,n=t,i.push(n.precision),i.push(n.outputEncoding),i.push(n.envMapMode),i.push(n.envMapCubeUVHeight),i.push(n.combine),i.push(n.vertexUvs),i.push(n.fogExp2),i.push(n.sizeAttenuation),i.push(n.morphTargetsCount),i.push(n.morphAttributeCount),i.push(n.numDirLights),i.push(n.numPointLights),i.push(n.numSpotLights),i.push(n.numSpotLightMaps),i.push(n.numHemiLights),i.push(n.numRectAreaLights),i.push(n.numDirLightShadows),i.push(n.numPointLightShadows),i.push(n.numSpotLightShadows),i.push(n.numSpotLightShadowsWithMaps),i.push(n.shadowMapType),i.push(n.toneMapping),i.push(n.numClippingPlanes),i.push(n.numClipIntersection),i.push(n.depthPacking),r=s,a=t,o.disableAll(),a.isWebGL2&&o.enable(0),a.supportsVertexTextures&&o.enable(1),a.instancing&&o.enable(2),a.instancingColor&&o.enable(3),a.map&&o.enable(4),a.matcap&&o.enable(5),a.envMap&&o.enable(6),a.lightMap&&o.enable(7),a.aoMap&&o.enable(8),a.emissiveMap&&o.enable(9),a.bumpMap&&o.enable(10),a.normalMap&&o.enable(11),a.objectSpaceNormalMap&&o.enable(12),a.tangentSpaceNormalMap&&o.enable(13),a.clearcoat&&o.enable(14),a.clearcoatMap&&o.enable(15),a.clearcoatRoughnessMap&&o.enable(16),a.clearcoatNormalMap&&o.enable(17),a.iridescence&&o.enable(18),a.iridescenceMap&&o.enable(19),a.iridescenceThicknessMap&&o.enable(20),a.displacementMap&&o.enable(21),a.specularMap&&o.enable(22),a.roughnessMap&&o.enable(23),a.metalnessMap&&o.enable(24),a.gradientMap&&o.enable(25),a.alphaMap&&o.enable(26),a.alphaTest&&o.enable(27),a.vertexColors&&o.enable(28),a.vertexAlphas&&o.enable(29),a.vertexUvs&&o.enable(30),a.vertexTangents&&o.enable(31),a.uvsVertexOnly&&o.enable(32),r.push(o.mask),o.disableAll(),a.fog&&o.enable(0),a.useFog&&o.enable(1),a.flatShading&&o.enable(2),a.logarithmicDepthBuffer&&o.enable(3),a.skinning&&o.enable(4),a.morphTargets&&o.enable(5),a.morphNormals&&o.enable(6),a.morphColors&&o.enable(7),a.premultipliedAlpha&&o.enable(8),a.shadowMapEnabled&&o.enable(9),a.physicallyCorrectLights&&o.enable(10),a.doubleSided&&o.enable(11),a.flipSided&&o.enable(12),a.useDepthPacking&&o.enable(13),a.dithering&&o.enable(14),a.specularIntensityMap&&o.enable(15),a.specularColorMap&&o.enable(16),a.transmission&&o.enable(17),a.transmissionMap&&o.enable(18),a.thicknessMap&&o.enable(19),a.sheen&&o.enable(20),a.sheenColorMap&&o.enable(21),a.sheenRoughnessMap&&o.enable(22),a.decodeVideoTexture&&o.enable(23),a.opaque&&o.enable(24),r.push(o.mask),s.push(e.outputEncoding)),s.push(t.customProgramCacheKey),s.join()},getUniforms:function(e){let t=f[e.type],i;if(t){let n=rY[t];i=rL.clone(n.uniforms)}else i=e.uniforms;return i},acquireProgram:function(t,i){let n;for(let r=0,s=h.length;r<s;r++){let o=h[r];if(o.cacheKey===i){n=o,++n.usedTimes;break}}return void 0===n&&(n=new sM(e,i,t,a),h.push(n)),n},releaseProgram:function(e){if(0==--e.usedTimes){let t=h.indexOf(e);h[t]=h[h.length-1],h.pop(),e.destroy()}},releaseShaderCache:function(e){l.remove(e)},programs:h,dispose:function(){l.dispose()}}}function sA(){let e=new WeakMap;return{get:function(t){let i=e.get(t);return void 0===i&&(i={},e.set(t,i)),i},remove:function(t){e.delete(t)},update:function(t,i,n){e.get(t)[i]=n},dispose:function(){e=new WeakMap}}}function sE(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function sC(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function sL(){let e=[],t=0,i=[],n=[],r=[];function a(i,n,r,a,s,o){let l=e[t];return void 0===l?(l={id:i.id,object:i,geometry:n,material:r,groupOrder:a,renderOrder:i.renderOrder,z:s,group:o},e[t]=l):(l.id=i.id,l.object=i,l.geometry=n,l.material=r,l.groupOrder=a,l.renderOrder=i.renderOrder,l.z=s,l.group=o),t++,l}return{opaque:i,transmissive:n,transparent:r,init:function(){t=0,i.length=0,n.length=0,r.length=0},push:function(e,t,s,o,l,h){let u=a(e,t,s,o,l,h);s.transmission>0?n.push(u):!0===s.transparent?r.push(u):i.push(u)},unshift:function(e,t,s,o,l,h){let u=a(e,t,s,o,l,h);s.transmission>0?n.unshift(u):!0===s.transparent?r.unshift(u):i.unshift(u)},finish:function(){for(let i=t,n=e.length;i<n;i++){let r=e[i];if(null===r.id)break;r.id=null,r.object=null,r.geometry=null,r.material=null,r.group=null}},sort:function(e,t){i.length>1&&i.sort(e||sE),n.length>1&&n.sort(t||sC),r.length>1&&r.sort(t||sC)}}}function sR(){let e=new WeakMap;return{get:function(t,i){let n=e.get(t),r;return void 0===n?(r=new sL,e.set(t,[r])):i>=n.length?(r=new sL,n.push(r)):r=n[i],r},dispose:function(){e=new WeakMap}}}function sP(){let e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let i;switch(t.type){case"DirectionalLight":i={direction:new iH,color:new iC};break;case"SpotLight":i={position:new iH,direction:new iH,color:new iC,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":i={position:new iH,color:new iC,distance:0,decay:0};break;case"HemisphereLight":i={direction:new iH,skyColor:new iC,groundColor:new iC};break;case"RectAreaLight":i={color:new iC,position:new iH,halfWidth:new iH,halfHeight:new iH}}return e[t.id]=i,i}}}let sI=0;function sD(e,t){return(t.castShadow?2:0)-(e.castShadow?2:0)+(t.map?1:0)-(e.map?1:0)}function sN(e,t){let i=new sP,n=function(){let e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let i;switch(t.type){case"DirectionalLight":case"SpotLight":i={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ic};break;case"PointLight":i={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ic,shadowCameraNear:1,shadowCameraFar:1e3}}return e[t.id]=i,i}}}(),r={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let a=0;a<9;a++)r.probe.push(new iH);let s=new iH,o=new nu,l=new nu;return{setup:function(a,s){let o=0,l=0,h=0;for(let u=0;u<9;u++)r.probe[u].set(0,0,0);let c=0,d=0,p=0,f=0,m=0,g=0,v=0,x=0,_=0,y=0;a.sort(sD);let M=!0!==s?Math.PI:1;for(let b=0,S=a.length;b<S;b++){let w=a[b],T=w.color,A=w.intensity,E=w.distance,C=w.shadow&&w.shadow.map?w.shadow.map.texture:null;if(w.isAmbientLight)o+=T.r*A*M,l+=T.g*A*M,h+=T.b*A*M;else if(w.isLightProbe)for(let L=0;L<9;L++)r.probe[L].addScaledVector(w.sh.coefficients[L],A);else if(w.isDirectionalLight){let R=i.get(w);if(R.color.copy(w.color).multiplyScalar(w.intensity*M),w.castShadow){let P=w.shadow,I=n.get(w);I.shadowBias=P.bias,I.shadowNormalBias=P.normalBias,I.shadowRadius=P.radius,I.shadowMapSize=P.mapSize,r.directionalShadow[c]=I,r.directionalShadowMap[c]=C,r.directionalShadowMatrix[c]=w.shadow.matrix,g++}r.directional[c]=R,c++}else if(w.isSpotLight){let D=i.get(w);D.position.setFromMatrixPosition(w.matrixWorld),D.color.copy(T).multiplyScalar(A*M),D.distance=E,D.coneCos=Math.cos(w.angle),D.penumbraCos=Math.cos(w.angle*(1-w.penumbra)),D.decay=w.decay,r.spot[p]=D;let N=w.shadow;if(w.map&&(r.spotLightMap[_]=w.map,_++,N.updateMatrices(w),w.castShadow&&y++),r.spotLightMatrix[p]=N.matrix,w.castShadow){let O=n.get(w);O.shadowBias=N.bias,O.shadowNormalBias=N.normalBias,O.shadowRadius=N.radius,O.shadowMapSize=N.mapSize,r.spotShadow[p]=O,r.spotShadowMap[p]=C,x++}p++}else if(w.isRectAreaLight){let z=i.get(w);z.color.copy(T).multiplyScalar(A),z.halfWidth.set(.5*w.width,0,0),z.halfHeight.set(0,.5*w.height,0),r.rectArea[f]=z,f++}else if(w.isPointLight){let U=i.get(w);if(U.color.copy(w.color).multiplyScalar(w.intensity*M),U.distance=w.distance,U.decay=w.decay,w.castShadow){let B=w.shadow,F=n.get(w);F.shadowBias=B.bias,F.shadowNormalBias=B.normalBias,F.shadowRadius=B.radius,F.shadowMapSize=B.mapSize,F.shadowCameraNear=B.camera.near,F.shadowCameraFar=B.camera.far,r.pointShadow[d]=F,r.pointShadowMap[d]=C,r.pointShadowMatrix[d]=w.shadow.matrix,v++}r.point[d]=U,d++}else if(w.isHemisphereLight){let k=i.get(w);k.skyColor.copy(w.color).multiplyScalar(A*M),k.groundColor.copy(w.groundColor).multiplyScalar(A*M),r.hemi[m]=k,m++}}f>0&&(t.isWebGL2?(r.rectAreaLTC1=rX.LTC_FLOAT_1,r.rectAreaLTC2=rX.LTC_FLOAT_2):!0===e.has("OES_texture_float_linear")?(r.rectAreaLTC1=rX.LTC_FLOAT_1,r.rectAreaLTC2=rX.LTC_FLOAT_2):!0===e.has("OES_texture_half_float_linear")?(r.rectAreaLTC1=rX.LTC_HALF_1,r.rectAreaLTC2=rX.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),r.ambient[0]=o,r.ambient[1]=l,r.ambient[2]=h;let G=r.hash;(G.directionalLength!==c||G.pointLength!==d||G.spotLength!==p||G.rectAreaLength!==f||G.hemiLength!==m||G.numDirectionalShadows!==g||G.numPointShadows!==v||G.numSpotShadows!==x||G.numSpotMaps!==_)&&(r.directional.length=c,r.spot.length=p,r.rectArea.length=f,r.point.length=d,r.hemi.length=m,r.directionalShadow.length=g,r.directionalShadowMap.length=g,r.pointShadow.length=v,r.pointShadowMap.length=v,r.spotShadow.length=x,r.spotShadowMap.length=x,r.directionalShadowMatrix.length=g,r.pointShadowMatrix.length=v,r.spotLightMatrix.length=x+_-y,r.spotLightMap.length=_,r.numSpotLightShadowsWithMaps=y,G.directionalLength=c,G.pointLength=d,G.spotLength=p,G.rectAreaLength=f,G.hemiLength=m,G.numDirectionalShadows=g,G.numPointShadows=v,G.numSpotShadows=x,G.numSpotMaps=_,r.version=sI++)},setupView:function(e,t){let i=0,n=0,a=0,h=0,u=0,c=t.matrixWorldInverse;for(let d=0,p=e.length;d<p;d++){let f=e[d];if(f.isDirectionalLight){let m=r.directional[i];m.direction.setFromMatrixPosition(f.matrixWorld),s.setFromMatrixPosition(f.target.matrixWorld),m.direction.sub(s),m.direction.transformDirection(c),i++}else if(f.isSpotLight){let g=r.spot[a];g.position.setFromMatrixPosition(f.matrixWorld),g.position.applyMatrix4(c),g.direction.setFromMatrixPosition(f.matrixWorld),s.setFromMatrixPosition(f.target.matrixWorld),g.direction.sub(s),g.direction.transformDirection(c),a++}else if(f.isRectAreaLight){let v=r.rectArea[h];v.position.setFromMatrixPosition(f.matrixWorld),v.position.applyMatrix4(c),l.identity(),o.copy(f.matrixWorld),o.premultiply(c),l.extractRotation(o),v.halfWidth.set(.5*f.width,0,0),v.halfHeight.set(0,.5*f.height,0),v.halfWidth.applyMatrix4(l),v.halfHeight.applyMatrix4(l),h++}else if(f.isPointLight){let x=r.point[n];x.position.setFromMatrixPosition(f.matrixWorld),x.position.applyMatrix4(c),n++}else if(f.isHemisphereLight){let _=r.hemi[u];_.direction.setFromMatrixPosition(f.matrixWorld),_.direction.transformDirection(c),u++}}},state:r}}function sO(e,t){let i=new sN(e,t),n=[],r=[];return{init:function(){n.length=0,r.length=0},state:{lightsArray:n,shadowsArray:r,lights:i},setupLights:function(e){i.setup(n,e)},setupLightsView:function(e){i.setupView(n,e)},pushLight:function(e){n.push(e)},pushShadow:function(e){r.push(e)}}}function sz(e,t){let i=new WeakMap;return{get:function(n,r=0){let a=i.get(n),s;return void 0===a?(s=new sO(e,t),i.set(n,[s])):r>=a.length?(s=new sO(e,t),a.push(s)):s=a[r],s},dispose:function(){i=new WeakMap}}}class sU extends nY{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=tb,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class sB extends nY{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.referencePosition=new iH,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}function sF(e,t,i){let n=new rV,r=new ic,a=new ic,s=new iO,o=new sU({depthPacking:tS}),l=new sB,h={},u=i.maxTextureSize,d={0:m,1:f,2:g},x=new rR({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new ic},radius:{value:4}},vertexShader:"void main() {\n	gl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n	const float samples = float( VSM_SAMPLES );\n	float mean = 0.0;\n	float squared_mean = 0.0;\n	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n	for ( float i = 0.0; i < samples; i ++ ) {\n		float uvOffset = uvStart + i * uvStride;\n		#ifdef HORIZONTAL_PASS\n			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n			mean += distribution.x;\n			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n		#else\n			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n			mean += depth;\n			squared_mean += depth * depth;\n		#endif\n	}\n	mean = mean / samples;\n	squared_mean = squared_mean / samples;\n	float std_dev = sqrt( squared_mean - mean * mean );\n	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),_=x.clone();_.defines.HORIZONTAL_PASS=1;let y=new rs;y.setAttribute("position",new n$(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));let M=new rw(y,x),b=this;function S(i,n){let a=t.update(M);x.defines.VSM_SAMPLES!==i.blurSamples&&(x.defines.VSM_SAMPLES=i.blurSamples,_.defines.VSM_SAMPLES=i.blurSamples,x.needsUpdate=!0,_.needsUpdate=!0),null===i.mapPass&&(i.mapPass=new iz(r.x,r.y)),x.uniforms.shadow_pass.value=i.map.texture,x.uniforms.resolution.value=i.mapSize,x.uniforms.radius.value=i.radius,e.setRenderTarget(i.mapPass),e.clear(),e.renderBufferDirect(n,null,a,x,M,null),_.uniforms.shadow_pass.value=i.mapPass.texture,_.uniforms.resolution.value=i.mapSize,_.uniforms.radius.value=i.radius,e.setRenderTarget(i.map),e.clear(),e.renderBufferDirect(n,null,a,_,M,null)}function w(t,i,n,r,a,s){let u=null,c=!0===n.isPointLight?t.customDistanceMaterial:t.customDepthMaterial;if(u=void 0!==c?c:!0===n.isPointLight?l:o,e.localClippingEnabled&&!0===i.clipShadows&&Array.isArray(i.clippingPlanes)&&0!==i.clippingPlanes.length||i.displacementMap&&0!==i.displacementScale||i.alphaMap&&i.alphaTest>0){let f=u.uuid,m=i.uuid,g=h[f];void 0===g&&(g={},h[f]=g);let v=g[m];void 0===v&&(v=u.clone(),g[m]=v),u=v}return u.visible=i.visible,u.wireframe=i.wireframe,s===p?u.side=null!==i.shadowSide?i.shadowSide:i.side:u.side=null!==i.shadowSide?i.shadowSide:d[i.side],u.alphaMap=i.alphaMap,u.alphaTest=i.alphaTest,u.clipShadows=i.clipShadows,u.clippingPlanes=i.clippingPlanes,u.clipIntersection=i.clipIntersection,u.displacementMap=i.displacementMap,u.displacementScale=i.displacementScale,u.displacementBias=i.displacementBias,u.wireframeLinewidth=i.wireframeLinewidth,u.linewidth=i.linewidth,!0===n.isPointLight&&!0===u.isMeshDistanceMaterial&&(u.referencePosition.setFromMatrixPosition(n.matrixWorld),u.nearDistance=r,u.farDistance=a),u}function T(i,r,a,s,o){if(!1===i.visible)return;let l=i.layers.test(r.layers);if(l&&(i.isMesh||i.isLine||i.isPoints)&&(i.castShadow||i.receiveShadow&&o===p)&&(!i.frustumCulled||n.intersectsObject(i))){i.modelViewMatrix.multiplyMatrices(a.matrixWorldInverse,i.matrixWorld);let h=t.update(i),u=i.material;if(Array.isArray(u)){let c=h.groups;for(let d=0,f=c.length;d<f;d++){let m=c[d],g=u[m.materialIndex];if(g&&g.visible){let v=w(i,g,s,a.near,a.far,o);e.renderBufferDirect(a,null,h,v,i,m)}}}else if(u.visible){let x=w(i,u,s,a.near,a.far,o);e.renderBufferDirect(a,null,h,x,i,null)}}let _=i.children;for(let y=0,M=_.length;y<M;y++)T(_[y],r,a,s,o)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=c,this.render=function(t,i,o){if(!1===b.enabled||!1===b.autoUpdate&&!1===b.needsUpdate||0===t.length)return;let l=e.getRenderTarget(),h=e.getActiveCubeFace(),c=e.getActiveMipmapLevel(),d=e.state;d.setBlending(v),d.buffers.color.setClear(1,1,1,1),d.buffers.depth.setTest(!0),d.setScissorTest(!1);for(let f=0,m=t.length;f<m;f++){let g=t[f],x=g.shadow;if(void 0===x){console.warn("THREE.WebGLShadowMap:",g,"has no shadow.");continue}if(!1===x.autoUpdate&&!1===x.needsUpdate)continue;r.copy(x.mapSize);let _=x.getFrameExtents();if(r.multiply(_),a.copy(x.mapSize),(r.x>u||r.y>u)&&(r.x>u&&(a.x=Math.floor(u/_.x),r.x=a.x*_.x,x.mapSize.x=a.x),r.y>u&&(a.y=Math.floor(u/_.y),r.y=a.y*_.y,x.mapSize.y=a.y)),null===x.map){let y=this.type!==p?{minFilter:ec,magFilter:ec}:{};x.map=new iz(r.x,r.y,y),x.map.texture.name=g.name+".shadowMap",x.camera.updateProjectionMatrix()}e.setRenderTarget(x.map),e.clear();let M=x.getViewportCount();for(let w=0;w<M;w++){let A=x.getViewport(w);s.set(a.x*A.x,a.y*A.y,a.x*A.z,a.y*A.w),d.viewport(s),x.updateMatrices(g,w),n=x.getFrustum(),T(i,o,x.camera,g,this.type)}!0!==x.isPointLightShadow&&this.type===p&&S(x,o),x.needsUpdate=!1}b.needsUpdate=!1,e.setRenderTarget(l,h,c)}}function sk(e,t,i){let n=i.isWebGL2,r=new function(){let t=!1,i=new iO,n=null,r=new iO(0,0,0,0);return{setMask:function(i){n===i||t||(e.colorMask(i,i,i,i),n=i)},setLocked:function(e){t=e},setClear:function(t,n,a,s,o){!0===o&&(t*=s,n*=s,a*=s),i.set(t,n,a,s),!1===r.equals(i)&&(e.clearColor(t,n,a,s),r.copy(i))},reset:function(){t=!1,n=null,r.set(-1,0,0,0)}}},a=new function(){let t=!1,i=null,n=null,r=null;return{setTest:function(e){e?eM(2929):eb(2929)},setMask:function(n){i===n||t||(e.depthMask(n),i=n)},setFunc:function(t){if(n!==t){if(t)switch(t){case F:e.depthFunc(512);break;case k:e.depthFunc(519);break;case G:e.depthFunc(513);break;case V:e.depthFunc(515);break;case H:e.depthFunc(514);break;case W:e.depthFunc(518);break;case j:e.depthFunc(516);break;case q:e.depthFunc(517);break;default:e.depthFunc(515)}else e.depthFunc(515);n=t}},setLocked:function(e){t=e},setClear:function(t){r!==t&&(e.clearDepth(t),r=t)},reset:function(){t=!1,i=null,n=null,r=null}}},h=new function(){let t=!1,i=null,n=null,r=null,a=null,s=null,o=null,l=null,h=null;return{setTest:function(e){t||(e?eM(2960):eb(2960))},setMask:function(n){i===n||t||(e.stencilMask(n),i=n)},setFunc:function(t,i,s){(n!==t||r!==i||a!==s)&&(e.stencilFunc(t,i,s),n=t,r=i,a=s)},setOp:function(t,i,n){(s!==t||o!==i||l!==n)&&(e.stencilOp(t,i,n),s=t,o=i,l=n)},setLocked:function(e){t=e},setClear:function(t){h!==t&&(e.clearStencil(t),h=t)},reset:function(){t=!1,i=null,n=null,r=null,a=null,s=null,o=null,l=null,h=null}}},u=new WeakMap,c=new WeakMap,d={},p={},f=new WeakMap,X=[],Y=null,Z=!1,J=null,K=null,$=null,Q=null,ee=null,et=null,ei=null,en=!1,er=null,ea=null,es=null,eo=null,el=null,eh=e.getParameter(35661),eu=!1,ec=0,ed=e.getParameter(7938);-1!==ed.indexOf("WebGL")?eu=parseFloat(/^WebGL (\d)/.exec(ed)[1])>=1:-1!==ed.indexOf("OpenGL ES")&&(eu=parseFloat(/^OpenGL ES (\d)/.exec(ed)[1])>=2);let ep=null,ef={},em=e.getParameter(3088),eg=e.getParameter(2978),ev=new iO().fromArray(em),ex=new iO().fromArray(eg);function e_(t,i,n){let r=new Uint8Array(4),a=e.createTexture();e.bindTexture(t,a),e.texParameteri(t,10241,9728),e.texParameteri(t,10240,9728);for(let s=0;s<n;s++)e.texImage2D(i+s,0,6408,1,1,0,6408,5121,r);return a}let ey={};function eM(t){!0!==d[t]&&(e.enable(t),d[t]=!0)}function eb(t){!1!==d[t]&&(e.disable(t),d[t]=!1)}ey[3553]=e_(3553,3553,1),ey[34067]=e_(34067,34069,6),r.setClear(0,0,0,1),a.setClear(1),h.setClear(0),eM(2929),a.setFunc(V),eE(!1),eC(o),eM(2884),eA(v);let eS={[S]:32774,[w]:32778,[T]:32779};if(n)eS[A]=32775,eS[E]=32776;else{let ew=t.get("EXT_blend_minmax");null!==ew&&(eS[A]=ew.MIN_EXT,eS[E]=ew.MAX_EXT)}let eT={[C]:0,[L]:1,[R]:768,[I]:770,[B]:776,[z]:774,[N]:772,[P]:769,[D]:771,[U]:775,[O]:773};function eA(t,i,n,r,a,s,o,l){if(t===v){!0===Z&&(eb(3042),Z=!1);return}if(!1===Z&&(eM(3042),Z=!0),t!==b){if(t!==J||l!==en){if((K!==S||ee!==S)&&(e.blendEquation(32774),K=S,ee=S),l)switch(t){case x:e.blendFuncSeparate(1,771,1,771);break;case _:e.blendFunc(1,1);break;case y:e.blendFuncSeparate(0,769,0,1);break;case M:e.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}else switch(t){case x:e.blendFuncSeparate(770,771,1,771);break;case _:e.blendFunc(770,1);break;case y:e.blendFuncSeparate(0,769,0,1);break;case M:e.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}$=null,Q=null,et=null,ei=null,J=t,en=l}return}a=a||i,s=s||n,o=o||r,(i!==K||a!==ee)&&(e.blendEquationSeparate(eS[i],eS[a]),K=i,ee=a),(n!==$||r!==Q||s!==et||o!==ei)&&(e.blendFuncSeparate(eT[n],eT[r],eT[s],eT[o]),$=n,Q=r,et=s,ei=o),J=t,en=null}function eE(t){er!==t&&(t?e.frontFace(2304):e.frontFace(2305),er=t)}function eC(t){t!==s?(eM(2884),t!==ea&&(t===o?e.cullFace(1029):t===l?e.cullFace(1028):e.cullFace(1032))):eb(2884),ea=t}function eL(t,i,n){t?(eM(32823),(eo!==i||el!==n)&&(e.polygonOffset(i,n),eo=i,el=n)):eb(32823)}function eR(t){void 0===t&&(t=33984+eh-1),ep!==t&&(e.activeTexture(t),ep=t)}return{buffers:{color:r,depth:a,stencil:h},enable:eM,disable:eb,bindFramebuffer:function(t,i){return p[t]!==i&&(e.bindFramebuffer(t,i),p[t]=i,n&&(36009===t&&(p[36160]=i),36160===t&&(p[36009]=i)),!0)},drawBuffers:function(n,r){let a=X,s=!1;if(n){if(void 0===(a=f.get(r))&&(a=[],f.set(r,a)),n.isWebGLMultipleRenderTargets){let o=n.texture;if(a.length!==o.length||36064!==a[0]){for(let l=0,h=o.length;l<h;l++)a[l]=36064+l;a.length=o.length,s=!0}}else 36064!==a[0]&&(a[0]=36064,s=!0)}else 1029!==a[0]&&(a[0]=1029,s=!0);s&&(i.isWebGL2?e.drawBuffers(a):t.get("WEBGL_draw_buffers").drawBuffersWEBGL(a))},useProgram:function(t){return Y!==t&&(e.useProgram(t),Y=t,!0)},setBlending:eA,setMaterial:function(e,t){e.side===g?eb(2884):eM(2884);let i=e.side===m;t&&(i=!i),eE(i),e.blending===x&&!1===e.transparent?eA(v):eA(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),a.setFunc(e.depthFunc),a.setTest(e.depthTest),a.setMask(e.depthWrite),r.setMask(e.colorWrite);let n=e.stencilWrite;h.setTest(n),n&&(h.setMask(e.stencilWriteMask),h.setFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),h.setOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),eL(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),!0===e.alphaToCoverage?eM(32926):eb(32926)},setFlipSided:eE,setCullFace:eC,setLineWidth:function(t){t!==es&&(eu&&e.lineWidth(t),es=t)},setPolygonOffset:eL,setScissorTest:function(e){e?eM(3089):eb(3089)},activeTexture:eR,bindTexture:function(t,i){null===ep&&eR();let n=ef[ep];void 0===n&&(n={type:void 0,texture:void 0},ef[ep]=n),(n.type!==t||n.texture!==i)&&(e.bindTexture(t,i||ey[t]),n.type=t,n.texture=i)},unbindTexture:function(){let t=ef[ep];void 0!==t&&void 0!==t.type&&(e.bindTexture(t.type,null),t.type=void 0,t.texture=void 0)},compressedTexImage2D:function(){try{e.compressedTexImage2D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage2D:function(){try{e.texImage2D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage3D:function(){try{e.texImage3D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},updateUBOMapping:function(t,i){let n=c.get(i);void 0===n&&(n=new WeakMap,c.set(i,n));let r=n.get(t);void 0===r&&(r=e.getUniformBlockIndex(i,t.name),n.set(t,r))},uniformBlockBinding:function(t,i){let n=c.get(i),r=n.get(t);u.get(t)!==r&&(e.uniformBlockBinding(i,r,t.__bindingPointIndex),u.set(t,r))},texStorage2D:function(){try{e.texStorage2D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texStorage3D:function(){try{e.texStorage3D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texSubImage2D:function(){try{e.texSubImage2D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texSubImage3D:function(){try{e.texSubImage3D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},compressedTexSubImage2D:function(){try{e.compressedTexSubImage2D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},scissor:function(t){!1===ev.equals(t)&&(e.scissor(t.x,t.y,t.z,t.w),ev.copy(t))},viewport:function(t){!1===ex.equals(t)&&(e.viewport(t.x,t.y,t.z,t.w),ex.copy(t))},reset:function(){e.disable(3042),e.disable(2884),e.disable(2929),e.disable(32823),e.disable(3089),e.disable(2960),e.disable(32926),e.blendEquation(32774),e.blendFunc(1,0),e.blendFuncSeparate(1,0,1,0),e.colorMask(!0,!0,!0,!0),e.clearColor(0,0,0,0),e.depthMask(!0),e.depthFunc(513),e.clearDepth(1),e.stencilMask(4294967295),e.stencilFunc(519,0,4294967295),e.stencilOp(7680,7680,7680),e.clearStencil(0),e.cullFace(1029),e.frontFace(2305),e.polygonOffset(0,0),e.activeTexture(33984),e.bindFramebuffer(36160,null),!0===n&&(e.bindFramebuffer(36009,null),e.bindFramebuffer(36008,null)),e.useProgram(null),e.lineWidth(1),e.scissor(0,0,e.canvas.width,e.canvas.height),e.viewport(0,0,e.canvas.width,e.canvas.height),d={},ep=null,ef={},p={},f=new WeakMap,X=[],Y=null,Z=!1,J=null,K=null,$=null,Q=null,ee=null,et=null,ei=null,en=!1,er=null,ea=null,es=null,eo=null,el=null,ev.set(0,0,e.canvas.width,e.canvas.height),ex.set(0,0,e.canvas.width,e.canvas.height),r.reset(),a.reset(),h.reset()}}}function sG(e,t,i,n,r,a,s){let o=r.isWebGL2,l=r.maxTextures,h=r.maxCubemapSize,u=r.maxTextureSize,c=r.maxSamples,d=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null,p=/OculusBrowser/g.test(navigator.userAgent),f=new WeakMap,m,g=new WeakMap,v=!1;try{v="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(x){}function _(e,t){return v?new OffscreenCanvas(e,t):iv("canvas")}function y(e,t,i,n){let r=1;if((e.width>n||e.height>n)&&(r=n/Math.max(e.width,e.height)),r<1||!0===t){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){let a=t?io:Math.floor,s=a(r*e.width),o=a(r*e.height);void 0===m&&(m=_(s,o));let l=i?_(s,o):m;l.width=s,l.height=o;let h=l.getContext("2d");return h.drawImage(e,0,0,s,o),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+e.width+"x"+e.height+") to ("+s+"x"+o+")."),l}"data"in e&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+e.width+"x"+e.height+").")}return e}function M(e){return ia(e.width)&&ia(e.height)}function b(e,t){return e.generateMipmaps&&t&&e.minFilter!==ec&&e.minFilter!==eg}function S(t){e.generateMipmap(t)}function w(i,n,r,a,s=!1){if(!1===o)return n;if(null!==i){if(void 0!==e[i])return e[i];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+i+"'")}let l=n;return 6403===n&&(5126===r&&(l=33326),5131===r&&(l=33325),5121===r&&(l=33321)),33319===n&&(5126===r&&(l=33328),5131===r&&(l=33327),5121===r&&(l=33323)),6408===n&&(5126===r&&(l=34836),5131===r&&(l=34842),5121===r&&(l=a===tM&&!1===s?35907:32856),32819===r&&(l=32854),32820===r&&(l=32855)),(33325===l||33326===l||33327===l||33328===l||34842===l||34836===l)&&t.get("EXT_color_buffer_float"),l}function T(e,t,i){return!0===b(e,i)||e.isFramebufferTexture&&e.minFilter!==ec&&e.minFilter!==eg?Math.log2(Math.max(t.width,t.height))+1:void 0!==e.mipmaps&&e.mipmaps.length>0?e.mipmaps.length:e.isCompressedTexture&&Array.isArray(e.image)?t.mipmaps.length:1}function A(e){return e===ec||e===ed||e===ef?9728:9729}function E(e){let t=e.target;t.removeEventListener("dispose",E),function(e){let t=n.get(e);if(void 0===t.__webglInit)return;let i=e.source,r=g.get(i);if(r){let a=r[t.__cacheKey];a.usedTimes--,0===a.usedTimes&&L(e),0===Object.keys(r).length&&g.delete(i)}n.remove(e)}(t),t.isVideoTexture&&f.delete(t)}function C(t){let i=t.target;i.removeEventListener("dispose",C),function(t){let i=t.texture,r=n.get(t),a=n.get(i);if(void 0!==a.__webglTexture&&(e.deleteTexture(a.__webglTexture),s.memory.textures--),t.depthTexture&&t.depthTexture.dispose(),t.isWebGLCubeRenderTarget)for(let o=0;o<6;o++)e.deleteFramebuffer(r.__webglFramebuffer[o]),r.__webglDepthbuffer&&e.deleteRenderbuffer(r.__webglDepthbuffer[o]);else{if(e.deleteFramebuffer(r.__webglFramebuffer),r.__webglDepthbuffer&&e.deleteRenderbuffer(r.__webglDepthbuffer),r.__webglMultisampledFramebuffer&&e.deleteFramebuffer(r.__webglMultisampledFramebuffer),r.__webglColorRenderbuffer)for(let l=0;l<r.__webglColorRenderbuffer.length;l++)r.__webglColorRenderbuffer[l]&&e.deleteRenderbuffer(r.__webglColorRenderbuffer[l]);r.__webglDepthRenderbuffer&&e.deleteRenderbuffer(r.__webglDepthRenderbuffer)}if(t.isWebGLMultipleRenderTargets)for(let h=0,u=i.length;h<u;h++){let c=n.get(i[h]);c.__webglTexture&&(e.deleteTexture(c.__webglTexture),s.memory.textures--),n.remove(i[h])}n.remove(i),n.remove(t)}(i)}function L(t){let i=n.get(t);e.deleteTexture(i.__webglTexture);let r=t.source,a=g.get(r);delete a[i.__cacheKey],s.memory.textures--}let R=0;function P(e,t){let r=n.get(e);if(e.isVideoTexture&&function(e){let t=s.render.frame;f.get(e)!==t&&(f.set(e,t),e.update())}(e),!1===e.isRenderTargetTexture&&e.version>0&&r.__version!==e.version){let a=e.image;if(null===a)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(!1===a.complete)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{z(r,e,t);return}}i.activeTexture(33984+t),i.bindTexture(3553,r.__webglTexture)}let I={[el]:10497,[eh]:33071,[eu]:33648},D={[ec]:9728,[ed]:9984,[ef]:9986,[eg]:9729,[ev]:9985,[e_]:9987};function N(i,a,s){if(s?(e.texParameteri(i,10242,I[a.wrapS]),e.texParameteri(i,10243,I[a.wrapT]),(32879===i||35866===i)&&e.texParameteri(i,32882,I[a.wrapR]),e.texParameteri(i,10240,D[a.magFilter]),e.texParameteri(i,10241,D[a.minFilter])):(e.texParameteri(i,10242,33071),e.texParameteri(i,10243,33071),(32879===i||35866===i)&&e.texParameteri(i,32882,33071),(a.wrapS!==eh||a.wrapT!==eh)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),e.texParameteri(i,10240,A(a.magFilter)),e.texParameteri(i,10241,A(a.minFilter)),a.minFilter!==ec&&a.minFilter!==eg&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===t.has("EXT_texture_filter_anisotropic")){let l=t.get("EXT_texture_filter_anisotropic");(a.type!==eE||!1!==t.has("OES_texture_float_linear"))&&(!1!==o||a.type!==eC||!1!==t.has("OES_texture_half_float_linear"))&&(a.anisotropy>1||n.get(a).__currentAnisotropy)&&(e.texParameterf(i,l.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(a.anisotropy,r.getMaxAnisotropy())),n.get(a).__currentAnisotropy=a.anisotropy)}}function O(t,i){let n=!1;void 0===t.__webglInit&&(t.__webglInit=!0,i.addEventListener("dispose",E));let r=i.source,a=g.get(r);void 0===a&&(a={},g.set(r,a));let o=function(e){let t=[];return t.push(e.wrapS),t.push(e.wrapT),t.push(e.magFilter),t.push(e.minFilter),t.push(e.anisotropy),t.push(e.internalFormat),t.push(e.format),t.push(e.type),t.push(e.generateMipmaps),t.push(e.premultiplyAlpha),t.push(e.flipY),t.push(e.unpackAlignment),t.push(e.encoding),t.join()}(i);if(o!==t.__cacheKey){void 0===a[o]&&(a[o]={texture:e.createTexture(),usedTimes:0},s.memory.textures++,n=!0),a[o].usedTimes++;let l=a[t.__cacheKey];void 0!==l&&(a[t.__cacheKey].usedTimes--,0===l.usedTimes&&L(i)),t.__cacheKey=o,t.__webglTexture=a[o].texture}return n}function z(t,n,r){let s=3553;n.isDataArrayTexture&&(s=35866),n.isData3DTexture&&(s=32879);let l=O(t,n),h=n.source;if(i.activeTexture(33984+r),i.bindTexture(s,t.__webglTexture),h.version!==h.__currentVersion||!0===l){var c;e.pixelStorei(37440,n.flipY),e.pixelStorei(37441,n.premultiplyAlpha),e.pixelStorei(3317,n.unpackAlignment),e.pixelStorei(37443,0);let d=!o&&(n.wrapS!==eh||n.wrapT!==eh||n.minFilter!==ec&&n.minFilter!==eg)&&!1===M(n.image),p=y(n.image,d,!1,u);p=V(n,p);let f=M(p)||o,m=a.convert(n.format,n.encoding),g=a.convert(n.type),v=w(n.internalFormat,m,g,n.encoding,n.isVideoTexture);N(s,n,f);let x,_=n.mipmaps,A=o&&!0!==n.isVideoTexture,E=void 0===h.__currentVersion||!0===l,C=T(n,p,f);if(n.isDepthTexture)v=6402,o?v=n.type===eE?36012:n.type===eA?33190:n.type===eP?35056:33189:n.type===eE&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),n.format===eU&&6402===v&&n.type!==ew&&n.type!==eA&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),n.type=eA,g=a.convert(n.type)),n.format===eB&&6402===v&&(v=34041,n.type!==eP&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),n.type=eP,g=a.convert(n.type))),E&&(A?i.texStorage2D(3553,1,v,p.width,p.height):i.texImage2D(3553,0,v,p.width,p.height,0,m,g,null));else if(n.isDataTexture){if(_.length>0&&f){A&&E&&i.texStorage2D(3553,C,v,_[0].width,_[0].height);for(let L=0,R=_.length;L<R;L++)x=_[L],A?i.texSubImage2D(3553,L,0,0,x.width,x.height,m,g,x.data):i.texImage2D(3553,L,v,x.width,x.height,0,m,g,x.data);n.generateMipmaps=!1}else A?(E&&i.texStorage2D(3553,C,v,p.width,p.height),i.texSubImage2D(3553,0,0,0,p.width,p.height,m,g,p.data)):i.texImage2D(3553,0,v,p.width,p.height,0,m,g,p.data)}else if(n.isCompressedTexture){A&&E&&i.texStorage2D(3553,C,v,_[0].width,_[0].height);for(let P=0,I=_.length;P<I;P++)x=_[P],n.format!==eN?null!==m?A?i.compressedTexSubImage2D(3553,P,0,0,x.width,x.height,m,x.data):i.compressedTexImage2D(3553,P,v,x.width,x.height,0,x.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):A?i.texSubImage2D(3553,P,0,0,x.width,x.height,m,g,x.data):i.texImage2D(3553,P,v,x.width,x.height,0,m,g,x.data)}else if(n.isDataArrayTexture)A?(E&&i.texStorage3D(35866,C,v,p.width,p.height,p.depth),i.texSubImage3D(35866,0,0,0,0,p.width,p.height,p.depth,m,g,p.data)):i.texImage3D(35866,0,v,p.width,p.height,p.depth,0,m,g,p.data);else if(n.isData3DTexture)A?(E&&i.texStorage3D(32879,C,v,p.width,p.height,p.depth),i.texSubImage3D(32879,0,0,0,0,p.width,p.height,p.depth,m,g,p.data)):i.texImage3D(32879,0,v,p.width,p.height,p.depth,0,m,g,p.data);else if(n.isFramebufferTexture){if(E){if(A)i.texStorage2D(3553,C,v,p.width,p.height);else{let D=p.width,z=p.height;for(let U=0;U<C;U++)i.texImage2D(3553,U,v,D,z,0,m,g,null),D>>=1,z>>=1}}}else if(_.length>0&&f){A&&E&&i.texStorage2D(3553,C,v,_[0].width,_[0].height);for(let B=0,F=_.length;B<F;B++)x=_[B],A?i.texSubImage2D(3553,B,0,0,m,g,x):i.texImage2D(3553,B,v,m,g,x);n.generateMipmaps=!1}else A?(E&&i.texStorage2D(3553,C,v,p.width,p.height),i.texSubImage2D(3553,0,0,0,m,g,p)):i.texImage2D(3553,0,v,m,g,p);b(n,f)&&S(s),h.__currentVersion=h.version,n.onUpdate&&n.onUpdate(n)}t.__version=n.version}function U(t,r,s,o,l){let h=a.convert(s.format,s.encoding),u=a.convert(s.type),c=w(s.internalFormat,h,u,s.encoding),p=n.get(r);p.__hasExternalTextures||(32879===l||35866===l?i.texImage3D(l,0,c,r.width,r.height,r.depth,0,h,u,null):i.texImage2D(l,0,c,r.width,r.height,0,h,u,null)),i.bindFramebuffer(36160,t),G(r)?d.framebufferTexture2DMultisampleEXT(36160,o,l,n.get(s).__webglTexture,0,k(r)):e.framebufferTexture2D(36160,o,l,n.get(s).__webglTexture,0),i.bindFramebuffer(36160,null)}function B(t,i,n){if(e.bindRenderbuffer(36161,t),i.depthBuffer&&!i.stencilBuffer){let r=33189;if(n||G(i)){let s=i.depthTexture;s&&s.isDepthTexture&&(s.type===eE?r=36012:s.type===eA&&(r=33190));let o=k(i);G(i)?d.renderbufferStorageMultisampleEXT(36161,o,r,i.width,i.height):e.renderbufferStorageMultisample(36161,o,r,i.width,i.height)}else e.renderbufferStorage(36161,r,i.width,i.height);e.framebufferRenderbuffer(36160,36096,36161,t)}else if(i.depthBuffer&&i.stencilBuffer){let l=k(i);n&&!1===G(i)?e.renderbufferStorageMultisample(36161,l,35056,i.width,i.height):G(i)?d.renderbufferStorageMultisampleEXT(36161,l,35056,i.width,i.height):e.renderbufferStorage(36161,34041,i.width,i.height),e.framebufferRenderbuffer(36160,33306,36161,t)}else{let h=!0===i.isWebGLMultipleRenderTargets?i.texture:[i.texture];for(let u=0;u<h.length;u++){let c=h[u],p=a.convert(c.format,c.encoding),f=a.convert(c.type),m=w(c.internalFormat,p,f,c.encoding),g=k(i);n&&!1===G(i)?e.renderbufferStorageMultisample(36161,g,m,i.width,i.height):G(i)?d.renderbufferStorageMultisampleEXT(36161,g,m,i.width,i.height):e.renderbufferStorage(36161,m,i.width,i.height)}}e.bindRenderbuffer(36161,null)}function F(t){let r=n.get(t),a=!0===t.isWebGLCubeRenderTarget;if(t.depthTexture&&!r.__autoAllocateDepthBuffer){if(a)throw Error("target.depthTexture not supported in Cube render targets");!function(t,r){let a=r&&r.isWebGLCubeRenderTarget;if(a)throw Error("Depth Texture with cube render targets is not supported");if(i.bindFramebuffer(36160,t),!(r.depthTexture&&r.depthTexture.isDepthTexture))throw Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");n.get(r.depthTexture).__webglTexture&&r.depthTexture.image.width===r.width&&r.depthTexture.image.height===r.height||(r.depthTexture.image.width=r.width,r.depthTexture.image.height=r.height,r.depthTexture.needsUpdate=!0),P(r.depthTexture,0);let s=n.get(r.depthTexture).__webglTexture,o=k(r);if(r.depthTexture.format===eU)G(r)?d.framebufferTexture2DMultisampleEXT(36160,36096,3553,s,0,o):e.framebufferTexture2D(36160,36096,3553,s,0);else if(r.depthTexture.format===eB)G(r)?d.framebufferTexture2DMultisampleEXT(36160,33306,3553,s,0,o):e.framebufferTexture2D(36160,33306,3553,s,0);else throw Error("Unknown depthTexture format")}(r.__webglFramebuffer,t)}else if(a){r.__webglDepthbuffer=[];for(let s=0;s<6;s++)i.bindFramebuffer(36160,r.__webglFramebuffer[s]),r.__webglDepthbuffer[s]=e.createRenderbuffer(),B(r.__webglDepthbuffer[s],t,!1)}else i.bindFramebuffer(36160,r.__webglFramebuffer),r.__webglDepthbuffer=e.createRenderbuffer(),B(r.__webglDepthbuffer,t,!1);i.bindFramebuffer(36160,null)}function k(e){return Math.min(c,e.samples)}function G(e){let i=n.get(e);return o&&e.samples>0&&!0===t.has("WEBGL_multisampled_render_to_texture")&&!1!==i.__useRenderToTexture}function V(e,i){let n=e.encoding,r=e.format,a=e.type;return!0===e.isCompressedTexture||!0===e.isVideoTexture||e.format===t3||n!==ty&&(n===tM?!1===o?!0===t.has("EXT_sRGB")&&r===eN?(e.format=t3,e.minFilter=eg,e.generateMipmaps=!1):i=iR.sRGBToLinear(i):(r!==eN||a!==eM)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",n)),i}this.allocateTextureUnit=function(){let e=R;return e>=l&&console.warn("THREE.WebGLTextures: Trying to use "+e+" texture units while this GPU supports only "+l),R+=1,e},this.resetTextureUnits=function(){R=0},this.setTexture2D=P,this.setTexture2DArray=function(e,t){let r=n.get(e);if(e.version>0&&r.__version!==e.version){z(r,e,t);return}i.activeTexture(33984+t),i.bindTexture(35866,r.__webglTexture)},this.setTexture3D=function(e,t){let r=n.get(e);if(e.version>0&&r.__version!==e.version){z(r,e,t);return}i.activeTexture(33984+t),i.bindTexture(32879,r.__webglTexture)},this.setTextureCube=function(t,r){let s=n.get(t);if(t.version>0&&s.__version!==t.version){(function(t,n,r){if(6!==n.image.length)return;let s=O(t,n),l=n.source;if(i.activeTexture(33984+r),i.bindTexture(34067,t.__webglTexture),l.version!==l.__currentVersion||!0===s){e.pixelStorei(37440,n.flipY),e.pixelStorei(37441,n.premultiplyAlpha),e.pixelStorei(3317,n.unpackAlignment),e.pixelStorei(37443,0);let u=n.isCompressedTexture||n.image[0].isCompressedTexture,c=n.image[0]&&n.image[0].isDataTexture,d=[];for(let p=0;p<6;p++)u||c?d[p]=c?n.image[p].image:n.image[p]:d[p]=y(n.image[p],!1,!0,h),d[p]=V(n,d[p]);let f=d[0],m=M(f)||o,g=a.convert(n.format,n.encoding),v=a.convert(n.type),x=w(n.internalFormat,g,v,n.encoding),_=o&&!0!==n.isVideoTexture,A=void 0===l.__currentVersion||!0===s,E=T(n,f,m);N(34067,n,m);let C;if(u){_&&A&&i.texStorage2D(34067,E,x,f.width,f.height);for(let L=0;L<6;L++){C=d[L].mipmaps;for(let R=0;R<C.length;R++){let P=C[R];n.format!==eN?null!==g?_?i.compressedTexSubImage2D(34069+L,R,0,0,P.width,P.height,g,P.data):i.compressedTexImage2D(34069+L,R,x,P.width,P.height,0,P.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):_?i.texSubImage2D(34069+L,R,0,0,P.width,P.height,g,v,P.data):i.texImage2D(34069+L,R,x,P.width,P.height,0,g,v,P.data)}}}else{C=n.mipmaps,_&&A&&(C.length>0&&E++,i.texStorage2D(34067,E,x,d[0].width,d[0].height));for(let I=0;I<6;I++)if(c){_?i.texSubImage2D(34069+I,0,0,0,d[I].width,d[I].height,g,v,d[I].data):i.texImage2D(34069+I,0,x,d[I].width,d[I].height,0,g,v,d[I].data);for(let D=0;D<C.length;D++){let z=C[D],U=z.image[I].image;_?i.texSubImage2D(34069+I,D+1,0,0,U.width,U.height,g,v,U.data):i.texImage2D(34069+I,D+1,x,U.width,U.height,0,g,v,U.data)}}else{_?i.texSubImage2D(34069+I,0,0,0,g,v,d[I]):i.texImage2D(34069+I,0,x,g,v,d[I]);for(let B=0;B<C.length;B++){let F=C[B];_?i.texSubImage2D(34069+I,B+1,0,0,g,v,F.image[I]):i.texImage2D(34069+I,B+1,x,g,v,F.image[I])}}}b(n,m)&&S(34067),l.__currentVersion=l.version,n.onUpdate&&n.onUpdate(n)}t.__version=n.version})(s,t,r);return}i.activeTexture(33984+r),i.bindTexture(34067,s.__webglTexture)},this.rebindTextures=function(e,t,i){let r=n.get(e);void 0!==t&&U(r.__webglFramebuffer,e,e.texture,36064,3553),void 0!==i&&F(e)},this.setupRenderTarget=function(t){let l=t.texture,h=n.get(t),u=n.get(l);t.addEventListener("dispose",C),!0!==t.isWebGLMultipleRenderTargets&&(void 0===u.__webglTexture&&(u.__webglTexture=e.createTexture()),u.__version=l.version,s.memory.textures++);let c=!0===t.isWebGLCubeRenderTarget,d=!0===t.isWebGLMultipleRenderTargets,p=M(t)||o;if(c){h.__webglFramebuffer=[];for(let f=0;f<6;f++)h.__webglFramebuffer[f]=e.createFramebuffer()}else{if(h.__webglFramebuffer=e.createFramebuffer(),d){if(r.drawBuffers){let m=t.texture;for(let g=0,v=m.length;g<v;g++){let x=n.get(m[g]);void 0===x.__webglTexture&&(x.__webglTexture=e.createTexture(),s.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.")}if(o&&t.samples>0&&!1===G(t)){let _=d?l:[l];h.__webglMultisampledFramebuffer=e.createFramebuffer(),h.__webglColorRenderbuffer=[],i.bindFramebuffer(36160,h.__webglMultisampledFramebuffer);for(let y=0;y<_.length;y++){let T=_[y];h.__webglColorRenderbuffer[y]=e.createRenderbuffer(),e.bindRenderbuffer(36161,h.__webglColorRenderbuffer[y]);let A=a.convert(T.format,T.encoding),E=a.convert(T.type),L=w(T.internalFormat,A,E,T.encoding),R=k(t);e.renderbufferStorageMultisample(36161,R,L,t.width,t.height),e.framebufferRenderbuffer(36160,36064+y,36161,h.__webglColorRenderbuffer[y])}e.bindRenderbuffer(36161,null),t.depthBuffer&&(h.__webglDepthRenderbuffer=e.createRenderbuffer(),B(h.__webglDepthRenderbuffer,t,!0)),i.bindFramebuffer(36160,null)}}if(c){i.bindTexture(34067,u.__webglTexture),N(34067,l,p);for(let P=0;P<6;P++)U(h.__webglFramebuffer[P],t,l,36064,34069+P);b(l,p)&&S(34067),i.unbindTexture()}else if(d){let I=t.texture;for(let D=0,O=I.length;D<O;D++){let z=I[D],V=n.get(z);i.bindTexture(3553,V.__webglTexture),N(3553,z,p),U(h.__webglFramebuffer,t,z,36064+D,3553),b(z,p)&&S(3553)}i.unbindTexture()}else{let H=3553;(t.isWebGL3DRenderTarget||t.isWebGLArrayRenderTarget)&&(o?H=t.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),i.bindTexture(H,u.__webglTexture),N(H,l,p),U(h.__webglFramebuffer,t,l,36064,H),b(l,p)&&S(H),i.unbindTexture()}t.depthBuffer&&F(t)},this.updateRenderTargetMipmap=function(e){let t=M(e)||o,r=!0===e.isWebGLMultipleRenderTargets?e.texture:[e.texture];for(let a=0,s=r.length;a<s;a++){let l=r[a];if(b(l,t)){let h=e.isWebGLCubeRenderTarget?34067:3553,u=n.get(l).__webglTexture;i.bindTexture(h,u),S(h),i.unbindTexture()}}},this.updateMultisampleRenderTarget=function(t){if(o&&t.samples>0&&!1===G(t)){let r=t.isWebGLMultipleRenderTargets?t.texture:[t.texture],a=t.width,s=t.height,l=16384,h=[],u=t.stencilBuffer?33306:36096,c=n.get(t),d=!0===t.isWebGLMultipleRenderTargets;if(d)for(let f=0;f<r.length;f++)i.bindFramebuffer(36160,c.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(36160,36064+f,36161,null),i.bindFramebuffer(36160,c.__webglFramebuffer),e.framebufferTexture2D(36009,36064+f,3553,null,0);i.bindFramebuffer(36008,c.__webglMultisampledFramebuffer),i.bindFramebuffer(36009,c.__webglFramebuffer);for(let m=0;m<r.length;m++){h.push(36064+m),t.depthBuffer&&h.push(u);let g=void 0!==c.__ignoreDepthValues&&c.__ignoreDepthValues;if(!1===g&&(t.depthBuffer&&(l|=256),t.stencilBuffer&&(l|=1024)),d&&e.framebufferRenderbuffer(36008,36064,36161,c.__webglColorRenderbuffer[m]),!0===g&&(e.invalidateFramebuffer(36008,[u]),e.invalidateFramebuffer(36009,[u])),d){let v=n.get(r[m]).__webglTexture;e.framebufferTexture2D(36009,36064,3553,v,0)}e.blitFramebuffer(0,0,a,s,0,0,a,s,l,9728),p&&e.invalidateFramebuffer(36008,h)}if(i.bindFramebuffer(36008,null),i.bindFramebuffer(36009,null),d)for(let x=0;x<r.length;x++){i.bindFramebuffer(36160,c.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(36160,36064+x,36161,c.__webglColorRenderbuffer[x]);let _=n.get(r[x]).__webglTexture;i.bindFramebuffer(36160,c.__webglFramebuffer),e.framebufferTexture2D(36009,36064+x,3553,_,0)}i.bindFramebuffer(36009,c.__webglMultisampledFramebuffer)}},this.setupDepthRenderbuffer=F,this.setupFrameBufferTexture=U,this.useMultisampledRTT=G}function sV(e,t,i){let n=i.isWebGL2;return{convert:function(i,r=null){let a;if(i===eM)return 5121;if(i===eL)return 32819;if(i===eR)return 32820;if(i===eb)return 5120;if(i===eS)return 5122;if(i===ew)return 5123;if(i===eT)return 5124;if(i===eA)return 5125;if(i===eE)return 5126;if(i===eC)return n?5131:null!==(a=t.get("OES_texture_half_float"))?a.HALF_FLOAT_OES:null;if(i===eI)return 6406;if(i===eN)return 6408;if(i===eO)return 6409;if(i===ez)return 6410;if(i===eU)return 6402;if(i===eB)return 34041;if(i===eF)return 6403;if(i===eD)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(i===t3)return null!==(a=t.get("EXT_sRGB"))?a.SRGB_ALPHA_EXT:null;if(i===ek)return 36244;if(i===eG)return 33319;if(i===eV)return 33320;if(i===eH)return 36249;if(i===eW||i===ej||i===eq||i===eX){if(r===tM){if(null===(a=t.get("WEBGL_compressed_texture_s3tc_srgb")))return null;if(i===eW)return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(i===ej)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(i===eq)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(i===eX)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(null===(a=t.get("WEBGL_compressed_texture_s3tc")))return null;if(i===eW)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(i===ej)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(i===eq)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(i===eX)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}}if(i===eY||i===eZ||i===eJ||i===eK){if(null===(a=t.get("WEBGL_compressed_texture_pvrtc")))return null;if(i===eY)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(i===eZ)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(i===eJ)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(i===eK)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(i===e$)return null!==(a=t.get("WEBGL_compressed_texture_etc1"))?a.COMPRESSED_RGB_ETC1_WEBGL:null;if(i===eQ||i===e0){if(null===(a=t.get("WEBGL_compressed_texture_etc")))return null;if(i===eQ)return r===tM?a.COMPRESSED_SRGB8_ETC2:a.COMPRESSED_RGB8_ETC2;if(i===e0)return r===tM?a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:a.COMPRESSED_RGBA8_ETC2_EAC}if(i===e1||i===e3||i===e2||i===e4||i===e5||i===e6||i===e7||i===e8||i===e9||i===te||i===tt||i===ti||i===tn||i===tr){if(null===(a=t.get("WEBGL_compressed_texture_astc")))return null;if(i===e1)return r===tM?a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:a.COMPRESSED_RGBA_ASTC_4x4_KHR;if(i===e3)return r===tM?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:a.COMPRESSED_RGBA_ASTC_5x4_KHR;if(i===e2)return r===tM?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:a.COMPRESSED_RGBA_ASTC_5x5_KHR;if(i===e4)return r===tM?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:a.COMPRESSED_RGBA_ASTC_6x5_KHR;if(i===e5)return r===tM?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:a.COMPRESSED_RGBA_ASTC_6x6_KHR;if(i===e6)return r===tM?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:a.COMPRESSED_RGBA_ASTC_8x5_KHR;if(i===e7)return r===tM?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:a.COMPRESSED_RGBA_ASTC_8x6_KHR;if(i===e8)return r===tM?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:a.COMPRESSED_RGBA_ASTC_8x8_KHR;if(i===e9)return r===tM?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:a.COMPRESSED_RGBA_ASTC_10x5_KHR;if(i===te)return r===tM?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:a.COMPRESSED_RGBA_ASTC_10x6_KHR;if(i===tt)return r===tM?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:a.COMPRESSED_RGBA_ASTC_10x8_KHR;if(i===ti)return r===tM?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:a.COMPRESSED_RGBA_ASTC_10x10_KHR;if(i===tn)return r===tM?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:a.COMPRESSED_RGBA_ASTC_12x10_KHR;if(i===tr)return r===tM?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:a.COMPRESSED_RGBA_ASTC_12x12_KHR}if(i===ta){if(null===(a=t.get("EXT_texture_compression_bptc")))return null;if(i===ta)return r===tM?a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:a.COMPRESSED_RGBA_BPTC_UNORM_EXT}return i===eP?n?34042:null!==(a=t.get("WEBGL_depth_texture"))?a.UNSIGNED_INT_24_8_WEBGL:null:void 0!==e[i]?e[i]:null}}}class sH extends rI{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class sW extends nO{constructor(){super(),this.isGroup=!0,this.type="Group"}}let sj={type:"move"};class sq{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new sW,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new sW,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new iH,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new iH),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new sW,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new iH,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new iH),this._grip}dispatchEvent(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),null!==this._hand&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(e,t,i){let n=null,r=null,a=null,s=this._targetRay,o=this._grip,l=this._hand;if(e&&"visible-blurred"!==t.session.visibilityState){if(l&&e.hand){for(let h of(a=!0,e.hand.values())){let u=t.getJointPose(h,i);if(void 0===l.joints[h.jointName]){let c=new sW;c.matrixAutoUpdate=!1,c.visible=!1,l.joints[h.jointName]=c,l.add(c)}let d=l.joints[h.jointName];null!==u&&(d.matrix.fromArray(u.transform.matrix),d.matrix.decompose(d.position,d.rotation,d.scale),d.jointRadius=u.radius),d.visible=null!==u}let p=l.joints["index-finger-tip"],f=l.joints["thumb-tip"],m=p.position.distanceTo(f.position);l.inputState.pinching&&m>.025?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!l.inputState.pinching&&m<=.015&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else null!==o&&e.gripSpace&&null!==(r=t.getPose(e.gripSpace,i))&&(o.matrix.fromArray(r.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),r.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(r.linearVelocity)):o.hasLinearVelocity=!1,r.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(r.angularVelocity)):o.hasAngularVelocity=!1);null!==s&&(null===(n=t.getPose(e.targetRaySpace,i))&&null!==r&&(n=r),null!==n&&(s.matrix.fromArray(n.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale),n.linearVelocity?(s.hasLinearVelocity=!0,s.linearVelocity.copy(n.linearVelocity)):s.hasLinearVelocity=!1,n.angularVelocity?(s.hasAngularVelocity=!0,s.angularVelocity.copy(n.angularVelocity)):s.hasAngularVelocity=!1,this.dispatchEvent(sj)))}return null!==s&&(s.visible=null!==n),null!==o&&(o.visible=null!==r),null!==l&&(l.visible=null!==a),this}}class sX extends iN{constructor(e,t,i,n,r,a,s,o,l,h){if((h=void 0!==h?h:eU)!==eU&&h!==eB)throw Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===i&&h===eU&&(i=eA),void 0===i&&h===eB&&(i=eP),super(null,n,r,a,s,o,h,i,l),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=void 0!==s?s:ec,this.minFilter=void 0!==o?o:ec,this.flipY=!1,this.generateMipmaps=!1}}class sY extends t2{constructor(e,t){super();let i=this,n=null,r=1,a=null,s="local-floor",o=null,l=null,h=null,u=null,c=null,d=null,p=t.getContextAttributes(),f=null,m=null,g=[],v=[],x=new rI;x.layers.enable(1),x.viewport=new iO;let _=new rI;_.layers.enable(2),_.viewport=new iO;let y=[x,_],M=new sH;M.layers.enable(1),M.layers.enable(2);let b=null,S=null;function w(e){let t=v.indexOf(e.inputSource);if(-1===t)return;let i=g[t];void 0!==i&&i.dispatchEvent({type:e.type,data:e.inputSource})}function T(){n.removeEventListener("select",w),n.removeEventListener("selectstart",w),n.removeEventListener("selectend",w),n.removeEventListener("squeeze",w),n.removeEventListener("squeezestart",w),n.removeEventListener("squeezeend",w),n.removeEventListener("end",T),n.removeEventListener("inputsourceschange",A);for(let t=0;t<g.length;t++){let r=v[t];null!==r&&(v[t]=null,g[t].disconnect(r))}b=null,S=null,e.setRenderTarget(f),c=null,u=null,h=null,n=null,m=null,P.stop(),i.isPresenting=!1,i.dispatchEvent({type:"sessionend"})}function A(e){for(let t=0;t<e.removed.length;t++){let i=e.removed[t],n=v.indexOf(i);n>=0&&(v[n]=null,g[n].dispatchEvent({type:"disconnected",data:i}))}for(let r=0;r<e.added.length;r++){let a=e.added[r],s=v.indexOf(a);if(-1===s){for(let o=0;o<g.length;o++){if(o>=v.length){v.push(a),s=o;break}if(null===v[o]){v[o]=a,s=o;break}}if(-1===s)break}let l=g[s];l&&l.dispatchEvent({type:"connected",data:a})}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(e){let t=g[e];return void 0===t&&(t=new sq,g[e]=t),t.getTargetRaySpace()},this.getControllerGrip=function(e){let t=g[e];return void 0===t&&(t=new sq,g[e]=t),t.getGripSpace()},this.getHand=function(e){let t=g[e];return void 0===t&&(t=new sq,g[e]=t),t.getHandSpace()},this.setFramebufferScaleFactor=function(e){r=e,!0===i.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(e){s=e,!0===i.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return o||a},this.setReferenceSpace=function(e){o=e},this.getBaseLayer=function(){return null!==u?u:c},this.getBinding=function(){return h},this.getFrame=function(){return d},this.getSession=function(){return n},this.setSession=async function(l){if(null!==(n=l)){if(f=e.getRenderTarget(),n.addEventListener("select",w),n.addEventListener("selectstart",w),n.addEventListener("selectend",w),n.addEventListener("squeeze",w),n.addEventListener("squeezestart",w),n.addEventListener("squeezeend",w),n.addEventListener("end",T),n.addEventListener("inputsourceschange",A),!0!==p.xrCompatible&&await t.makeXRCompatible(),void 0===n.renderState.layers||!1===e.capabilities.isWebGL2){let d={antialias:void 0!==n.renderState.layers||p.antialias,alpha:p.alpha,depth:p.depth,stencil:p.stencil,framebufferScaleFactor:r};c=new XRWebGLLayer(n,t,d),n.updateRenderState({baseLayer:c}),m=new iz(c.framebufferWidth,c.framebufferHeight,{format:eN,type:eM,encoding:e.outputEncoding,stencilBuffer:p.stencil})}else{let g=null,v=null,x=null;p.depth&&(x=p.stencil?35056:33190,g=p.stencil?eB:eU,v=p.stencil?eP:eA);let _={colorFormat:32856,depthFormat:x,scaleFactor:r};u=(h=new XRWebGLBinding(n,t)).createProjectionLayer(_),n.updateRenderState({layers:[u]}),m=new iz(u.textureWidth,u.textureHeight,{format:eN,type:eM,depthTexture:new sX(u.textureWidth,u.textureHeight,v,void 0,void 0,void 0,void 0,void 0,void 0,g),stencilBuffer:p.stencil,encoding:e.outputEncoding,samples:p.antialias?4:0});let y=e.properties.get(m);y.__ignoreDepthValues=u.ignoreDepthValues}m.isXRRenderTarget=!0,this.setFoveation(1),o=null,a=await n.requestReferenceSpace(s),P.setContext(n),P.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}};let E=new iH,C=new iH;function L(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.copy(e.matrixWorld).invert()}this.updateCamera=function(e){if(null===n)return;M.near=_.near=x.near=e.near,M.far=_.far=x.far=e.far,(b!==M.near||S!==M.far)&&(n.updateRenderState({depthNear:M.near,depthFar:M.far}),b=M.near,S=M.far);let t=e.parent,i=M.cameras;L(M,t);for(let r=0;r<i.length;r++)L(i[r],t);M.matrixWorld.decompose(M.position,M.quaternion,M.scale),e.matrix.copy(M.matrix),e.matrix.decompose(e.position,e.quaternion,e.scale);let a=e.children;for(let s=0,o=a.length;s<o;s++)a[s].updateMatrixWorld(!0);2===i.length?function(e,t,i){E.setFromMatrixPosition(t.matrixWorld),C.setFromMatrixPosition(i.matrixWorld);let n=E.distanceTo(C),r=t.projectionMatrix.elements,a=i.projectionMatrix.elements,s=r[14]/(r[10]-1),o=r[14]/(r[10]+1),l=(r[9]+1)/r[5],h=(r[9]-1)/r[5],u=(r[8]-1)/r[0],c=(a[8]+1)/a[0],d=n/(-u+c),p=-(d*u);t.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(p),e.translateZ(d),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.copy(e.matrixWorld).invert();let f=s+d,m=o+d;e.projectionMatrix.makePerspective(s*u-p,s*c+(n-p),l*o/m*f,h*o/m*f,f,m)}(M,x,_):M.projectionMatrix.copy(x.projectionMatrix)},this.getCamera=function(){return M},this.getFoveation=function(){return null!==u?u.fixedFoveation:null!==c?c.fixedFoveation:void 0},this.setFoveation=function(e){null!==u&&(u.fixedFoveation=e),null!==c&&void 0!==c.fixedFoveation&&(c.fixedFoveation=e)};let R=null,P=new rH;P.setAnimationLoop(function(t,i){if(l=i.getViewerPose(o||a),d=i,null!==l){let n=l.views;null!==c&&(e.setRenderTargetFramebuffer(m,c.framebuffer),e.setRenderTarget(m));let r=!1;n.length!==M.cameras.length&&(M.cameras.length=0,r=!0);for(let s=0;s<n.length;s++){let p=n[s],f=null;if(null!==c)f=c.getViewport(p);else{let x=h.getViewSubImage(u,p);f=x.viewport,0===s&&(e.setRenderTargetTextures(m,x.colorTexture,u.ignoreDepthValues?void 0:x.depthStencilTexture),e.setRenderTarget(m))}let _=y[s];void 0===_&&((_=new rI).layers.enable(s),_.viewport=new iO,y[s]=_),_.matrix.fromArray(p.transform.matrix),_.projectionMatrix.fromArray(p.projectionMatrix),_.viewport.set(f.x,f.y,f.width,f.height),0===s&&M.matrix.copy(_.matrix),!0===r&&M.cameras.push(_)}}for(let b=0;b<g.length;b++){let S=v[b],w=g[b];null!==S&&void 0!==w&&w.update(S,i,o||a)}R&&R(t,i),d=null}),this.setAnimationLoop=function(e){R=e},this.dispose=function(){}}}function sZ(e,t){function i(i,n){i.opacity.value=n.opacity,n.color&&i.diffuse.value.copy(n.color),n.emissive&&i.emissive.value.copy(n.emissive).multiplyScalar(n.emissiveIntensity),n.map&&(i.map.value=n.map),n.alphaMap&&(i.alphaMap.value=n.alphaMap),n.bumpMap&&(i.bumpMap.value=n.bumpMap,i.bumpScale.value=n.bumpScale,n.side===m&&(i.bumpScale.value*=-1)),n.displacementMap&&(i.displacementMap.value=n.displacementMap,i.displacementScale.value=n.displacementScale,i.displacementBias.value=n.displacementBias),n.emissiveMap&&(i.emissiveMap.value=n.emissiveMap),n.normalMap&&(i.normalMap.value=n.normalMap,i.normalScale.value.copy(n.normalScale),n.side===m&&i.normalScale.value.negate()),n.specularMap&&(i.specularMap.value=n.specularMap),n.alphaTest>0&&(i.alphaTest.value=n.alphaTest);let r=t.get(n).envMap;if(r&&(i.envMap.value=r,i.flipEnvMap.value=r.isCubeTexture&&!1===r.isRenderTargetTexture?-1:1,i.reflectivity.value=n.reflectivity,i.ior.value=n.ior,i.refractionRatio.value=n.refractionRatio),n.lightMap){i.lightMap.value=n.lightMap;let a=!0!==e.physicallyCorrectLights?Math.PI:1;i.lightMapIntensity.value=n.lightMapIntensity*a}n.aoMap&&(i.aoMap.value=n.aoMap,i.aoMapIntensity.value=n.aoMapIntensity);let s;n.map?s=n.map:n.specularMap?s=n.specularMap:n.displacementMap?s=n.displacementMap:n.normalMap?s=n.normalMap:n.bumpMap?s=n.bumpMap:n.roughnessMap?s=n.roughnessMap:n.metalnessMap?s=n.metalnessMap:n.alphaMap?s=n.alphaMap:n.emissiveMap?s=n.emissiveMap:n.clearcoatMap?s=n.clearcoatMap:n.clearcoatNormalMap?s=n.clearcoatNormalMap:n.clearcoatRoughnessMap?s=n.clearcoatRoughnessMap:n.iridescenceMap?s=n.iridescenceMap:n.iridescenceThicknessMap?s=n.iridescenceThicknessMap:n.specularIntensityMap?s=n.specularIntensityMap:n.specularColorMap?s=n.specularColorMap:n.transmissionMap?s=n.transmissionMap:n.thicknessMap?s=n.thicknessMap:n.sheenColorMap?s=n.sheenColorMap:n.sheenRoughnessMap&&(s=n.sheenRoughnessMap),void 0!==s&&(s.isWebGLRenderTarget&&(s=s.texture),!0===s.matrixAutoUpdate&&s.updateMatrix(),i.uvTransform.value.copy(s.matrix));let o;n.aoMap?o=n.aoMap:n.lightMap&&(o=n.lightMap),void 0!==o&&(o.isWebGLRenderTarget&&(o=o.texture),!0===o.matrixAutoUpdate&&o.updateMatrix(),i.uv2Transform.value.copy(o.matrix))}return{refreshFogUniforms:function(e,t){e.fogColor.value.copy(t.color),t.isFog?(e.fogNear.value=t.near,e.fogFar.value=t.far):t.isFogExp2&&(e.fogDensity.value=t.density)},refreshMaterialUniforms:function(e,n,r,a,s){var o,l,h,u,c,d,p,f,g,v,x,_,y,M,b,S,w,T,A,E,C;let L,R;n.isMeshBasicMaterial?i(e,n):n.isMeshLambertMaterial?i(e,n):n.isMeshToonMaterial?(i(e,n),o=e,(l=n).gradientMap&&(o.gradientMap.value=l.gradientMap)):n.isMeshPhongMaterial?(i(e,n),h=e,u=n,h.specular.value.copy(u.specular),h.shininess.value=Math.max(u.shininess,1e-4)):n.isMeshStandardMaterial?(i(e,n),function(e,i){e.roughness.value=i.roughness,e.metalness.value=i.metalness,i.roughnessMap&&(e.roughnessMap.value=i.roughnessMap),i.metalnessMap&&(e.metalnessMap.value=i.metalnessMap);let n=t.get(i).envMap;n&&(e.envMapIntensity.value=i.envMapIntensity)}(e,n),n.isMeshPhysicalMaterial&&(c=e,d=n,p=s,c.ior.value=d.ior,d.sheen>0&&(c.sheenColor.value.copy(d.sheenColor).multiplyScalar(d.sheen),c.sheenRoughness.value=d.sheenRoughness,d.sheenColorMap&&(c.sheenColorMap.value=d.sheenColorMap),d.sheenRoughnessMap&&(c.sheenRoughnessMap.value=d.sheenRoughnessMap)),d.clearcoat>0&&(c.clearcoat.value=d.clearcoat,c.clearcoatRoughness.value=d.clearcoatRoughness,d.clearcoatMap&&(c.clearcoatMap.value=d.clearcoatMap),d.clearcoatRoughnessMap&&(c.clearcoatRoughnessMap.value=d.clearcoatRoughnessMap),d.clearcoatNormalMap&&(c.clearcoatNormalScale.value.copy(d.clearcoatNormalScale),c.clearcoatNormalMap.value=d.clearcoatNormalMap,d.side===m&&c.clearcoatNormalScale.value.negate())),d.iridescence>0&&(c.iridescence.value=d.iridescence,c.iridescenceIOR.value=d.iridescenceIOR,c.iridescenceThicknessMinimum.value=d.iridescenceThicknessRange[0],c.iridescenceThicknessMaximum.value=d.iridescenceThicknessRange[1],d.iridescenceMap&&(c.iridescenceMap.value=d.iridescenceMap),d.iridescenceThicknessMap&&(c.iridescenceThicknessMap.value=d.iridescenceThicknessMap)),d.transmission>0&&(c.transmission.value=d.transmission,c.transmissionSamplerMap.value=p.texture,c.transmissionSamplerSize.value.set(p.width,p.height),d.transmissionMap&&(c.transmissionMap.value=d.transmissionMap),c.thickness.value=d.thickness,d.thicknessMap&&(c.thicknessMap.value=d.thicknessMap),c.attenuationDistance.value=d.attenuationDistance,c.attenuationColor.value.copy(d.attenuationColor)),c.specularIntensity.value=d.specularIntensity,c.specularColor.value.copy(d.specularColor),d.specularIntensityMap&&(c.specularIntensityMap.value=d.specularIntensityMap),d.specularColorMap&&(c.specularColorMap.value=d.specularColorMap))):n.isMeshMatcapMaterial?(i(e,n),f=e,(g=n).matcap&&(f.matcap.value=g.matcap)):n.isMeshDepthMaterial?i(e,n):n.isMeshDistanceMaterial?(i(e,n),v=e,x=n,v.referencePosition.value.copy(x.referencePosition),v.nearDistance.value=x.nearDistance,v.farDistance.value=x.farDistance):n.isMeshNormalMaterial?i(e,n):n.isLineBasicMaterial?(_=e,y=n,_.diffuse.value.copy(y.color),_.opacity.value=y.opacity,n.isLineDashedMaterial&&(M=e,b=n,M.dashSize.value=b.dashSize,M.totalSize.value=b.dashSize+b.gapSize,M.scale.value=b.scale)):n.isPointsMaterial?(S=e,w=n,T=r,A=a,S.diffuse.value.copy(w.color),S.opacity.value=w.opacity,S.size.value=w.size*T,S.scale.value=.5*A,w.map&&(S.map.value=w.map),w.alphaMap&&(S.alphaMap.value=w.alphaMap),w.alphaTest>0&&(S.alphaTest.value=w.alphaTest),w.map?L=w.map:w.alphaMap&&(L=w.alphaMap),void 0!==L&&(!0===L.matrixAutoUpdate&&L.updateMatrix(),S.uvTransform.value.copy(L.matrix))):n.isSpriteMaterial?(E=e,C=n,E.diffuse.value.copy(C.color),E.opacity.value=C.opacity,E.rotation.value=C.rotation,C.map&&(E.map.value=C.map),C.alphaMap&&(E.alphaMap.value=C.alphaMap),C.alphaTest>0&&(E.alphaTest.value=C.alphaTest),C.map?R=C.map:C.alphaMap&&(R=C.alphaMap),void 0!==R&&(!0===R.matrixAutoUpdate&&R.updateMatrix(),E.uvTransform.value.copy(R.matrix))):n.isShadowMaterial?(e.color.value.copy(n.color),e.opacity.value=n.opacity):n.isShaderMaterial&&(n.uniformsNeedUpdate=!1)}}}function sJ(e,t,i,n){let r={},a={},s=[],o=i.isWebGL2?e.getParameter(35375):0;function l(e,t,i){let n=e.value;if(void 0===i[t])return"number"==typeof n?i[t]=n:i[t]=n.clone(),!0;if("number"==typeof n){if(i[t]!==n)return i[t]=n,!0}else{let r=i[t];if(!1===r.equals(n))return r.copy(n),!0}return!1}function h(e){let t=e.value,i={boundary:0,storage:0};return"number"==typeof t?(i.boundary=4,i.storage=4):t.isVector2?(i.boundary=8,i.storage=8):t.isVector3||t.isColor?(i.boundary=16,i.storage=12):t.isVector4?(i.boundary=16,i.storage=16):t.isMatrix3?(i.boundary=48,i.storage=48):t.isMatrix4?(i.boundary=64,i.storage=64):t.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",t),i}function u(t){let i=t.target;i.removeEventListener("dispose",u);let n=s.indexOf(i.__bindingPointIndex);s.splice(n,1),e.deleteBuffer(r[i.id]),delete r[i.id],delete a[i.id]}return{bind:function(e,t){let i=t.program;n.uniformBlockBinding(e,i)},update:function(i,c){let d=r[i.id];void 0===d&&(function(e){let t=e.uniforms,i=0,n=0;for(let r=0,a=t.length;r<a;r++){let s=t[r],o=h(s);if(s.__data=new Float32Array(o.storage/Float32Array.BYTES_PER_ELEMENT),s.__offset=i,r>0){n=i%16;let l=16-n;0!==n&&l-o.boundary<0&&(i+=16-n,s.__offset=i)}i+=o.storage}(n=i%16)>0&&(i+=16-n),e.__size=i,e.__cache={},this}(i),d=function(t){let i=function(){for(let e=0;e<o;e++)if(-1===s.indexOf(e))return s.push(e),e;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}();t.__bindingPointIndex=i;let n=e.createBuffer(),r=t.__size,a=t.usage;return e.bindBuffer(35345,n),e.bufferData(35345,r,a),e.bindBuffer(35345,null),e.bindBufferBase(35345,i,n),n}(i),r[i.id]=d,i.addEventListener("dispose",u));let p=c.program;n.updateUBOMapping(i,p);let f=t.render.frame;a[i.id]!==f&&(function(t){let i=r[t.id],n=t.uniforms,a=t.__cache;e.bindBuffer(35345,i);for(let s=0,o=n.length;s<o;s++){let h=n[s];if(!0===l(h,s,a)){let u=h.value,c=h.__offset;"number"==typeof u?(h.__data[0]=u,e.bufferSubData(35345,c,h.__data)):(h.value.isMatrix3?(h.__data[0]=h.value.elements[0],h.__data[1]=h.value.elements[1],h.__data[2]=h.value.elements[2],h.__data[3]=h.value.elements[0],h.__data[4]=h.value.elements[3],h.__data[5]=h.value.elements[4],h.__data[6]=h.value.elements[5],h.__data[7]=h.value.elements[0],h.__data[8]=h.value.elements[6],h.__data[9]=h.value.elements[7],h.__data[10]=h.value.elements[8],h.__data[11]=h.value.elements[0]):u.toArray(h.__data),e.bufferSubData(35345,c,h.__data))}}e.bindBuffer(35345,null)}(i),a[i.id]=f)},dispose:function(){for(let t in r)e.deleteBuffer(r[t]);s=[],r={},a={}}}}function sK(e={}){this.isWebGLRenderer=!0;let t=void 0!==e.canvas?e.canvas:function(){let e=iv("canvas");return e.style.display="block",e}(),i=void 0!==e.context?e.context:null,r=void 0===e.depth||e.depth,a=void 0===e.stencil||e.stencil,s=void 0!==e.antialias&&e.antialias,o=void 0===e.premultipliedAlpha||e.premultipliedAlpha,l=void 0!==e.preserveDrawingBuffer&&e.preserveDrawingBuffer,h=void 0!==e.powerPreference?e.powerPreference:"default",u=void 0!==e.failIfMajorPerformanceCaveat&&e.failIfMajorPerformanceCaveat,c;c=null!==i?i.getContextAttributes().alpha:void 0!==e.alpha&&e.alpha;let d=null,p=null,v=[],x=[];this.domElement=t,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=ty,this.physicallyCorrectLights=!1,this.toneMapping=J,this.toneMappingExposure=1,Object.defineProperties(this,{gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}});let _=this,y=!1,M=0,b=0,S=null,w=-1,T=null,A=new iO,E=new iO,C=null,L=t.width,R=t.height,P=1,I=null,D=null,N=new iO(0,0,L,R),O=new iO(0,0,L,R),z=!1,U=new rV,B=!1,F=!1,k=null,G=new nu,V=new ic,H=new iH,W={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function j(){return null===S?P:1}let q=i;function X(e,i){for(let n=0;n<e.length;n++){let r=e[n],a=t.getContext(r,i);if(null!==a)return a}return null}try{if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${n}`),t.addEventListener("webglcontextlost",eT,!1),t.addEventListener("webglcontextrestored",eA,!1),t.addEventListener("webglcontextcreationerror",eL,!1),null===q){let Y=["webgl2","webgl","experimental-webgl"];if(!0===_.isWebGL1Renderer&&Y.shift(),q=X(Y,{alpha:!0,depth:r,stencil:a,antialias:s,premultipliedAlpha:o,preserveDrawingBuffer:l,powerPreference:h,failIfMajorPerformanceCaveat:u}),null===q){if(X(Y))throw Error("Error creating WebGL context with your selected attributes.");throw Error("Error creating WebGL context.")}}void 0===q.getShaderPrecisionFormat&&(q.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(Z){throw console.error("THREE.WebGLRenderer: "+Z.message),Z}let K,$,Q,ee,et,ei,en,er,ea,es,eo,el,eh,eu,ec,ed,ep,ef,em,eg,ev,ex,ey,eb;function eS(){K=new as(q),$=new r$(q,K,e),K.init($),ex=new sV(q,K,$),Q=new sk(q,K,$),ee=new ah,et=new sA,ei=new sG(q,K,Q,et,$,ex,ee),en=new r0(_),er=new aa(_),ea=new rW(q,$),ey=new rJ(q,K,ea,$),es=new ao(q,ea,ee,ey),eo=new ap(q,es,ea,ee),em=new ad(q,$,ei),ed=new rQ(et),el=new sT(_,en,er,K,$,ey,ed),eh=new sZ(_,et),eu=new sR,ec=new sz(K,$),ef=new rZ(_,en,Q,eo,c,o),ep=new sF(_,eo,$),eb=new sJ(q,ee,$,Q),eg=new rK(q,K,ee,$),ev=new al(q,K,ee,$),ee.programs=el.programs,_.capabilities=$,_.extensions=K,_.properties=et,_.renderLists=eu,_.shadowMap=ep,_.state=Q,_.info=ee}eS();let ew=new sY(_,q);function eT(e){e.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),y=!0}function eA(){console.log("THREE.WebGLRenderer: Context Restored."),y=!1;let e=ee.autoReset,t=ep.enabled,i=ep.autoUpdate,n=ep.needsUpdate,r=ep.type;eS(),ee.autoReset=e,ep.enabled=t,ep.autoUpdate=i,ep.needsUpdate=n,ep.type=r}function eL(e){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",e.statusMessage)}function eR(e){var t;let i=e.target;i.removeEventListener("dispose",eR),function(e){let t=et.get(e).programs;void 0!==t&&(t.forEach(function(e){el.releaseProgram(e)}),e.isShaderMaterial&&el.releaseShaderCache(e))}(t=i),et.remove(t)}this.xr=ew,this.getContext=function(){return q},this.getContextAttributes=function(){return q.getContextAttributes()},this.forceContextLoss=function(){let e=K.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){let e=K.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return P},this.setPixelRatio=function(e){void 0!==e&&(P=e,this.setSize(L,R,!1))},this.getSize=function(e){return e.set(L,R)},this.setSize=function(e,i,n){if(ew.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}L=e,R=i,t.width=Math.floor(e*P),t.height=Math.floor(i*P),!1!==n&&(t.style.width=e+"px",t.style.height=i+"px"),this.setViewport(0,0,e,i)},this.getDrawingBufferSize=function(e){return e.set(L*P,R*P).floor()},this.setDrawingBufferSize=function(e,i,n){L=e,R=i,P=n,t.width=Math.floor(e*n),t.height=Math.floor(i*n),this.setViewport(0,0,e,i)},this.getCurrentViewport=function(e){return e.copy(A)},this.getViewport=function(e){return e.copy(N)},this.setViewport=function(e,t,i,n){e.isVector4?N.set(e.x,e.y,e.z,e.w):N.set(e,t,i,n),Q.viewport(A.copy(N).multiplyScalar(P).floor())},this.getScissor=function(e){return e.copy(O)},this.setScissor=function(e,t,i,n){e.isVector4?O.set(e.x,e.y,e.z,e.w):O.set(e,t,i,n),Q.scissor(E.copy(O).multiplyScalar(P).floor())},this.getScissorTest=function(){return z},this.setScissorTest=function(e){Q.setScissorTest(z=e)},this.setOpaqueSort=function(e){I=e},this.setTransparentSort=function(e){D=e},this.getClearColor=function(e){return e.copy(ef.getClearColor())},this.setClearColor=function(){ef.setClearColor.apply(ef,arguments)},this.getClearAlpha=function(){return ef.getClearAlpha()},this.setClearAlpha=function(){ef.setClearAlpha.apply(ef,arguments)},this.clear=function(e=!0,t=!0,i=!0){let n=0;e&&(n|=16384),t&&(n|=256),i&&(n|=1024),q.clear(n)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",eT,!1),t.removeEventListener("webglcontextrestored",eA,!1),t.removeEventListener("webglcontextcreationerror",eL,!1),eu.dispose(),ec.dispose(),et.dispose(),en.dispose(),er.dispose(),eo.dispose(),ey.dispose(),eb.dispose(),el.dispose(),ew.dispose(),ew.removeEventListener("sessionstart",eI),ew.removeEventListener("sessionend",eD),k&&(k.dispose(),k=null),eO.stop()},this.renderBufferDirect=function(e,t,i,n,r,a){null===t&&(t=W);let s=r.isMesh&&0>r.matrixWorld.determinant(),o=function(e,t,i,n,r){var a,s;!0!==t.isScene&&(t=W),ei.resetTextureUnits();let o=t.fog,l=n.isMeshStandardMaterial?t.environment:null,h=null===S?_.outputEncoding:!0===S.isXRRenderTarget?S.texture.encoding:ty,u=(n.isMeshStandardMaterial?er:en).get(n.envMap||l),c=!0===n.vertexColors&&!!i.attributes.color&&4===i.attributes.color.itemSize,d=!!n.normalMap&&!!i.attributes.tangent,f=!!i.morphAttributes.position,m=!!i.morphAttributes.normal,g=!!i.morphAttributes.color,v=n.toneMapped?_.toneMapping:J,x=i.morphAttributes.position||i.morphAttributes.normal||i.morphAttributes.color,y=void 0!==x?x.length:0,M=et.get(n),b=p.state.lights;if(!0===B&&(!0===F||e!==T)){let A=e===T&&n.id===w;ed.setState(n,e,A)}let E=!1;n.version===M.__version?M.needsLights&&M.lightsStateVersion!==b.state.version?E=!0:M.outputEncoding!==h?E=!0:r.isInstancedMesh&&!1===M.instancing?E=!0:r.isInstancedMesh||!0!==M.instancing?r.isSkinnedMesh&&!1===M.skinning?E=!0:r.isSkinnedMesh||!0!==M.skinning?M.envMap!==u?E=!0:!0===n.fog&&M.fog!==o?E=!0:void 0!==M.numClippingPlanes&&(M.numClippingPlanes!==ed.numPlanes||M.numIntersection!==ed.numIntersection)?E=!0:M.vertexAlphas!==c?E=!0:M.vertexTangents!==d?E=!0:M.morphTargets!==f?E=!0:M.morphNormals!==m?E=!0:M.morphColors!==g?E=!0:M.toneMapping!==v?E=!0:!0===$.isWebGL2&&M.morphTargetsCount!==y&&(E=!0):E=!0:E=!0:(E=!0,M.__version=n.version);let C=M.currentProgram;!0===E&&(C=eF(n,t,r));let L=!1,I=!1,D=!1,N=C.getUniforms(),O=M.uniforms;if(Q.useProgram(C.program)&&(L=!0,I=!0,D=!0),n.id!==w&&(w=n.id,I=!0),L||T!==e){if(N.setValue(q,"projectionMatrix",e.projectionMatrix),$.logarithmicDepthBuffer&&N.setValue(q,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2)),T!==e&&(T=e,I=!0,D=!0),n.isShaderMaterial||n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshStandardMaterial||n.envMap){let z=N.map.cameraPosition;void 0!==z&&z.setValue(q,H.setFromMatrixPosition(e.matrixWorld))}(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial)&&N.setValue(q,"isOrthographic",!0===e.isOrthographicCamera),(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial||n.isShadowMaterial||r.isSkinnedMesh)&&N.setValue(q,"viewMatrix",e.matrixWorldInverse)}if(r.isSkinnedMesh){N.setOptional(q,r,"bindMatrix"),N.setOptional(q,r,"bindMatrixInverse");let U=r.skeleton;U&&($.floatVertexTextures?(null===U.boneTexture&&U.computeBoneTexture(),N.setValue(q,"boneTexture",U.boneTexture,ei),N.setValue(q,"boneTextureSize",U.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}let G=i.morphAttributes;if((void 0!==G.position||void 0!==G.normal||void 0!==G.color&&!0===$.isWebGL2)&&em.update(r,i,n,C),(I||M.receiveShadow!==r.receiveShadow)&&(M.receiveShadow=r.receiveShadow,N.setValue(q,"receiveShadow",r.receiveShadow)),n.isMeshGouraudMaterial&&null!==n.envMap&&(O.envMap.value=u,O.flipEnvMap.value=u.isCubeTexture&&!1===u.isRenderTargetTexture?-1:1),I&&(N.setValue(q,"toneMappingExposure",_.toneMappingExposure),M.needsLights&&(a=O,s=D,a.ambientLightColor.needsUpdate=s,a.lightProbe.needsUpdate=s,a.directionalLights.needsUpdate=s,a.directionalLightShadows.needsUpdate=s,a.pointLights.needsUpdate=s,a.pointLightShadows.needsUpdate=s,a.spotLights.needsUpdate=s,a.spotLightShadows.needsUpdate=s,a.rectAreaLights.needsUpdate=s,a.hemisphereLights.needsUpdate=s),o&&!0===n.fog&&eh.refreshFogUniforms(O,o),eh.refreshMaterialUniforms(O,n,P,R,k),so.upload(q,M.uniformsList,O,ei)),n.isShaderMaterial&&!0===n.uniformsNeedUpdate&&(so.upload(q,M.uniformsList,O,ei),n.uniformsNeedUpdate=!1),n.isSpriteMaterial&&N.setValue(q,"center",r.center),N.setValue(q,"modelViewMatrix",r.modelViewMatrix),N.setValue(q,"normalMatrix",r.normalMatrix),N.setValue(q,"modelMatrix",r.matrixWorld),n.isShaderMaterial||n.isRawShaderMaterial){let V=n.uniformsGroups;for(let j=0,X=V.length;j<X;j++)if($.isWebGL2){let Y=V[j];eb.update(Y,C),eb.bind(Y,C)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return C}(e,t,i,n,r);Q.setMaterial(n,s);let l=i.index,h=i.attributes.position;if(null===l){if(void 0===h||0===h.count)return}else if(0===l.count)return;let u=1;!0===n.wireframe&&(l=es.getWireframeAttribute(i),u=2),ey.setup(r,n,o,i,l);let c,d=eg;null!==l&&(c=ea.get(l),(d=ev).setIndex(c));let f=null!==l?l.count:h.count,m=i.drawRange.start*u,g=i.drawRange.count*u,v=null!==a?a.start*u:0,x=null!==a?a.count*u:1/0,y=Math.max(m,v),M=Math.max(0,Math.min(f,m+g,v+x)-1-y+1);if(0!==M){if(r.isMesh)!0===n.wireframe?(Q.setLineWidth(n.wireframeLinewidth*j()),d.setMode(1)):d.setMode(4);else if(r.isLine){let b=n.linewidth;void 0===b&&(b=1),Q.setLineWidth(b*j()),r.isLineSegments?d.setMode(1):r.isLineLoop?d.setMode(2):d.setMode(3)}else r.isPoints?d.setMode(0):r.isSprite&&d.setMode(4);if(r.isInstancedMesh)d.renderInstances(y,M,r.count);else if(i.isInstancedBufferGeometry){let A=Math.min(i.instanceCount,i._maxInstanceCount);d.renderInstances(y,M,A)}else d.render(y,M)}},this.compile=function(e,t){function i(e,t,i){!0===e.transparent&&e.side===g?(e.side=m,e.needsUpdate=!0,eF(e,t,i),e.side=f,e.needsUpdate=!0,eF(e,t,i),e.side=g):eF(e,t,i)}(p=ec.get(e)).init(),x.push(p),e.traverseVisible(function(e){e.isLight&&e.layers.test(t.layers)&&(p.pushLight(e),e.castShadow&&p.pushShadow(e))}),p.setupLights(_.physicallyCorrectLights),e.traverse(function(t){let n=t.material;if(n){if(Array.isArray(n))for(let r=0;r<n.length;r++){let a=n[r];i(a,e,t)}else i(n,e,t)}}),x.pop(),p=null};let eP=null;function eI(){eO.stop()}function eD(){eO.start()}let eO=new rH;function ez(e,t,i,n){let r=e.opaque,a=e.transmissive,o=e.transparent;p.setupLightsView(i),a.length>0&&function(e,t,i){let n=$.isWebGL2;null===k&&(k=new iz(1,1,{generateMipmaps:!0,type:K.has("EXT_color_buffer_half_float")?eC:eM,minFilter:e_,samples:n&&!0===s?4:0})),_.getDrawingBufferSize(V),n?k.setSize(V.x,V.y):k.setSize(io(V.x),io(V.y));let r=_.getRenderTarget();_.setRenderTarget(k),_.clear();let a=_.toneMapping;_.toneMapping=J,eU(e,t,i),_.toneMapping=a,ei.updateMultisampleRenderTarget(k),ei.updateRenderTargetMipmap(k),_.setRenderTarget(r)}(r,t,i),n&&Q.viewport(A.copy(n)),r.length>0&&eU(r,t,i),a.length>0&&eU(a,t,i),o.length>0&&eU(o,t,i),Q.buffers.depth.setTest(!0),Q.buffers.depth.setMask(!0),Q.buffers.color.setMask(!0),Q.setPolygonOffset(!1)}function eU(e,t,i){let n=!0===t.isScene?t.overrideMaterial:null;for(let r=0,a=e.length;r<a;r++){let s=e[r],o=s.object,l=s.geometry,h=null===n?s.material:n,u=s.group;o.layers.test(i.layers)&&eB(o,t,i,l,h,u)}}function eB(e,t,i,n,r,a){e.onBeforeRender(_,t,i,n,r,a),e.modelViewMatrix.multiplyMatrices(i.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),r.onBeforeRender(_,t,i,n,e,a),!0===r.transparent&&r.side===g?(r.side=m,r.needsUpdate=!0,_.renderBufferDirect(i,t,n,r,e,a),r.side=f,r.needsUpdate=!0,_.renderBufferDirect(i,t,n,r,e,a),r.side=g):_.renderBufferDirect(i,t,n,r,e,a),e.onAfterRender(_,t,i,n,r,a)}function eF(e,t,i){var n;!0!==t.isScene&&(t=W);let r=et.get(e),a=p.state.lights,s=p.state.shadowsArray,o=a.state.version,l=el.getParameters(e,a.state,s,t,i),h=el.getProgramCacheKey(l),u=r.programs;r.environment=e.isMeshStandardMaterial?t.environment:null,r.fog=t.fog,r.envMap=(e.isMeshStandardMaterial?er:en).get(e.envMap||r.environment),void 0===u&&(e.addEventListener("dispose",eR),u=new Map,r.programs=u);let c=u.get(h);if(void 0!==c){if(r.currentProgram===c&&r.lightsStateVersion===o)return ek(e,l),c}else l.uniforms=el.getUniforms(e),e.onBuild(i,l,_),e.onBeforeCompile(l,_),c=el.acquireProgram(l,h),u.set(h,c),r.uniforms=l.uniforms;let d=r.uniforms;(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(d.clippingPlanes=ed.uniform),ek(e,l),r.needsLights=(n=e,n.isMeshLambertMaterial||n.isMeshToonMaterial||n.isMeshPhongMaterial||n.isMeshStandardMaterial||n.isShadowMaterial||n.isShaderMaterial&&!0===n.lights),r.lightsStateVersion=o,r.needsLights&&(d.ambientLightColor.value=a.state.ambient,d.lightProbe.value=a.state.probe,d.directionalLights.value=a.state.directional,d.directionalLightShadows.value=a.state.directionalShadow,d.spotLights.value=a.state.spot,d.spotLightShadows.value=a.state.spotShadow,d.rectAreaLights.value=a.state.rectArea,d.ltc_1.value=a.state.rectAreaLTC1,d.ltc_2.value=a.state.rectAreaLTC2,d.pointLights.value=a.state.point,d.pointLightShadows.value=a.state.pointShadow,d.hemisphereLights.value=a.state.hemi,d.directionalShadowMap.value=a.state.directionalShadowMap,d.directionalShadowMatrix.value=a.state.directionalShadowMatrix,d.spotShadowMap.value=a.state.spotShadowMap,d.spotLightMatrix.value=a.state.spotLightMatrix,d.spotLightMap.value=a.state.spotLightMap,d.pointShadowMap.value=a.state.pointShadowMap,d.pointShadowMatrix.value=a.state.pointShadowMatrix);let f=c.getUniforms(),m=so.seqWithValue(f.seq,d);return r.currentProgram=c,r.uniformsList=m,c}function ek(e,t){let i=et.get(e);i.outputEncoding=t.outputEncoding,i.instancing=t.instancing,i.skinning=t.skinning,i.morphTargets=t.morphTargets,i.morphNormals=t.morphNormals,i.morphColors=t.morphColors,i.morphTargetsCount=t.morphTargetsCount,i.numClippingPlanes=t.numClippingPlanes,i.numIntersection=t.numClipIntersection,i.vertexAlphas=t.vertexAlphas,i.vertexTangents=t.vertexTangents,i.toneMapping=t.toneMapping}eO.setAnimationLoop(function(e){eP&&eP(e)}),"undefined"!=typeof self&&eO.setContext(self),this.setAnimationLoop=function(e){eP=e,ew.setAnimationLoop(e),null===e?eO.stop():eO.start()},ew.addEventListener("sessionstart",eI),ew.addEventListener("sessionend",eD),this.render=function(e,t){if(void 0!==t&&!0!==t.isCamera){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(!0===y)return;!0===e.matrixWorldAutoUpdate&&e.updateMatrixWorld(),null===t.parent&&!0===t.matrixWorldAutoUpdate&&t.updateMatrixWorld(),!0===ew.enabled&&!0===ew.isPresenting&&(!0===ew.cameraAutoUpdate&&ew.updateCamera(t),t=ew.getCamera()),!0===e.isScene&&e.onBeforeRender(_,e,t,S),(p=ec.get(e,x.length)).init(),x.push(p),G.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),U.setFromProjectionMatrix(G),F=this.localClippingEnabled,B=ed.init(this.clippingPlanes,F,t),(d=eu.get(e,v.length)).init(),v.push(d),function e(t,i,n,r){if(!1===t.visible)return;let a=t.layers.test(i.layers);if(a){if(t.isGroup)n=t.renderOrder;else if(t.isLOD)!0===t.autoUpdate&&t.update(i);else if(t.isLight)p.pushLight(t),t.castShadow&&p.pushShadow(t);else if(t.isSprite){if(!t.frustumCulled||U.intersectsSprite(t)){r&&H.setFromMatrixPosition(t.matrixWorld).applyMatrix4(G);let s=eo.update(t),o=t.material;o.visible&&d.push(t,s,o,n,H.z,null)}}else if((t.isMesh||t.isLine||t.isPoints)&&(t.isSkinnedMesh&&t.skeleton.frame!==ee.render.frame&&(t.skeleton.update(),t.skeleton.frame=ee.render.frame),!t.frustumCulled||U.intersectsObject(t))){r&&H.setFromMatrixPosition(t.matrixWorld).applyMatrix4(G);let l=eo.update(t),h=t.material;if(Array.isArray(h)){let u=l.groups;for(let c=0,f=u.length;c<f;c++){let m=u[c],g=h[m.materialIndex];g&&g.visible&&d.push(t,l,g,n,H.z,m)}}else h.visible&&d.push(t,l,h,n,H.z,null)}}let v=t.children;for(let x=0,_=v.length;x<_;x++)e(v[x],i,n,r)}(e,t,0,_.sortObjects),d.finish(),!0===_.sortObjects&&d.sort(I,D),!0===B&&ed.beginShadows();let i=p.state.shadowsArray;if(ep.render(i,e,t),!0===B&&ed.endShadows(),!0===this.info.autoReset&&this.info.reset(),ef.render(d,e),p.setupLights(_.physicallyCorrectLights),t.isArrayCamera){let n=t.cameras;for(let r=0,a=n.length;r<a;r++){let s=n[r];ez(d,e,s,s.viewport)}}else ez(d,e,t);null!==S&&(ei.updateMultisampleRenderTarget(S),ei.updateRenderTargetMipmap(S)),!0===e.isScene&&e.onAfterRender(_,e,t),ey.resetDefaultState(),w=-1,T=null,x.pop(),p=x.length>0?x[x.length-1]:null,v.pop(),d=v.length>0?v[v.length-1]:null},this.getActiveCubeFace=function(){return M},this.getActiveMipmapLevel=function(){return b},this.getRenderTarget=function(){return S},this.setRenderTargetTextures=function(e,t,i){et.get(e.texture).__webglTexture=t,et.get(e.depthTexture).__webglTexture=i;let n=et.get(e);n.__hasExternalTextures=!0,n.__hasExternalTextures&&(n.__autoAllocateDepthBuffer=void 0===i,n.__autoAllocateDepthBuffer||!0!==K.has("WEBGL_multisampled_render_to_texture")||(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),n.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(e,t){let i=et.get(e);i.__webglFramebuffer=t,i.__useDefaultFramebuffer=void 0===t},this.setRenderTarget=function(e,t=0,i=0){S=e,M=t,b=i;let n=!0;if(e){let r=et.get(e);void 0!==r.__useDefaultFramebuffer?(Q.bindFramebuffer(36160,null),n=!1):void 0===r.__webglFramebuffer?ei.setupRenderTarget(e):r.__hasExternalTextures&&ei.rebindTextures(e,et.get(e.texture).__webglTexture,et.get(e.depthTexture).__webglTexture)}let a=null,s=!1,o=!1;if(e){let l=e.texture;(l.isData3DTexture||l.isDataArrayTexture)&&(o=!0);let h=et.get(e).__webglFramebuffer;e.isWebGLCubeRenderTarget?(a=h[t],s=!0):a=$.isWebGL2&&e.samples>0&&!1===ei.useMultisampledRTT(e)?et.get(e).__webglMultisampledFramebuffer:h,A.copy(e.viewport),E.copy(e.scissor),C=e.scissorTest}else A.copy(N).multiplyScalar(P).floor(),E.copy(O).multiplyScalar(P).floor(),C=z;let u=Q.bindFramebuffer(36160,a);if(u&&$.drawBuffers&&n&&Q.drawBuffers(e,a),Q.viewport(A),Q.scissor(E),Q.setScissorTest(C),s){let c=et.get(e.texture);q.framebufferTexture2D(36160,36064,34069+t,c.__webglTexture,i)}else if(o){let d=et.get(e.texture);q.framebufferTextureLayer(36160,36064,d.__webglTexture,i||0,t||0)}w=-1},this.readRenderTargetPixels=function(e,t,i,n,r,a,s){if(!(e&&e.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let o=et.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget&&void 0!==s&&(o=o[s]),o){Q.bindFramebuffer(36160,o);try{let l=e.texture,h=l.format,u=l.type;if(h!==eN&&ex.convert(h)!==q.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}let c=u===eC&&(K.has("EXT_color_buffer_half_float")||$.isWebGL2&&K.has("EXT_color_buffer_float"));if(u!==eM&&ex.convert(u)!==q.getParameter(35738)&&!(u===eE&&($.isWebGL2||K.has("OES_texture_float")||K.has("WEBGL_color_buffer_float")))&&!c){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}t>=0&&t<=e.width-n&&i>=0&&i<=e.height-r&&q.readPixels(t,i,n,r,ex.convert(h),ex.convert(u),a)}finally{let d=null!==S?et.get(S).__webglFramebuffer:null;Q.bindFramebuffer(36160,d)}}},this.copyFramebufferToTexture=function(e,t,i=0){let n=Math.pow(2,-i),r=Math.floor(t.image.width*n),a=Math.floor(t.image.height*n);ei.setTexture2D(t,0),q.copyTexSubImage2D(3553,i,0,0,e.x,e.y,r,a),Q.unbindTexture()},this.copyTextureToTexture=function(e,t,i,n=0){let r=t.image.width,a=t.image.height,s=ex.convert(i.format),o=ex.convert(i.type);ei.setTexture2D(i,0),q.pixelStorei(37440,i.flipY),q.pixelStorei(37441,i.premultiplyAlpha),q.pixelStorei(3317,i.unpackAlignment),t.isDataTexture?q.texSubImage2D(3553,n,e.x,e.y,r,a,s,o,t.image.data):t.isCompressedTexture?q.compressedTexSubImage2D(3553,n,e.x,e.y,t.mipmaps[0].width,t.mipmaps[0].height,s,t.mipmaps[0].data):q.texSubImage2D(3553,n,e.x,e.y,s,o,t.image),0===n&&i.generateMipmaps&&q.generateMipmap(3553),Q.unbindTexture()},this.copyTextureToTexture3D=function(e,t,i,n,r=0){if(_.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}let a=e.max.x-e.min.x+1,s=e.max.y-e.min.y+1,o=e.max.z-e.min.z+1,l=ex.convert(n.format),h=ex.convert(n.type),u;if(n.isData3DTexture)ei.setTexture3D(n,0),u=32879;else if(n.isDataArrayTexture)ei.setTexture2DArray(n,0),u=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}q.pixelStorei(37440,n.flipY),q.pixelStorei(37441,n.premultiplyAlpha),q.pixelStorei(3317,n.unpackAlignment);let c=q.getParameter(3314),d=q.getParameter(32878),p=q.getParameter(3316),f=q.getParameter(3315),m=q.getParameter(32877),g=i.isCompressedTexture?i.mipmaps[0]:i.image;q.pixelStorei(3314,g.width),q.pixelStorei(32878,g.height),q.pixelStorei(3316,e.min.x),q.pixelStorei(3315,e.min.y),q.pixelStorei(32877,e.min.z),i.isDataTexture||i.isData3DTexture?q.texSubImage3D(u,r,t.x,t.y,t.z,a,s,o,l,h,g.data):i.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),q.compressedTexSubImage3D(u,r,t.x,t.y,t.z,a,s,o,l,g.data)):q.texSubImage3D(u,r,t.x,t.y,t.z,a,s,o,l,h,g),q.pixelStorei(3314,c),q.pixelStorei(32878,d),q.pixelStorei(3316,p),q.pixelStorei(3315,f),q.pixelStorei(32877,m),0===r&&n.generateMipmaps&&q.generateMipmap(u),Q.unbindTexture()},this.initTexture=function(e){e.isCubeTexture?ei.setTextureCube(e,0):e.isData3DTexture?ei.setTexture3D(e,0):e.isDataArrayTexture?ei.setTexture2DArray(e,0):ei.setTexture2D(e,0),Q.unbindTexture()},this.resetState=function(){M=0,b=0,S=null,Q.reset(),ey.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}class s$ extends sK{}s$.prototype.isWebGL1Renderer=!0;class sQ{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new iC(e),this.density=t}clone(){return new sQ(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}class s0{constructor(e,t=1,i=1e3){this.isFog=!0,this.name="",this.color=new iC(e),this.near=t,this.far=i}clone(){return new s0(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}class s1 extends nO{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){let t=super.toJSON(e);return null!==this.fog&&(t.object.fog=this.fog.toJSON()),t}get autoUpdate(){return console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate}set autoUpdate(e){console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate=e}}class s3{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=void 0!==e?e.length/t:0,this.usage=tj,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=t8()}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,i){e*=this.stride,i*=t.stride;for(let n=0,r=this.stride;n<r;n++)this.array[e+n]=t.array[i+n];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=t8()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);let t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),i=new this.constructor(t,this.stride);return i.setUsage(this.usage),i}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=t8()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}let s2=new iH;class s4{constructor(e,t,i,n=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=i,this.normalized=!0===n}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,i=this.data.count;t<i;t++)s2.fromBufferAttribute(this,t),s2.applyMatrix4(e),this.setXYZ(t,s2.x,s2.y,s2.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)s2.fromBufferAttribute(this,t),s2.applyNormalMatrix(e),this.setXYZ(t,s2.x,s2.y,s2.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)s2.fromBufferAttribute(this,t),s2.transformDirection(e),this.setXYZ(t,s2.x,s2.y,s2.z);return this}setX(e,t){return this.normalized&&(t=ih(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=ih(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=ih(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=ih(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=il(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=il(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=il(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=il(t,this.array)),t}setXY(e,t,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=ih(t,this.array),i=ih(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this}setXYZ(e,t,i,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=ih(t,this.array),i=ih(i,this.array),n=ih(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=n,this}setXYZW(e,t,i,n,r){return e=e*this.data.stride+this.offset,this.normalized&&(t=ih(t,this.array),i=ih(i,this.array),n=ih(n,this.array),r=ih(r,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=n,this.data.array[e+3]=r,this}clone(e){if(void 0!==e)return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new s4(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized);{console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will deinterleave buffer data.");let t=[];for(let i=0;i<this.count;i++){let n=i*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[n+r])}return new n$(new this.array.constructor(t),this.itemSize,this.normalized)}}toJSON(e){if(void 0!==e)return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized};{console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will deinterleave buffer data.");let t=[];for(let i=0;i<this.count;i++){let n=i*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[n+r])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}}}class s5 extends nY{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new iC(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let s6,s7=new iH,s8=new iH,s9=new iH,oe=new ic,ot=new ic,oi=new nu,on=new iH,or=new iH,oa=new iH,os=new ic,oo=new ic,ol=new ic;class oh extends nO{constructor(e){if(super(),this.isSprite=!0,this.type="Sprite",void 0===s6){s6=new rs;let t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),i=new s3(t,5);s6.setIndex([0,1,2,0,2,3]),s6.setAttribute("position",new s4(i,3,0,!1)),s6.setAttribute("uv",new s4(i,2,3,!1))}this.geometry=s6,this.material=void 0!==e?e:new s5,this.center=new ic(.5,.5)}raycast(e,t){null===e.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),s8.setFromMatrixScale(this.matrixWorld),oi.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),s9.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&s8.multiplyScalar(-s9.z);let i=this.material.rotation,n,r;0!==i&&(r=Math.cos(i),n=Math.sin(i));let a=this.center;ou(on.set(-.5,-.5,0),s9,a,s8,n,r),ou(or.set(.5,-.5,0),s9,a,s8,n,r),ou(oa.set(.5,.5,0),s9,a,s8,n,r),os.set(0,0),oo.set(1,0),ol.set(1,1);let s=e.ray.intersectTriangle(on,or,oa,!1,s7);if(null===s&&(ou(or.set(-.5,.5,0),s9,a,s8,n,r),oo.set(0,1),null===(s=e.ray.intersectTriangle(on,oa,or,!1,s7))))return;let o=e.ray.origin.distanceTo(s7);o<e.near||o>e.far||t.push({distance:o,point:s7.clone(),uv:nq.getUV(s7,on,or,oa,os,oo,ol,new ic),face:null,object:this})}copy(e,t){return super.copy(e,t),void 0!==e.center&&this.center.copy(e.center),this.material=e.material,this}}function ou(e,t,i,n,r,a){oe.subVectors(e,i).addScalar(.5).multiply(n),void 0!==r?(ot.x=a*oe.x-r*oe.y,ot.y=r*oe.x+a*oe.y):ot.copy(oe),e.copy(t),e.x+=ot.x,e.y+=ot.y,e.applyMatrix4(oi)}let oc=new iH,od=new iH;class op extends nO{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);let t=e.levels;for(let i=0,n=t.length;i<n;i++){let r=t[i];this.addLevel(r.object.clone(),r.distance)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0){t=Math.abs(t);let i=this.levels,n;for(n=0;n<i.length&&!(t<i[n].distance);n++);return i.splice(n,0,{distance:t,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){let t=this.levels;if(t.length>0){let i,n;for(i=1,n=t.length;i<n&&!(e<t[i].distance);i++);return t[i-1].object}return null}raycast(e,t){let i=this.levels;if(i.length>0){oc.setFromMatrixPosition(this.matrixWorld);let n=e.ray.origin.distanceTo(oc);this.getObjectForDistance(n).raycast(e,t)}}update(e){let t=this.levels;if(t.length>1){oc.setFromMatrixPosition(e.matrixWorld),od.setFromMatrixPosition(this.matrixWorld);let i=oc.distanceTo(od)/e.zoom;t[0].object.visible=!0;let n,r;for(n=1,r=t.length;n<r;n++)if(i>=t[n].distance)t[n-1].object.visible=!1,t[n].object.visible=!0;else break;for(this._currentLevel=n-1;n<r;n++)t[n].object.visible=!1}}toJSON(e){let t=super.toJSON(e);!1===this.autoUpdate&&(t.object.autoUpdate=!1),t.object.levels=[];let i=this.levels;for(let n=0,r=i.length;n<r;n++){let a=i[n];t.object.levels.push({object:a.object.uuid,distance:a.distance})}return t}}let of=new iH,om=new iO,og=new iO,ov=new iH,ox=new nu;class o_ extends rw{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new nu,this.bindMatrixInverse=new nu}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this}bind(e,t){this.skeleton=e,void 0===t&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){let e=new iO,t=this.geometry.attributes.skinWeight;for(let i=0,n=t.count;i<n;i++){e.fromBufferAttribute(t,i);let r=1/e.manhattanLength();r!==1/0?e.multiplyScalar(r):e.set(1,0,0,0),t.setXYZW(i,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(e,t){let i=this.skeleton,n=this.geometry;om.fromBufferAttribute(n.attributes.skinIndex,e),og.fromBufferAttribute(n.attributes.skinWeight,e),of.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let r=0;r<4;r++){let a=og.getComponent(r);if(0!==a){let s=om.getComponent(r);ox.multiplyMatrices(i.bones[s].matrixWorld,i.boneInverses[s]),t.addScaledVector(ov.copy(of).applyMatrix4(ox),a)}}return t.applyMatrix4(this.bindMatrixInverse)}}class oy extends nO{constructor(){super(),this.isBone=!0,this.type="Bone"}}class oM extends iN{constructor(e=null,t=1,i=1,n,r,a,s,o,l=ec,h=ec,u,c){super(null,a,s,o,l,h,n,r,u,c),this.isDataTexture=!0,this.image={data:e,width:t,height:i},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}let ob=new nu,oS=new nu;class ow{constructor(e=[],t=[]){this.uuid=t8(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){let e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(16*e.length),0===t.length)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let i=0,n=this.bones.length;i<n;i++)this.boneInverses.push(new nu)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){let i=new nu;this.bones[e]&&i.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(i)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){let i=this.bones[e];i&&i.matrixWorld.copy(this.boneInverses[e]).invert()}for(let n=0,r=this.bones.length;n<r;n++){let a=this.bones[n];a&&(a.parent&&a.parent.isBone?(a.matrix.copy(a.parent.matrixWorld).invert(),a.matrix.multiply(a.matrixWorld)):a.matrix.copy(a.matrixWorld),a.matrix.decompose(a.position,a.quaternion,a.scale))}}update(){let e=this.bones,t=this.boneInverses,i=this.boneMatrices,n=this.boneTexture;for(let r=0,a=e.length;r<a;r++){let s=e[r]?e[r].matrixWorld:oS;ob.multiplyMatrices(s,t[r]),ob.toArray(i,16*r)}null!==n&&(n.needsUpdate=!0)}clone(){return new ow(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(4*this.bones.length);e=Math.max(e=is(e),4);let t=new Float32Array(e*e*4);t.set(this.boneMatrices);let i=new oM(t,e,e,eN,eE);return i.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=i,this.boneTextureSize=e,this}getBoneByName(e){for(let t=0,i=this.bones.length;t<i;t++){let n=this.bones[t];if(n.name===e)return n}}dispose(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let i=0,n=e.bones.length;i<n;i++){let r=e.bones[i],a=t[r];void 0===a&&(console.warn("THREE.Skeleton: No bone found with UUID:",r),a=new oy),this.bones.push(a),this.boneInverses.push(new nu().fromArray(e.boneInverses[i]))}return this.init(),this}toJSON(){let e={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;let t=this.bones,i=this.boneInverses;for(let n=0,r=t.length;n<r;n++){let a=t[n];e.bones.push(a.uuid);let s=i[n];e.boneInverses.push(s.toArray())}return e}}class oT extends n${constructor(e,t,i,n=1){super(e,t,i),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){let e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}let oA=new nu,oE=new nu,oC=[],oL=new rw;class oR extends rw{constructor(e,t,i){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new oT(new Float32Array(16*i),16),this.instanceColor=null,this.count=i,this.frustumCulled=!1}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),null!==e.instanceColor&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}getColorAt(e,t){t.fromArray(this.instanceColor.array,3*e)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,16*e)}raycast(e,t){let i=this.matrixWorld,n=this.count;if(oL.geometry=this.geometry,oL.material=this.material,void 0!==oL.material)for(let r=0;r<n;r++){this.getMatrixAt(r,oA),oE.multiplyMatrices(i,oA),oL.matrixWorld=oE,oL.raycast(e,oC);for(let a=0,s=oC.length;a<s;a++){let o=oC[a];o.instanceId=r,o.object=this,t.push(o)}oC.length=0}}setColorAt(e,t){null===this.instanceColor&&(this.instanceColor=new oT(new Float32Array(3*this.instanceMatrix.count),3)),t.toArray(this.instanceColor.array,3*e)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,16*e)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}class oP extends nY{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new iC(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}let oI=new iH,oD=new iH,oN=new nu,oO=new nh,oz=new nt;class oU extends nO{constructor(e=new rs,t=new oP){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){let e=this.geometry;if(null===e.index){let t=e.attributes.position,i=[0];for(let n=1,r=t.count;n<r;n++)oI.fromBufferAttribute(t,n-1),oD.fromBufferAttribute(t,n),i[n]=i[n-1],i[n]+=oI.distanceTo(oD);e.setAttribute("lineDistance",new n7(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){let i=this.geometry,n=this.matrixWorld,r=e.params.Line.threshold,a=i.drawRange;if(null===i.boundingSphere&&i.computeBoundingSphere(),oz.copy(i.boundingSphere),oz.applyMatrix4(n),oz.radius+=r,!1===e.ray.intersectsSphere(oz))return;oN.copy(n).invert(),oO.copy(e.ray).applyMatrix4(oN);let s=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=s*s,l=new iH,h=new iH,u=new iH,c=new iH,d=this.isLineSegments?2:1,p=i.index,f=i.attributes,m=f.position;if(null!==p){let g=Math.max(0,a.start),v=Math.min(p.count,a.start+a.count);for(let x=g,_=v-1;x<_;x+=d){let y=p.getX(x),M=p.getX(x+1);l.fromBufferAttribute(m,y),h.fromBufferAttribute(m,M);let b=oO.distanceSqToSegment(l,h,c,u);if(b>o)continue;c.applyMatrix4(this.matrixWorld);let S=e.ray.origin.distanceTo(c);S<e.near||S>e.far||t.push({distance:S,point:u.clone().applyMatrix4(this.matrixWorld),index:x,face:null,faceIndex:null,object:this})}}else{let w=Math.max(0,a.start),T=Math.min(m.count,a.start+a.count);for(let A=w,E=T-1;A<E;A+=d){l.fromBufferAttribute(m,A),h.fromBufferAttribute(m,A+1);let C=oO.distanceSqToSegment(l,h,c,u);if(C>o)continue;c.applyMatrix4(this.matrixWorld);let L=e.ray.origin.distanceTo(c);L<e.near||L>e.far||t.push({distance:L,point:u.clone().applyMatrix4(this.matrixWorld),index:A,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){let e=this.geometry,t=e.morphAttributes,i=Object.keys(t);if(i.length>0){let n=t[i[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,a=n.length;r<a;r++){let s=n[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[s]=r}}}}}let oB=new iH,oF=new iH;class ok extends oU{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){let e=this.geometry;if(null===e.index){let t=e.attributes.position,i=[];for(let n=0,r=t.count;n<r;n+=2)oB.fromBufferAttribute(t,n),oF.fromBufferAttribute(t,n+1),i[n]=0===n?0:i[n-1],i[n+1]=i[n]+oB.distanceTo(oF);e.setAttribute("lineDistance",new n7(i,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class oG extends oU{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class oV extends nY{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new iC(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let oH=new nu,oW=new nh,oj=new nt,oq=new iH;class oX extends nO{constructor(e=new rs,t=new oV){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}raycast(e,t){let i=this.geometry,n=this.matrixWorld,r=e.params.Points.threshold,a=i.drawRange;if(null===i.boundingSphere&&i.computeBoundingSphere(),oj.copy(i.boundingSphere),oj.applyMatrix4(n),oj.radius+=r,!1===e.ray.intersectsSphere(oj))return;oH.copy(n).invert(),oW.copy(e.ray).applyMatrix4(oH);let s=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=s*s,l=i.index,h=i.attributes,u=h.position;if(null!==l){let c=Math.max(0,a.start),d=Math.min(l.count,a.start+a.count);for(let p=c;p<d;p++){let f=l.getX(p);oq.fromBufferAttribute(u,f),oY(oq,f,o,n,e,t,this)}}else{let m=Math.max(0,a.start),g=Math.min(u.count,a.start+a.count);for(let v=m;v<g;v++)oq.fromBufferAttribute(u,v),oY(oq,v,o,n,e,t,this)}}updateMorphTargets(){let e=this.geometry,t=e.morphAttributes,i=Object.keys(t);if(i.length>0){let n=t[i[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,a=n.length;r<a;r++){let s=n[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[s]=r}}}}}function oY(e,t,i,n,r,a,s){let o=oW.distanceSqToPoint(e);if(o<i){let l=new iH;oW.closestPointToPoint(e,l),l.applyMatrix4(n);let h=r.ray.origin.distanceTo(l);if(h<r.near||h>r.far)return;a.push({distance:h,distanceToRay:Math.sqrt(o),point:l,index:t,face:null,object:s})}}class oZ extends iN{constructor(e,t,i,n,r,a,s,o,l){super(e,t,i,n,r,a,s,o,l),this.isVideoTexture=!0,this.minFilter=void 0!==a?a:eg,this.magFilter=void 0!==r?r:eg,this.generateMipmaps=!1;let h=this;function u(){h.needsUpdate=!0,e.requestVideoFrameCallback(u)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(u)}clone(){return new this.constructor(this.image).copy(this)}update(){let e=this.image;!1=="requestVideoFrameCallback"in e&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class oJ extends iN{constructor(e,t,i){super({width:e,height:t}),this.isFramebufferTexture=!0,this.format=i,this.magFilter=ec,this.minFilter=ec,this.generateMipmaps=!1,this.needsUpdate=!0}}class oK extends iN{constructor(e,t,i,n,r,a,s,o,l,h,u,c){super(null,a,s,o,l,h,n,r,u,c),this.isCompressedTexture=!0,this.image={width:t,height:i},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class o$ extends iN{constructor(e,t,i,n,r,a,s,o,l){super(e,t,i,n,r,a,s,o,l),this.isCanvasTexture=!0,this.needsUpdate=!0}}class oQ{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){let i=this.getUtoTmapping(e);return this.getPoint(i,t)}getPoints(e=5){let t=[];for(let i=0;i<=e;i++)t.push(this.getPoint(i/e));return t}getSpacedPoints(e=5){let t=[];for(let i=0;i<=e;i++)t.push(this.getPointAt(i/e));return t}getLength(){let e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;let t=[],i,n=this.getPoint(0),r=0;t.push(0);for(let a=1;a<=e;a++)t.push(r+=(i=this.getPoint(a/e)).distanceTo(n)),n=i;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){let i=this.getLengths(),n=0,r=i.length,a;a=t||e*i[r-1];let s=0,o=r-1,l;for(;s<=o;)if((l=i[n=Math.floor(s+(o-s)/2)]-a)<0)s=n+1;else if(l>0)o=n-1;else{o=n;break}if(i[n=o]===a)return n/(r-1);let h=i[n],u=i[n+1],c=(n+(a-h)/(u-h))/(r-1);return c}getTangent(e,t){let i=e-1e-4,n=e+1e-4;i<0&&(i=0),n>1&&(n=1);let r=this.getPoint(i),a=this.getPoint(n),s=t||(r.isVector2?new ic:new iH);return s.copy(a).sub(r).normalize(),s}getTangentAt(e,t){let i=this.getUtoTmapping(e);return this.getTangent(i,t)}computeFrenetFrames(e,t){let i=new iH,n=[],r=[],a=[],s=new iH,o=new nu;for(let l=0;l<=e;l++){let h=l/e;n[l]=this.getTangentAt(h,new iH)}r[0]=new iH,a[0]=new iH;let u=Number.MAX_VALUE,c=Math.abs(n[0].x),d=Math.abs(n[0].y),p=Math.abs(n[0].z);c<=u&&(u=c,i.set(1,0,0)),d<=u&&(u=d,i.set(0,1,0)),p<=u&&i.set(0,0,1),s.crossVectors(n[0],i).normalize(),r[0].crossVectors(n[0],s),a[0].crossVectors(n[0],r[0]);for(let f=1;f<=e;f++){if(r[f]=r[f-1].clone(),a[f]=a[f-1].clone(),s.crossVectors(n[f-1],n[f]),s.length()>Number.EPSILON){s.normalize();let m=Math.acos(t9(n[f-1].dot(n[f]),-1,1));r[f].applyMatrix4(o.makeRotationAxis(s,m))}a[f].crossVectors(n[f],r[f])}if(!0===t){let g=Math.acos(t9(r[0].dot(r[e]),-1,1));g/=e,n[0].dot(s.crossVectors(r[0],r[e]))>0&&(g=-g);for(let v=1;v<=e;v++)r[v].applyMatrix4(o.makeRotationAxis(n[v],g*v)),a[v].crossVectors(n[v],r[v])}return{tangents:n,normals:r,binormals:a}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){let e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class o0 extends oQ{constructor(e=0,t=0,i=1,n=1,r=0,a=2*Math.PI,s=!1,o=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=i,this.yRadius=n,this.aStartAngle=r,this.aEndAngle=a,this.aClockwise=s,this.aRotation=o}getPoint(e,t){let i=t||new ic,n=2*Math.PI,r=this.aEndAngle-this.aStartAngle,a=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=n;for(;r>n;)r-=n;r<Number.EPSILON&&(r=a?0:n),!0!==this.aClockwise||a||(r===n?r=-n:r-=n);let s=this.aStartAngle+e*r,o=this.aX+this.xRadius*Math.cos(s),l=this.aY+this.yRadius*Math.sin(s);if(0!==this.aRotation){let h=Math.cos(this.aRotation),u=Math.sin(this.aRotation),c=o-this.aX,d=l-this.aY;o=c*h-d*u+this.aX,l=c*u+d*h+this.aY}return i.set(o,l)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){let e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class o1 extends o0{constructor(e,t,i,n,r,a){super(e,t,i,i,n,r,a),this.isArcCurve=!0,this.type="ArcCurve"}}function o3(){let e=0,t=0,i=0,n=0;function r(r,a,s,o){e=r,t=s,i=-3*r+3*a-2*s-o,n=2*r-2*a+s+o}return{initCatmullRom:function(e,t,i,n,a){r(t,i,a*(i-e),a*(n-t))},initNonuniformCatmullRom:function(e,t,i,n,a,s,o){let l=(t-e)/a-(i-e)/(a+s)+(i-t)/s,h=(i-t)/s-(n-t)/(s+o)+(n-i)/o;r(t,i,l*=s,h*=s)},calc:function(r){let a=r*r;return e+t*r+i*a+n*(a*r)}}}let o2=new iH,o4=new o3,o5=new o3,o6=new o3;class o7 extends oQ{constructor(e=[],t=!1,i="centripetal",n=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=i,this.tension=n}getPoint(e,t=new iH){let i=this.points,n=i.length,r=(n-(this.closed?0:1))*e,a=Math.floor(r),s=r-a;this.closed?a+=a>0?0:(Math.floor(Math.abs(a)/n)+1)*n:0===s&&a===n-1&&(a=n-2,s=1);let o,l;this.closed||a>0?o=i[(a-1)%n]:(o2.subVectors(i[0],i[1]).add(i[0]),o=o2);let h=i[a%n],u=i[(a+1)%n];if(this.closed||a+2<n?l=i[(a+2)%n]:(o2.subVectors(i[n-1],i[n-2]).add(i[n-1]),l=o2),"centripetal"===this.curveType||"chordal"===this.curveType){let c="chordal"===this.curveType?.5:.25,d=Math.pow(o.distanceToSquared(h),c),p=Math.pow(h.distanceToSquared(u),c),f=Math.pow(u.distanceToSquared(l),c);p<1e-4&&(p=1),d<1e-4&&(d=p),f<1e-4&&(f=p),o4.initNonuniformCatmullRom(o.x,h.x,u.x,l.x,d,p,f),o5.initNonuniformCatmullRom(o.y,h.y,u.y,l.y,d,p,f),o6.initNonuniformCatmullRom(o.z,h.z,u.z,l.z,d,p,f)}else"catmullrom"===this.curveType&&(o4.initCatmullRom(o.x,h.x,u.x,l.x,this.tension),o5.initCatmullRom(o.y,h.y,u.y,l.y,this.tension),o6.initCatmullRom(o.z,h.z,u.z,l.z,this.tension));return t.set(o4.calc(s),o5.calc(s),o6.calc(s)),t}copy(e){super.copy(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){let n=e.points[t];this.points.push(n.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){let e=super.toJSON();e.points=[];for(let t=0,i=this.points.length;t<i;t++){let n=this.points[t];e.points.push(n.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){let n=e.points[t];this.points.push(new iH().fromArray(n))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function o8(e,t,i,n,r){let a=(n-t)*.5,s=(r-i)*.5,o=e*e;return(2*i-2*n+a+s)*(e*o)+(-3*i+3*n-2*a-s)*o+a*e+i}function o9(e,t,i,n){var r,a,s,o;return function(e,t){let i=1-e;return i*i*t}(e,t)+2*(1-e)*e*i+e*e*n}function le(e,t,i,n,r){var a,s,o,l;return function(e,t){let i=1-e;return i*i*i*t}(e,t)+function(e,t){let i=1-e;return 3*i*i*e*t}(e,i)+3*(1-e)*e*e*n+e*e*e*r}class lt extends oQ{constructor(e=new ic,t=new ic,i=new ic,n=new ic){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=i,this.v3=n}getPoint(e,t=new ic){let i=this.v0,n=this.v1,r=this.v2,a=this.v3;return t.set(le(e,i.x,n.x,r.x,a.x),le(e,i.y,n.y,r.y,a.y)),t}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){let e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class li extends oQ{constructor(e=new iH,t=new iH,i=new iH,n=new iH){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=i,this.v3=n}getPoint(e,t=new iH){let i=this.v0,n=this.v1,r=this.v2,a=this.v3;return t.set(le(e,i.x,n.x,r.x,a.x),le(e,i.y,n.y,r.y,a.y),le(e,i.z,n.z,r.z,a.z)),t}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){let e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class ln extends oQ{constructor(e=new ic,t=new ic){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new ic){return 1===e?t.copy(this.v2):(t.copy(this.v2).sub(this.v1),t.multiplyScalar(e).add(this.v1)),t}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t){let i=t||new ic;return i.copy(this.v2).sub(this.v1).normalize(),i}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){let e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class lr extends oQ{constructor(e=new iH,t=new iH){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new iH){return 1===e?t.copy(this.v2):(t.copy(this.v2).sub(this.v1),t.multiplyScalar(e).add(this.v1)),t}getPointAt(e,t){return this.getPoint(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){let e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class la extends oQ{constructor(e=new ic,t=new ic,i=new ic){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=i}getPoint(e,t=new ic){let i=this.v0,n=this.v1,r=this.v2;return t.set(o9(e,i.x,n.x,r.x),o9(e,i.y,n.y,r.y)),t}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){let e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class ls extends oQ{constructor(e=new iH,t=new iH,i=new iH){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=i}getPoint(e,t=new iH){let i=this.v0,n=this.v1,r=this.v2;return t.set(o9(e,i.x,n.x,r.x),o9(e,i.y,n.y,r.y),o9(e,i.z,n.z,r.z)),t}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){let e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class lo extends oQ{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new ic){let i=this.points,n=(i.length-1)*e,r=Math.floor(n),a=n-r,s=i[0===r?r:r-1],o=i[r],l=i[r>i.length-2?i.length-1:r+1],h=i[r>i.length-3?i.length-1:r+2];return t.set(o8(a,s.x,o.x,l.x,h.x),o8(a,s.y,o.y,l.y,h.y)),t}copy(e){super.copy(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){let n=e.points[t];this.points.push(n.clone())}return this}toJSON(){let e=super.toJSON();e.points=[];for(let t=0,i=this.points.length;t<i;t++){let n=this.points[t];e.points.push(n.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){let n=e.points[t];this.points.push(new ic().fromArray(n))}return this}}var ll=Object.freeze({__proto__:null,ArcCurve:o1,CatmullRomCurve3:o7,CubicBezierCurve:lt,CubicBezierCurve3:li,EllipseCurve:o0,LineCurve:ln,LineCurve3:lr,QuadraticBezierCurve:la,QuadraticBezierCurve3:ls,SplineCurve:lo});class lh extends oQ{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){let e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new ln(t,e))}getPoint(e,t){let i=e*this.getLength(),n=this.getCurveLengths(),r=0;for(;r<n.length;){if(n[r]>=i){let a=n[r]-i,s=this.curves[r],o=s.getLength(),l=0===o?0:1-a/o;return s.getPointAt(l,t)}r++}return null}getLength(){let e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;let e=[],t=0;for(let i=0,n=this.curves.length;i<n;i++)e.push(t+=this.curves[i].getLength());return this.cacheLengths=e,e}getSpacedPoints(e=40){let t=[];for(let i=0;i<=e;i++)t.push(this.getPoint(i/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){let t=[],i;for(let n=0,r=this.curves;n<r.length;n++){let a=r[n],s=a.isEllipseCurve?2*e:a.isLineCurve||a.isLineCurve3?1:a.isSplineCurve?e*a.points.length:e,o=a.getPoints(s);for(let l=0;l<o.length;l++){let h=o[l];i&&i.equals(h)||(t.push(h),i=h)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,i=e.curves.length;t<i;t++){let n=e.curves[t];this.curves.push(n.clone())}return this.autoClose=e.autoClose,this}toJSON(){let e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,i=this.curves.length;t<i;t++){let n=this.curves[t];e.curves.push(n.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,i=e.curves.length;t<i;t++){let n=e.curves[t];this.curves.push(new ll[n.type]().fromJSON(n))}return this}}class lu extends lh{constructor(e){super(),this.type="Path",this.currentPoint=new ic,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,i=e.length;t<i;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){let i=new ln(this.currentPoint.clone(),new ic(e,t));return this.curves.push(i),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,i,n){let r=new la(this.currentPoint.clone(),new ic(e,t),new ic(i,n));return this.curves.push(r),this.currentPoint.set(i,n),this}bezierCurveTo(e,t,i,n,r,a){let s=new lt(this.currentPoint.clone(),new ic(e,t),new ic(i,n),new ic(r,a));return this.curves.push(s),this.currentPoint.set(r,a),this}splineThru(e){let t=[this.currentPoint.clone()].concat(e),i=new lo(t);return this.curves.push(i),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,i,n,r,a){let s=this.currentPoint.x,o=this.currentPoint.y;return this.absarc(e+s,t+o,i,n,r,a),this}absarc(e,t,i,n,r,a){return this.absellipse(e,t,i,i,n,r,a),this}ellipse(e,t,i,n,r,a,s,o){let l=this.currentPoint.x,h=this.currentPoint.y;return this.absellipse(e+l,t+h,i,n,r,a,s,o),this}absellipse(e,t,i,n,r,a,s,o){let l=new o0(e,t,i,n,r,a,s,o);if(this.curves.length>0){let h=l.getPoint(0);h.equals(this.currentPoint)||this.lineTo(h.x,h.y)}this.curves.push(l);let u=l.getPoint(1);return this.currentPoint.copy(u),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){let e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class lc extends rs{constructor(e=[new ic(0,-.5),new ic(.5,0),new ic(0,.5)],t=12,i=0,n=2*Math.PI){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:i,phiLength:n},t=Math.floor(t),n=t9(n,0,2*Math.PI);let r=[],a=[],s=[],o=[],l=[],h=1/t,u=new iH,c=new ic,d=new iH,p=new iH,f=new iH,m=0,g=0;for(let v=0;v<=e.length-1;v++)switch(v){case 0:m=e[v+1].x-e[v].x,g=e[v+1].y-e[v].y,d.x=1*g,d.y=-m,d.z=0*g,f.copy(d),d.normalize(),o.push(d.x,d.y,d.z);break;case e.length-1:o.push(f.x,f.y,f.z);break;default:m=e[v+1].x-e[v].x,g=e[v+1].y-e[v].y,d.x=1*g,d.y=-m,d.z=0*g,p.copy(d),d.x+=f.x,d.y+=f.y,d.z+=f.z,d.normalize(),o.push(d.x,d.y,d.z),f.copy(p)}for(let x=0;x<=t;x++){let _=i+x*h*n,y=Math.sin(_),M=Math.cos(_);for(let b=0;b<=e.length-1;b++){u.x=e[b].x*y,u.y=e[b].y,u.z=e[b].x*M,a.push(u.x,u.y,u.z),c.x=x/t,c.y=b/(e.length-1),s.push(c.x,c.y);let S=o[3*b+0]*y,w=o[3*b+1],T=o[3*b+0]*M;l.push(S,w,T)}}for(let A=0;A<t;A++)for(let E=0;E<e.length-1;E++){let C=E+A*e.length,L=C+e.length,R=C+e.length+1,P=C+1;r.push(C,L,P),r.push(R,P,L)}this.setIndex(r),this.setAttribute("position",new n7(a,3)),this.setAttribute("uv",new n7(s,2)),this.setAttribute("normal",new n7(l,3))}static fromJSON(e){return new lc(e.points,e.segments,e.phiStart,e.phiLength)}}class ld extends lc{constructor(e=1,t=1,i=4,n=8){let r=new lu;r.absarc(0,-t/2,e,1.5*Math.PI,0),r.absarc(0,t/2,e,0,.5*Math.PI),super(r.getPoints(i),n),this.type="CapsuleGeometry",this.parameters={radius:e,height:t,capSegments:i,radialSegments:n}}static fromJSON(e){return new ld(e.radius,e.length,e.capSegments,e.radialSegments)}}class lp extends rs{constructor(e=1,t=8,i=0,n=2*Math.PI){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:i,thetaLength:n},t=Math.max(3,t);let r=[],a=[],s=[],o=[],l=new iH,h=new ic;a.push(0,0,0),s.push(0,0,1),o.push(.5,.5);for(let u=0,c=3;u<=t;u++,c+=3){let d=i+u/t*n;l.x=e*Math.cos(d),l.y=e*Math.sin(d),a.push(l.x,l.y,l.z),s.push(0,0,1),h.x=(a[c]/e+1)/2,h.y=(a[c+1]/e+1)/2,o.push(h.x,h.y)}for(let p=1;p<=t;p++)r.push(p,p+1,0);this.setIndex(r),this.setAttribute("position",new n7(a,3)),this.setAttribute("normal",new n7(s,3)),this.setAttribute("uv",new n7(o,2))}static fromJSON(e){return new lp(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class lf extends rs{constructor(e=1,t=1,i=1,n=8,r=1,a=!1,s=0,o=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:i,radialSegments:n,heightSegments:r,openEnded:a,thetaStart:s,thetaLength:o};let l=this;n=Math.floor(n),r=Math.floor(r);let h=[],u=[],c=[],d=[],p=0,f=[],m=i/2,g=0;function v(i){let r=p,a=new ic,f=new iH,v=0,x=!0===i?e:t,_=!0===i?1:-1;for(let y=1;y<=n;y++)u.push(0,m*_,0),c.push(0,_,0),d.push(.5,.5),p++;let M=p;for(let b=0;b<=n;b++){let S=b/n,w=S*o+s,T=Math.cos(w),A=Math.sin(w);f.x=x*A,f.y=m*_,f.z=x*T,u.push(f.x,f.y,f.z),c.push(0,_,0),a.x=.5*T+.5,a.y=.5*A*_+.5,d.push(a.x,a.y),p++}for(let E=0;E<n;E++){let C=r+E,L=M+E;!0===i?h.push(L,L+1,C):h.push(L+1,L,C),v+=3}l.addGroup(g,v,!0===i?1:2),g+=v}(function(){let a=new iH,v=new iH,x=0,_=(t-e)/i;for(let y=0;y<=r;y++){let M=[],b=y/r,S=b*(t-e)+e;for(let w=0;w<=n;w++){let T=w/n,A=T*o+s,E=Math.sin(A),C=Math.cos(A);v.x=S*E,v.y=-b*i+m,v.z=S*C,u.push(v.x,v.y,v.z),a.set(E,_,C).normalize(),c.push(a.x,a.y,a.z),d.push(T,1-b),M.push(p++)}f.push(M)}for(let L=0;L<n;L++)for(let R=0;R<r;R++){let P=f[R][L],I=f[R+1][L],D=f[R+1][L+1],N=f[R][L+1];h.push(P,I,N),h.push(I,D,N),x+=6}l.addGroup(g,x,0),g+=x})(),!1===a&&(e>0&&v(!0),t>0&&v(!1)),this.setIndex(h),this.setAttribute("position",new n7(u,3)),this.setAttribute("normal",new n7(c,3)),this.setAttribute("uv",new n7(d,2))}static fromJSON(e){return new lf(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class lm extends lf{constructor(e=1,t=1,i=8,n=1,r=!1,a=0,s=2*Math.PI){super(0,e,t,i,n,r,a,s),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:i,heightSegments:n,openEnded:r,thetaStart:a,thetaLength:s}}static fromJSON(e){return new lm(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class lg extends rs{constructor(e=[],t=[],i=1,n=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:i,detail:n};let r=[],a=[];function s(e,t,i,n){let r=n+1,a=[];for(let s=0;s<=r;s++){a[s]=[];let l=e.clone().lerp(i,s/r),h=t.clone().lerp(i,s/r),u=r-s;for(let c=0;c<=u;c++)0===c&&s===r?a[s][c]=l:a[s][c]=l.clone().lerp(h,c/u)}for(let d=0;d<r;d++)for(let p=0;p<2*(r-d)-1;p++){let f=Math.floor(p/2);p%2==0?(o(a[d][f+1]),o(a[d+1][f]),o(a[d][f])):(o(a[d][f+1]),o(a[d+1][f+1]),o(a[d+1][f]))}}function o(e){r.push(e.x,e.y,e.z)}function l(t,i){let n=3*t;i.x=e[n+0],i.y=e[n+1],i.z=e[n+2]}function h(e,t,i,n){n<0&&1===e.x&&(a[t]=e.x-1),0===i.x&&0===i.z&&(a[t]=n/2/Math.PI+.5)}function u(e){return Math.atan2(e.z,-e.x)}function c(e){return Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))}(function(e){let i=new iH,n=new iH,r=new iH;for(let a=0;a<t.length;a+=3)l(t[a+0],i),l(t[a+1],n),l(t[a+2],r),s(i,n,r,e)})(n),function(e){let t=new iH;for(let i=0;i<r.length;i+=3)t.x=r[i+0],t.y=r[i+1],t.z=r[i+2],t.normalize().multiplyScalar(e),r[i+0]=t.x,r[i+1]=t.y,r[i+2]=t.z}(i),function(){let e=new iH;for(let t=0;t<r.length;t+=3){e.x=r[t+0],e.y=r[t+1],e.z=r[t+2];let i=u(e)/2/Math.PI+.5,n=c(e)/Math.PI+.5;a.push(i,1-n)}(function(){let e=new iH,t=new iH,i=new iH,n=new iH,s=new ic,o=new ic,l=new ic;for(let c=0,d=0;c<r.length;c+=9,d+=6){e.set(r[c+0],r[c+1],r[c+2]),t.set(r[c+3],r[c+4],r[c+5]),i.set(r[c+6],r[c+7],r[c+8]),s.set(a[d+0],a[d+1]),o.set(a[d+2],a[d+3]),l.set(a[d+4],a[d+5]),n.copy(e).add(t).add(i).divideScalar(3);let p=u(n);h(s,d+0,e,p),h(o,d+2,t,p),h(l,d+4,i,p)}})(),function(){for(let e=0;e<a.length;e+=6){let t=a[e+0],i=a[e+2],n=a[e+4],r=Math.max(t,i,n),s=Math.min(t,i,n);r>.9&&s<.1&&(t<.2&&(a[e+0]+=1),i<.2&&(a[e+2]+=1),n<.2&&(a[e+4]+=1))}}()}(),this.setAttribute("position",new n7(r,3)),this.setAttribute("normal",new n7(r.slice(),3)),this.setAttribute("uv",new n7(a,2)),0===n?this.computeVertexNormals():this.normalizeNormals()}static fromJSON(e){return new lg(e.vertices,e.indices,e.radius,e.details)}}class lv extends lg{constructor(e=1,t=0){let i=(1+Math.sqrt(5))/2,n=1/i;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-n,-i,0,-n,i,0,n,-i,0,n,i,-n,-i,0,-n,i,0,n,-i,0,n,i,0,-i,0,-n,i,0,-n,-i,0,n,i,0,n],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new lv(e.radius,e.detail)}}let lx=new iH,l_=new iH,ly=new iH,lM=new nq;class lb extends rs{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},null!==e){let i=Math.cos(t6*t),n=e.getIndex(),r=e.getAttribute("position"),a=n?n.count:r.count,s=[0,0,0],o=["a","b","c"],l=[,,,],h={},u=[];for(let c=0;c<a;c+=3){n?(s[0]=n.getX(c),s[1]=n.getX(c+1),s[2]=n.getX(c+2)):(s[0]=c,s[1]=c+1,s[2]=c+2);let{a:d,b:p,c:f}=lM;if(d.fromBufferAttribute(r,s[0]),p.fromBufferAttribute(r,s[1]),f.fromBufferAttribute(r,s[2]),lM.getNormal(ly),l[0]=`${Math.round(1e4*d.x)},${Math.round(1e4*d.y)},${Math.round(1e4*d.z)}`,l[1]=`${Math.round(1e4*p.x)},${Math.round(1e4*p.y)},${Math.round(1e4*p.z)}`,l[2]=`${Math.round(1e4*f.x)},${Math.round(1e4*f.y)},${Math.round(1e4*f.z)}`,l[0]!==l[1]&&l[1]!==l[2]&&l[2]!==l[0])for(let m=0;m<3;m++){let g=(m+1)%3,v=l[m],x=l[g],_=lM[o[m]],y=lM[o[g]],M=`${v}_${x}`,b=`${x}_${v}`;b in h&&h[b]?(ly.dot(h[b].normal)<=i&&(u.push(_.x,_.y,_.z),u.push(y.x,y.y,y.z)),h[b]=null):M in h||(h[M]={index0:s[m],index1:s[g],normal:ly.clone()})}}for(let S in h)if(h[S]){let{index0:w,index1:T}=h[S];lx.fromBufferAttribute(r,w),l_.fromBufferAttribute(r,T),u.push(lx.x,lx.y,lx.z),u.push(l_.x,l_.y,l_.z)}this.setAttribute("position",new n7(u,3))}}}class lS extends lu{constructor(e){super(e),this.uuid=t8(),this.type="Shape",this.holes=[]}getPointsHoles(e){let t=[];for(let i=0,n=this.holes.length;i<n;i++)t[i]=this.holes[i].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,i=e.holes.length;t<i;t++){let n=e.holes[t];this.holes.push(n.clone())}return this}toJSON(){let e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,i=this.holes.length;t<i;t++){let n=this.holes[t];e.holes.push(n.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,i=e.holes.length;t<i;t++){let n=e.holes[t];this.holes.push(new lu().fromJSON(n))}return this}}let lw={triangulate:function(e,t,i=2){let n=t&&t.length,r=n?t[0]*i:e.length,a=lT(e,0,r,i,!0),s=[];if(!a||a.next===a.prev)return s;let o,l,h,u,c,d,p;if(n&&(a=function(e,t,i,n){let r=[],a,s,o,l,h;for(a=0,s=t.length;a<s;a++)o=t[a]*n,l=a<s-1?t[a+1]*n:e.length,(h=lT(e,o,l,n,!1))===h.next&&(h.steiner=!0),r.push(lz(h));for(r.sort(lI),a=0;a<r.length;a++)lD(r[a],i),i=lA(i,i.next);return i}(e,t,a,i)),e.length>80*i){o=h=e[0],l=u=e[1];for(let f=i;f<r;f+=i)c=e[f],d=e[f+1],c<o&&(o=c),d<l&&(l=d),c>h&&(h=c),d>u&&(u=d);p=0!==(p=Math.max(h-o,u-l))?1/p:0}return lE(a,s,i,o,l,p),s}};function lT(e,t,i,n,r){let a,s;if(r===function(e,t,i,n){let r=0;for(let a=t,s=i-n;a<i;a+=n)r+=(e[s]-e[a])*(e[a+1]+e[s+1]),s=a;return r}(e,t,i,n)>0)for(a=t;a<i;a+=n)s=lq(a,e[a],e[a+1],s);else for(a=i-n;a>=t;a-=n)s=lq(a,e[a],e[a+1],s);return s&&lk(s,s.next)&&(lX(s),s=s.next),s}function lA(e,t){if(!e)return e;t||(t=e);let i=e,n;do if(n=!1,!i.steiner&&(lk(i,i.next)||0===lF(i.prev,i,i.next))){if(lX(i),(i=t=i.prev)===i.next)break;n=!0}else i=i.next;while(n||i!==t);return t}function lE(e,t,i,n,r,a,s){if(!e)return;!s&&a&&function(e,t,i,n){let r=e;do null===r.z&&(r.z=lO(r.x,r.y,t,i,n)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next;while(r!==e);r.prevZ.nextZ=null,r.prevZ=null,function(e){let t,i,n,r,a,s,o,l,h=1;do{for(i=e,e=null,a=null,s=0;i;){for(s++,n=i,o=0,t=0;t<h&&(o++,n=n.nextZ);t++);for(l=h;o>0||l>0&&n;)0!==o&&(0===l||!n||i.z<=n.z)?(r=i,i=i.nextZ,o--):(r=n,n=n.nextZ,l--),a?a.nextZ=r:e=r,r.prevZ=a,a=r;i=n}a.nextZ=null,h*=2}while(s>1)}(r)}(e,n,r,a);let o=e,l,h;for(;e.prev!==e.next;){if(l=e.prev,h=e.next,a?lL(e,n,r,a):lC(e)){t.push(l.i/i),t.push(e.i/i),t.push(h.i/i),lX(e),e=h.next,o=h.next;continue}if((e=h)===o){s?1===s?lE(e=lR(lA(e),t,i),t,i,n,r,a,2):2===s&&lP(e,t,i,n,r,a):lE(lA(e),t,i,n,r,a,1);break}}}function lC(e){let t=e.prev,i=e.next;if(lF(t,e,i)>=0)return!1;let n=e.next.next;for(;n!==e.prev;){if(lU(t.x,t.y,e.x,e.y,i.x,i.y,n.x,n.y)&&lF(n.prev,n,n.next)>=0)return!1;n=n.next}return!0}function lL(e,t,i,n){let r=e.prev,a=e.next;if(lF(r,e,a)>=0)return!1;let s=r.x<e.x?r.x<a.x?r.x:a.x:e.x<a.x?e.x:a.x,o=r.y<e.y?r.y<a.y?r.y:a.y:e.y<a.y?e.y:a.y,l=r.x>e.x?r.x>a.x?r.x:a.x:e.x>a.x?e.x:a.x,h=r.y>e.y?r.y>a.y?r.y:a.y:e.y>a.y?e.y:a.y,u=lO(s,o,t,i,n),c=lO(l,h,t,i,n),d=e.prevZ,p=e.nextZ;for(;d&&d.z>=u&&p&&p.z<=c;){if(d!==e.prev&&d!==e.next&&lU(r.x,r.y,e.x,e.y,a.x,a.y,d.x,d.y)&&lF(d.prev,d,d.next)>=0||(d=d.prevZ,p!==e.prev&&p!==e.next&&lU(r.x,r.y,e.x,e.y,a.x,a.y,p.x,p.y)&&lF(p.prev,p,p.next)>=0))return!1;p=p.nextZ}for(;d&&d.z>=u;){if(d!==e.prev&&d!==e.next&&lU(r.x,r.y,e.x,e.y,a.x,a.y,d.x,d.y)&&lF(d.prev,d,d.next)>=0)return!1;d=d.prevZ}for(;p&&p.z<=c;){if(p!==e.prev&&p!==e.next&&lU(r.x,r.y,e.x,e.y,a.x,a.y,p.x,p.y)&&lF(p.prev,p,p.next)>=0)return!1;p=p.nextZ}return!0}function lR(e,t,i){let n=e;do{let r=n.prev,a=n.next.next;!lk(r,a)&&lG(r,n,n.next,a)&&lW(r,a)&&lW(a,r)&&(t.push(r.i/i),t.push(n.i/i),t.push(a.i/i),lX(n),lX(n.next),n=e=a),n=n.next}while(n!==e);return lA(n)}function lP(e,t,i,n,r,a){let s=e;do{let o=s.next.next;for(;o!==s.prev;){if(s.i!==o.i&&lB(s,o)){let l=lj(s,o);s=lA(s,s.next),l=lA(l,l.next),lE(s,t,i,n,r,a),lE(l,t,i,n,r,a);return}o=o.next}s=s.next}while(s!==e)}function lI(e,t){return e.x-t.x}function lD(e,t){if(t=function(e,t){let i=t,n=e.x,r=e.y,a=-1/0,s;do{if(r<=i.y&&r>=i.next.y&&i.next.y!==i.y){let o=i.x+(r-i.y)*(i.next.x-i.x)/(i.next.y-i.y);if(o<=n&&o>a){if(a=o,o===n){if(r===i.y)return i;if(r===i.next.y)return i.next}s=i.x<i.next.x?i:i.next}}i=i.next}while(i!==t);if(!s)return null;if(n===a)return s;let l=s,h=s.x,u=s.y,c=1/0,d;i=s;do n>=i.x&&i.x>=h&&n!==i.x&&lU(r<u?n:a,r,h,u,r<u?a:n,r,i.x,i.y)&&(d=Math.abs(r-i.y)/(n-i.x),lW(i,e)&&(d<c||d===c&&(i.x>s.x||i.x===s.x&&lN(s,i)))&&(s=i,c=d)),i=i.next;while(i!==l);return s}(e,t)){let i=lj(t,e);lA(t,t.next),lA(i,i.next)}}function lN(e,t){return 0>lF(e.prev,e,t.prev)&&0>lF(t.next,e,e.next)}function lO(e,t,i,n,r){return(e=((e=((e=((e=((e=32767*(e-i)*r)|e<<8)&16711935)|e<<4)&252645135)|e<<2)&858993459)|e<<1)&1431655765)|(t=((t=((t=((t=((t=32767*(t-n)*r)|t<<8)&16711935)|t<<4)&252645135)|t<<2)&858993459)|t<<1)&1431655765)<<1}function lz(e){let t=e,i=e;do(t.x<i.x||t.x===i.x&&t.y<i.y)&&(i=t),t=t.next;while(t!==e);return i}function lU(e,t,i,n,r,a,s,o){return(r-s)*(t-o)-(e-s)*(a-o)>=0&&(e-s)*(n-o)-(i-s)*(t-o)>=0&&(i-s)*(a-o)-(r-s)*(n-o)>=0}function lB(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!function(e,t){let i=e;do{if(i.i!==e.i&&i.next.i!==e.i&&i.i!==t.i&&i.next.i!==t.i&&lG(i,i.next,e,t))return!0;i=i.next}while(i!==e);return!1}(e,t)&&(lW(e,t)&&lW(t,e)&&function(e,t){let i=e,n=!1,r=(e.x+t.x)/2,a=(e.y+t.y)/2;do i.y>a!=i.next.y>a&&i.next.y!==i.y&&r<(i.next.x-i.x)*(a-i.y)/(i.next.y-i.y)+i.x&&(n=!n),i=i.next;while(i!==e);return n}(e,t)&&(lF(e.prev,e,t.prev)||lF(e,t.prev,t))||lk(e,t)&&lF(e.prev,e,e.next)>0&&lF(t.prev,t,t.next)>0)}function lF(e,t,i){return(t.y-e.y)*(i.x-t.x)-(t.x-e.x)*(i.y-t.y)}function lk(e,t){return e.x===t.x&&e.y===t.y}function lG(e,t,i,n){let r=lH(lF(e,t,i)),a=lH(lF(e,t,n)),s=lH(lF(i,n,e)),o=lH(lF(i,n,t));return!!(r!==a&&s!==o||0===r&&lV(e,i,t)||0===a&&lV(e,n,t)||0===s&&lV(i,e,n)||0===o&&lV(i,t,n))}function lV(e,t,i){return t.x<=Math.max(e.x,i.x)&&t.x>=Math.min(e.x,i.x)&&t.y<=Math.max(e.y,i.y)&&t.y>=Math.min(e.y,i.y)}function lH(e){return e>0?1:e<0?-1:0}function lW(e,t){return 0>lF(e.prev,e,e.next)?lF(e,t,e.next)>=0&&lF(e,e.prev,t)>=0:0>lF(e,t,e.prev)||0>lF(e,e.next,t)}function lj(e,t){let i=new lY(e.i,e.x,e.y),n=new lY(t.i,t.x,t.y),r=e.next,a=t.prev;return e.next=t,t.prev=e,i.next=r,r.prev=i,n.next=i,i.prev=n,a.next=n,n.prev=a,n}function lq(e,t,i,n){let r=new lY(e,t,i);return n?(r.next=n.next,r.prev=n,n.next.prev=r,n.next=r):(r.prev=r,r.next=r),r}function lX(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function lY(e,t,i){this.i=e,this.x=t,this.y=i,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}class lZ{static area(e){let t=e.length,i=0;for(let n=t-1,r=0;r<t;n=r++)i+=e[n].x*e[r].y-e[r].x*e[n].y;return .5*i}static isClockWise(e){return 0>lZ.area(e)}static triangulateShape(e,t){let i=[],n=[],r=[];lJ(e),lK(i,e);let a=e.length;t.forEach(lJ);for(let s=0;s<t.length;s++)n.push(a),a+=t[s].length,lK(i,t[s]);let o=lw.triangulate(i,n);for(let l=0;l<o.length;l+=3)r.push(o.slice(l,l+3));return r}}function lJ(e){let t=e.length;t>2&&e[t-1].equals(e[0])&&e.pop()}function lK(e,t){for(let i=0;i<t.length;i++)e.push(t[i].x),e.push(t[i].y)}class l$ extends rs{constructor(e=new lS([new ic(.5,.5),new ic(-.5,.5),new ic(-.5,-.5),new ic(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];let i=this,n=[],r=[];for(let a=0,s=e.length;a<s;a++){let o=e[a];l(o)}function l(e){let a=[],s=void 0!==t.curveSegments?t.curveSegments:12,o=void 0!==t.steps?t.steps:1,l=void 0!==t.depth?t.depth:1,h=void 0===t.bevelEnabled||t.bevelEnabled,u=void 0!==t.bevelThickness?t.bevelThickness:.2,c=void 0!==t.bevelSize?t.bevelSize:u-.1,d=void 0!==t.bevelOffset?t.bevelOffset:0,p=void 0!==t.bevelSegments?t.bevelSegments:3,f=t.extrudePath,m=void 0!==t.UVGenerator?t.UVGenerator:lQ,g,v=!1,x,_,y,M;f&&(g=f.getSpacedPoints(o),v=!0,h=!1,x=f.computeFrenetFrames(o,!1),_=new iH,y=new iH,M=new iH),h||(p=0,u=0,c=0,d=0);let b=e.extractPoints(s),S=b.shape,w=b.holes,T=!lZ.isClockWise(S);if(T){S=S.reverse();for(let A=0,E=w.length;A<E;A++){let C=w[A];lZ.isClockWise(C)&&(w[A]=C.reverse())}}let L=lZ.triangulateShape(S,w),R=S;for(let P=0,I=w.length;P<I;P++){let D=w[P];S=S.concat(D)}function N(e,t,i){return t||console.error("THREE.ExtrudeGeometry: vec does not exist"),t.clone().multiplyScalar(i).add(e)}let O=S.length,z=L.length;function U(e,t,i){let n,r,a,s=e.x-t.x,o=e.y-t.y,l=i.x-e.x,h=i.y-e.y,u=s*s+o*o;if(Math.abs(s*h-o*l)>Number.EPSILON){let c=Math.sqrt(u),d=Math.sqrt(l*l+h*h),p=t.x-o/c,f=t.y+s/c,m=i.x-h/d,g=i.y+l/d,v=((m-p)*h-(g-f)*l)/(s*h-o*l);n=p+s*v-e.x,r=f+o*v-e.y;let x=n*n+r*r;if(x<=2)return new ic(n,r);a=Math.sqrt(x/2)}else{let _=!1;s>Number.EPSILON?l>Number.EPSILON&&(_=!0):s<-Number.EPSILON?l<-Number.EPSILON&&(_=!0):Math.sign(o)===Math.sign(h)&&(_=!0),_?(n=-o,r=s,a=Math.sqrt(u)):(n=s,r=o,a=Math.sqrt(u/2))}return new ic(n/a,r/a)}let B=[];for(let F=0,k=R.length,G=k-1,V=F+1;F<k;F++,G++,V++)G===k&&(G=0),V===k&&(V=0),B[F]=U(R[F],R[G],R[V]);let H=[],W,j=B.concat();for(let q=0,X=w.length;q<X;q++){let Y=w[q];W=[];for(let Z=0,J=Y.length,K=J-1,$=Z+1;Z<J;Z++,K++,$++)K===J&&(K=0),$===J&&($=0),W[Z]=U(Y[Z],Y[K],Y[$]);H.push(W),j=j.concat(W)}for(let Q=0;Q<p;Q++){let ee=Q/p,et=u*Math.cos(ee*Math.PI/2),ei=c*Math.sin(ee*Math.PI/2)+d;for(let en=0,er=R.length;en<er;en++){let ea=N(R[en],B[en],ei);eI(ea.x,ea.y,-et)}for(let es=0,eo=w.length;es<eo;es++){let el=w[es];W=H[es];for(let eh=0,eu=el.length;eh<eu;eh++){let ec=N(el[eh],W[eh],ei);eI(ec.x,ec.y,-et)}}}let ed=c+d;for(let ep=0;ep<O;ep++){let ef=h?N(S[ep],j[ep],ed):S[ep];v?(y.copy(x.normals[0]).multiplyScalar(ef.x),_.copy(x.binormals[0]).multiplyScalar(ef.y),M.copy(g[0]).add(y).add(_),eI(M.x,M.y,M.z)):eI(ef.x,ef.y,0)}for(let em=1;em<=o;em++)for(let eg=0;eg<O;eg++){let ev=h?N(S[eg],j[eg],ed):S[eg];v?(y.copy(x.normals[em]).multiplyScalar(ev.x),_.copy(x.binormals[em]).multiplyScalar(ev.y),M.copy(g[em]).add(y).add(_),eI(M.x,M.y,M.z)):eI(ev.x,ev.y,l/o*em)}for(let ex=p-1;ex>=0;ex--){let e_=ex/p,ey=u*Math.cos(e_*Math.PI/2),eM=c*Math.sin(e_*Math.PI/2)+d;for(let eb=0,eS=R.length;eb<eS;eb++){let ew=N(R[eb],B[eb],eM);eI(ew.x,ew.y,l+ey)}for(let eT=0,eA=w.length;eT<eA;eT++){let eE=w[eT];W=H[eT];for(let eC=0,eL=eE.length;eC<eL;eC++){let eR=N(eE[eC],W[eC],eM);v?eI(eR.x,eR.y+g[o-1].y,g[o-1].x+ey):eI(eR.x,eR.y,l+ey)}}}function eP(e,t){let i=e.length;for(;--i>=0;){let n=i,r=i-1;r<0&&(r=e.length-1);for(let a=0,s=o+2*p;a<s;a++){let l=O*a,h=O*(a+1),u=t+n+l,c=t+r+l,d=t+r+h,f=t+n+h;eN(u,c,d,f)}}}function eI(e,t,i){a.push(e),a.push(t),a.push(i)}function eD(e,t,r){eO(e),eO(t),eO(r);let a=n.length/3,s=m.generateTopUV(i,n,a-3,a-2,a-1);ez(s[0]),ez(s[1]),ez(s[2])}function eN(e,t,r,a){eO(e),eO(t),eO(a),eO(t),eO(r),eO(a);let s=n.length/3,o=m.generateSideWallUV(i,n,s-6,s-3,s-2,s-1);ez(o[0]),ez(o[1]),ez(o[3]),ez(o[1]),ez(o[2]),ez(o[3])}function eO(e){n.push(a[3*e+0]),n.push(a[3*e+1]),n.push(a[3*e+2])}function ez(e){r.push(e.x),r.push(e.y)}(function(){let e=n.length/3;if(h){let t=0,r=O*t;for(let a=0;a<z;a++){let s=L[a];eD(s[2]+r,s[1]+r,s[0]+r)}r=O*(t=o+2*p);for(let l=0;l<z;l++){let u=L[l];eD(u[0]+r,u[1]+r,u[2]+r)}}else{for(let c=0;c<z;c++){let d=L[c];eD(d[2],d[1],d[0])}for(let f=0;f<z;f++){let m=L[f];eD(m[0]+O*o,m[1]+O*o,m[2]+O*o)}}i.addGroup(e,n.length/3-e,0)})(),function(){let e=n.length/3,t=0;eP(R,t),t+=R.length;for(let r=0,a=w.length;r<a;r++){let s=w[r];eP(s,t),t+=s.length}i.addGroup(e,n.length/3-e,1)}()}this.setAttribute("position",new n7(n,3)),this.setAttribute("uv",new n7(r,2)),this.computeVertexNormals()}toJSON(){let e=super.toJSON(),t=this.parameters.shapes,i=this.parameters.options;return function(e,t,i){if(i.shapes=[],Array.isArray(e))for(let n=0,r=e.length;n<r;n++){let a=e[n];i.shapes.push(a.uuid)}else i.shapes.push(e.uuid);return i.options=Object.assign({},t),void 0!==t.extrudePath&&(i.options.extrudePath=t.extrudePath.toJSON()),i}(t,i,e)}static fromJSON(e,t){let i=[];for(let n=0,r=e.shapes.length;n<r;n++){let a=t[e.shapes[n]];i.push(a)}let s=e.options.extrudePath;return void 0!==s&&(e.options.extrudePath=new ll[s.type]().fromJSON(s)),new l$(i,e.options)}}let lQ={generateTopUV:function(e,t,i,n,r){let a=t[3*i],s=t[3*i+1],o=t[3*n],l=t[3*n+1],h=t[3*r],u=t[3*r+1];return[new ic(a,s),new ic(o,l),new ic(h,u)]},generateSideWallUV:function(e,t,i,n,r,a){let s=t[3*i],o=t[3*i+1],l=t[3*i+2],h=t[3*n],u=t[3*n+1],c=t[3*n+2],d=t[3*r],p=t[3*r+1],f=t[3*r+2],m=t[3*a],g=t[3*a+1],v=t[3*a+2];return Math.abs(o-u)<Math.abs(s-h)?[new ic(s,1-l),new ic(h,1-c),new ic(d,1-f),new ic(m,1-v)]:[new ic(o,1-l),new ic(u,1-c),new ic(p,1-f),new ic(g,1-v)]}};class l0 extends lg{constructor(e=1,t=0){let i=(1+Math.sqrt(5))/2;super([-1,i,0,1,i,0,-1,-i,0,1,-i,0,0,-1,i,0,1,i,0,-1,-i,0,1,-i,i,0,-1,i,0,1,-i,0,-1,-i,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new l0(e.radius,e.detail)}}class l1 extends lg{constructor(e=1,t=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new l1(e.radius,e.detail)}}class l3 extends rs{constructor(e=.5,t=1,i=8,n=1,r=0,a=2*Math.PI){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:i,phiSegments:n,thetaStart:r,thetaLength:a},i=Math.max(3,i),n=Math.max(1,n);let s=[],o=[],l=[],h=[],u=e,c=(t-e)/n,d=new iH,p=new ic;for(let f=0;f<=n;f++){for(let m=0;m<=i;m++){let g=r+m/i*a;d.x=u*Math.cos(g),d.y=u*Math.sin(g),o.push(d.x,d.y,d.z),l.push(0,0,1),p.x=(d.x/t+1)/2,p.y=(d.y/t+1)/2,h.push(p.x,p.y)}u+=c}for(let v=0;v<n;v++){let x=v*(i+1);for(let _=0;_<i;_++){let y=_+x,M=y+i+1,b=y+i+2,S=y+1;s.push(y,M,S),s.push(M,b,S)}}this.setIndex(s),this.setAttribute("position",new n7(o,3)),this.setAttribute("normal",new n7(l,3)),this.setAttribute("uv",new n7(h,2))}static fromJSON(e){return new l3(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class l2 extends rs{constructor(e=new lS([new ic(0,.5),new ic(-.5,-.5),new ic(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};let i=[],n=[],r=[],a=[],s=0,o=0;if(!1===Array.isArray(e))h(e);else for(let l=0;l<e.length;l++)h(e[l]),this.addGroup(s,o,l),s+=o,o=0;function h(e){let s=n.length/3,l=e.extractPoints(t),h=l.shape,u=l.holes;!1===lZ.isClockWise(h)&&(h=h.reverse());for(let c=0,d=u.length;c<d;c++){let p=u[c];!0===lZ.isClockWise(p)&&(u[c]=p.reverse())}let f=lZ.triangulateShape(h,u);for(let m=0,g=u.length;m<g;m++){let v=u[m];h=h.concat(v)}for(let x=0,_=h.length;x<_;x++){let y=h[x];n.push(y.x,y.y,0),r.push(0,0,1),a.push(y.x,y.y)}for(let M=0,b=f.length;M<b;M++){let S=f[M],w=S[0]+s,T=S[1]+s,A=S[2]+s;i.push(w,T,A),o+=3}}this.setIndex(i),this.setAttribute("position",new n7(n,3)),this.setAttribute("normal",new n7(r,3)),this.setAttribute("uv",new n7(a,2))}toJSON(){let e=super.toJSON(),t=this.parameters.shapes;return function(e,t){if(t.shapes=[],Array.isArray(e))for(let i=0,n=e.length;i<n;i++){let r=e[i];t.shapes.push(r.uuid)}else t.shapes.push(e.uuid);return t}(t,e)}static fromJSON(e,t){let i=[];for(let n=0,r=e.shapes.length;n<r;n++){let a=t[e.shapes[n]];i.push(a)}return new l2(i,e.curveSegments)}}class l4 extends rs{constructor(e=1,t=32,i=16,n=0,r=2*Math.PI,a=0,s=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:i,phiStart:n,phiLength:r,thetaStart:a,thetaLength:s},t=Math.max(3,Math.floor(t)),i=Math.max(2,Math.floor(i));let o=Math.min(a+s,Math.PI),l=0,h=[],u=new iH,c=new iH,d=[],p=[],f=[],m=[];for(let g=0;g<=i;g++){let v=[],x=g/i,_=0;0==g&&0==a?_=.5/t:g==i&&o==Math.PI&&(_=-.5/t);for(let y=0;y<=t;y++){let M=y/t;u.x=-e*Math.cos(n+M*r)*Math.sin(a+x*s),u.y=e*Math.cos(a+x*s),u.z=e*Math.sin(n+M*r)*Math.sin(a+x*s),p.push(u.x,u.y,u.z),c.copy(u).normalize(),f.push(c.x,c.y,c.z),m.push(M+_,1-x),v.push(l++)}h.push(v)}for(let b=0;b<i;b++)for(let S=0;S<t;S++){let w=h[b][S+1],T=h[b][S],A=h[b+1][S],E=h[b+1][S+1];(0!==b||a>0)&&d.push(w,T,E),(b!==i-1||o<Math.PI)&&d.push(T,A,E)}this.setIndex(d),this.setAttribute("position",new n7(p,3)),this.setAttribute("normal",new n7(f,3)),this.setAttribute("uv",new n7(m,2))}static fromJSON(e){return new l4(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class l5 extends lg{constructor(e=1,t=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new l5(e.radius,e.detail)}}class l6 extends rs{constructor(e=1,t=.4,i=8,n=6,r=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:i,tubularSegments:n,arc:r},i=Math.floor(i),n=Math.floor(n);let a=[],s=[],o=[],l=[],h=new iH,u=new iH,c=new iH;for(let d=0;d<=i;d++)for(let p=0;p<=n;p++){let f=p/n*r,m=d/i*Math.PI*2;u.x=(e+t*Math.cos(m))*Math.cos(f),u.y=(e+t*Math.cos(m))*Math.sin(f),u.z=t*Math.sin(m),s.push(u.x,u.y,u.z),h.x=e*Math.cos(f),h.y=e*Math.sin(f),c.subVectors(u,h).normalize(),o.push(c.x,c.y,c.z),l.push(p/n),l.push(d/i)}for(let g=1;g<=i;g++)for(let v=1;v<=n;v++){let x=(n+1)*g+v-1,_=(n+1)*(g-1)+v-1,y=(n+1)*(g-1)+v,M=(n+1)*g+v;a.push(x,_,M),a.push(_,y,M)}this.setIndex(a),this.setAttribute("position",new n7(s,3)),this.setAttribute("normal",new n7(o,3)),this.setAttribute("uv",new n7(l,2))}static fromJSON(e){return new l6(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class l7 extends rs{constructor(e=1,t=.4,i=64,n=8,r=2,a=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:i,radialSegments:n,p:r,q:a},i=Math.floor(i),n=Math.floor(n);let s=[],o=[],l=[],h=[],u=new iH,c=new iH,d=new iH,p=new iH,f=new iH,m=new iH,g=new iH;for(let v=0;v<=i;++v){let x=v/i*r*Math.PI*2;L(x,r,a,e,d),L(x+.01,r,a,e,p),m.subVectors(p,d),g.addVectors(p,d),f.crossVectors(m,g),g.crossVectors(f,m),f.normalize(),g.normalize();for(let _=0;_<=n;++_){let y=_/n*Math.PI*2,M=-t*Math.cos(y),b=t*Math.sin(y);u.x=d.x+(M*g.x+b*f.x),u.y=d.y+(M*g.y+b*f.y),u.z=d.z+(M*g.z+b*f.z),o.push(u.x,u.y,u.z),c.subVectors(u,d).normalize(),l.push(c.x,c.y,c.z),h.push(v/i),h.push(_/n)}}for(let S=1;S<=i;S++)for(let w=1;w<=n;w++){let T=(n+1)*(S-1)+(w-1),A=(n+1)*S+(w-1),E=(n+1)*S+w,C=(n+1)*(S-1)+w;s.push(T,A,C),s.push(A,E,C)}function L(e,t,i,n,r){let a=i/t*e,s=Math.cos(a);r.x=n*(2+s)*.5*Math.cos(e),r.y=n*(2+s)*Math.sin(e)*.5,r.z=n*Math.sin(a)*.5}this.setIndex(s),this.setAttribute("position",new n7(o,3)),this.setAttribute("normal",new n7(l,3)),this.setAttribute("uv",new n7(h,2))}static fromJSON(e){return new l7(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class l8 extends rs{constructor(e=new ls(new iH(-1,-1,0),new iH(-1,1,0),new iH(1,1,0)),t=64,i=1,n=8,r=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:i,radialSegments:n,closed:r};let a=e.computeFrenetFrames(t,r);this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals;let s=new iH,o=new iH,l=new ic,h=new iH,u=[],c=[],d=[],p=[];function f(r){h=e.getPointAt(r/t,h);let l=a.normals[r],d=a.binormals[r];for(let p=0;p<=n;p++){let f=p/n*Math.PI*2,m=Math.sin(f),g=-Math.cos(f);o.x=g*l.x+m*d.x,o.y=g*l.y+m*d.y,o.z=g*l.z+m*d.z,o.normalize(),c.push(o.x,o.y,o.z),s.x=h.x+i*o.x,s.y=h.y+i*o.y,s.z=h.z+i*o.z,u.push(s.x,s.y,s.z)}}(function(){for(let e=0;e<t;e++)f(e);f(!1===r?t:0),function(){for(let e=0;e<=t;e++)for(let i=0;i<=n;i++)l.x=e/t,l.y=i/n,d.push(l.x,l.y)}(),function(){for(let e=1;e<=t;e++)for(let i=1;i<=n;i++){let r=(n+1)*(e-1)+(i-1),a=(n+1)*e+(i-1),s=(n+1)*e+i,o=(n+1)*(e-1)+i;p.push(r,a,o),p.push(a,s,o)}}()})(),this.setIndex(p),this.setAttribute("position",new n7(u,3)),this.setAttribute("normal",new n7(c,3)),this.setAttribute("uv",new n7(d,2))}toJSON(){let e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new l8(new ll[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class l9 extends rs{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},null!==e){let t=[],i=new Set,n=new iH,r=new iH;if(null!==e.index){let a=e.attributes.position,s=e.index,o=e.groups;0===o.length&&(o=[{start:0,count:s.count,materialIndex:0}]);for(let l=0,h=o.length;l<h;++l){let u=o[l],c=u.start,d=u.count;for(let p=c,f=c+d;p<f;p+=3)for(let m=0;m<3;m++){let g=s.getX(p+m),v=s.getX(p+(m+1)%3);n.fromBufferAttribute(a,g),r.fromBufferAttribute(a,v),!0===he(n,r,i)&&(t.push(n.x,n.y,n.z),t.push(r.x,r.y,r.z))}}}else{let x=e.attributes.position;for(let _=0,y=x.count/3;_<y;_++)for(let M=0;M<3;M++){let b=3*_+M,S=3*_+(M+1)%3;n.fromBufferAttribute(x,b),r.fromBufferAttribute(x,S),!0===he(n,r,i)&&(t.push(n.x,n.y,n.z),t.push(r.x,r.y,r.z))}}this.setAttribute("position",new n7(t,3))}}}function he(e,t,i){let n=`${e.x},${e.y},${e.z}-${t.x},${t.y},${t.z}`,r=`${t.x},${t.y},${t.z}-${e.x},${e.y},${e.z}`;return!0!==i.has(n)&&!0!==i.has(r)&&(i.add(n),i.add(r),!0)}var ht=Object.freeze({__proto__:null,BoxGeometry:rA,CapsuleGeometry:ld,CircleGeometry:lp,ConeGeometry:lm,CylinderGeometry:lf,DodecahedronGeometry:lv,EdgesGeometry:lb,ExtrudeGeometry:l$,IcosahedronGeometry:l0,LatheGeometry:lc,OctahedronGeometry:l1,PlaneGeometry:rj,PolyhedronGeometry:lg,RingGeometry:l3,ShapeGeometry:l2,SphereGeometry:l4,TetrahedronGeometry:l5,TorusGeometry:l6,TorusKnotGeometry:l7,TubeGeometry:l8,WireframeGeometry:l9});class hi extends nY{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new iC(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class hn extends rR{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class hr extends nY{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new iC(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new iC(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=tw,this.normalScale=new ic(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class ha extends hr{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new ic(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return t9(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(e){this.ior=(1+.4*e)/(1-.4*e)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new iC(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationColor=new iC(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new iC(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._iridescence=0,this._transmission=0,this.setValues(e)}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class hs extends nY{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new iC(16777215),this.specular=new iC(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new iC(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=tw,this.normalScale=new ic(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=X,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class ho extends nY{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new iC(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new iC(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=tw,this.normalScale=new ic(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class hl extends nY{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=tw,this.normalScale=new ic(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class hh extends nY{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new iC(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new iC(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=tw,this.normalScale=new ic(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=X,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class hu extends nY{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new iC(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=tw,this.normalScale=new ic(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class hc extends oP{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function hd(e,t,i){return hf(e)?new e.constructor(e.subarray(t,void 0!==i?i:e.length)):e.slice(t,i)}function hp(e,t,i){return e&&(i||e.constructor!==t)?"number"==typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e):e}function hf(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)}function hm(e){let t=e.length,i=Array(t);for(let n=0;n!==t;++n)i[n]=n;return i.sort(function(t,i){return e[t]-e[i]}),i}function hg(e,t,i){let n=e.length,r=new e.constructor(n);for(let a=0,s=0;s!==n;++a){let o=i[a]*t;for(let l=0;l!==t;++l)r[s++]=e[o+l]}return r}function hv(e,t,i,n){let r=1,a=e[0];for(;void 0!==a&&void 0===a[n];)a=e[r++];if(void 0===a)return;let s=a[n];if(void 0!==s){if(Array.isArray(s))do void 0!==(s=a[n])&&(t.push(a.time),i.push.apply(i,s)),a=e[r++];while(void 0!==a);else if(void 0!==s.toArray)do void 0!==(s=a[n])&&(t.push(a.time),s.toArray(i,i.length)),a=e[r++];while(void 0!==a);else do void 0!==(s=a[n])&&(t.push(a.time),i.push(s)),a=e[r++];while(void 0!==a)}}var hx=Object.freeze({__proto__:null,arraySlice:hd,convertArray:hp,isTypedArray:hf,getKeyframeOrder:hm,sortedArray:hg,flattenJSON:hv,subclip:function(e,t,i,n,r=30){let a=e.clone();a.name=t;let s=[];for(let o=0;o<a.tracks.length;++o){let l=a.tracks[o],h=l.getValueSize(),u=[],c=[];for(let d=0;d<l.times.length;++d){let p=l.times[d]*r;if(!(p<i)&&!(p>=n)){u.push(l.times[d]);for(let f=0;f<h;++f)c.push(l.values[d*h+f])}}0!==u.length&&(l.times=hp(u,l.times.constructor),l.values=hp(c,l.values.constructor),s.push(l))}a.tracks=s;let m=1/0;for(let g=0;g<a.tracks.length;++g)m>a.tracks[g].times[0]&&(m=a.tracks[g].times[0]);for(let v=0;v<a.tracks.length;++v)a.tracks[v].shift(-1*m);return a.resetDuration(),a},makeClipAdditive:function(e,t=0,i=e,n=30){n<=0&&(n=30);let r=i.tracks.length,a=t/n;for(let s=0;s<r;++s){let o=i.tracks[s],l=o.ValueTypeName;if("bool"===l||"string"===l)continue;let h=e.tracks.find(function(e){return e.name===o.name&&e.ValueTypeName===l});if(void 0===h)continue;let u=0,c=o.getValueSize();o.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(u=c/3);let d=0,p=h.getValueSize();h.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(d=p/3);let f=o.times.length-1,m;if(a<=o.times[0]){let g=u,v=c-u;m=hd(o.values,g,v)}else if(a>=o.times[f]){let x=f*c+u,_=x+c-u;m=hd(o.values,x,_)}else{let y=o.createInterpolant(),M=u,b=c-u;y.evaluate(a),m=hd(y.resultBuffer,M,b)}if("quaternion"===l){let S=new iV().fromArray(m).normalize().conjugate();S.toArray(m)}let w=h.times.length;for(let T=0;T<w;++T){let A=T*p+d;if("quaternion"===l)iV.multiplyQuaternionsFlat(h.values,A,m,0,h.values,A);else{let E=p-2*d;for(let C=0;C<E;++C)h.values[A+C]-=m[C]}}}return e.blendMode=tg,e}});class h_{constructor(e,t,i,n){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=void 0!==n?n:new t.constructor(i),this.sampleValues=t,this.valueSize=i,this.settings=null,this.DefaultSettings_={}}evaluate(e){let t=this.parameterPositions,i=this._cachedIndex,n=t[i],r=t[i-1];validate_interval:{seek:{let a;linear_scan:{forward_scan:if(!(e<n)){for(let s=i+2;;){if(void 0===n){if(e<r)break forward_scan;return i=t.length,this._cachedIndex=i,this.copySampleValue_(i-1)}if(i===s)break;if(r=n,e<(n=t[++i]))break seek}a=t.length;break linear_scan}if(!(e>=r)){let o=t[1];e<o&&(i=2,r=o);for(let l=i-2;;){if(void 0===r)return this._cachedIndex=0,this.copySampleValue_(0);if(i===l)break;if(n=r,e>=(r=t[--i-1]))break seek}a=i,i=0;break linear_scan}break validate_interval}for(;i<a;){let h=i+a>>>1;e<t[h]?a=h:i=h+1}if(n=t[i],void 0===(r=t[i-1]))return this._cachedIndex=0,this.copySampleValue_(0);if(void 0===n)return i=t.length,this._cachedIndex=i,this.copySampleValue_(i-1)}this._cachedIndex=i,this.intervalChanged_(i,r,n)}return this.interpolate_(i,r,e,n)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){let t=this.resultBuffer,i=this.sampleValues,n=this.valueSize,r=e*n;for(let a=0;a!==n;++a)t[a]=i[r+a];return t}interpolate_(){throw Error("call to abstract method")}intervalChanged_(){}}class hy extends h_{constructor(e,t,i,n){super(e,t,i,n),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:td,endingEnd:td}}intervalChanged_(e,t,i){let n=this.parameterPositions,r=e-2,a=e+1,s=n[r],o=n[a];if(void 0===s)switch(this.getSettings_().endingStart){case tp:r=e,s=2*t-i;break;case tf:s=t+n[r=n.length-2]-n[r+1];break;default:r=e,s=i}if(void 0===o)switch(this.getSettings_().endingEnd){case tp:a=e,o=2*i-t;break;case tf:a=1,o=i+n[1]-n[0];break;default:a=e-1,o=t}let l=(i-t)*.5,h=this.valueSize;this._weightPrev=l/(t-s),this._weightNext=l/(o-i),this._offsetPrev=r*h,this._offsetNext=a*h}interpolate_(e,t,i,n){let r=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=e*s,l=o-s,h=this._offsetPrev,u=this._offsetNext,c=this._weightPrev,d=this._weightNext,p=(i-t)/(n-t),f=p*p,m=f*p,g=-c*m+2*c*f-c*p,v=(1+c)*m+(-1.5-2*c)*f+(-.5+c)*p+1,x=(-1-d)*m+(1.5+d)*f+.5*p,_=d*m-d*f;for(let y=0;y!==s;++y)r[y]=g*a[h+y]+v*a[l+y]+x*a[o+y]+_*a[u+y];return r}}class hM extends h_{constructor(e,t,i,n){super(e,t,i,n)}interpolate_(e,t,i,n){let r=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=e*s,l=o-s,h=(i-t)/(n-t),u=1-h;for(let c=0;c!==s;++c)r[c]=a[l+c]*u+a[o+c]*h;return r}}class hb extends h_{constructor(e,t,i,n){super(e,t,i,n)}interpolate_(e){return this.copySampleValue_(e-1)}}class hS{constructor(e,t,i,n){if(void 0===e)throw Error("THREE.KeyframeTrack: track name is undefined");if(void 0===t||0===t.length)throw Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=hp(t,this.TimeBufferType),this.values=hp(i,this.ValueBufferType),this.setInterpolation(n||this.DefaultInterpolation)}static toJSON(e){let t=e.constructor,i;if(t.toJSON!==this.toJSON)i=t.toJSON(e);else{i={name:e.name,times:hp(e.times,Array),values:hp(e.values,Array)};let n=e.getInterpolation();n!==e.DefaultInterpolation&&(i.interpolation=n)}return i.type=e.ValueTypeName,i}InterpolantFactoryMethodDiscrete(e){return new hb(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new hM(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new hy(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case th:t=this.InterpolantFactoryMethodDiscrete;break;case tu:t=this.InterpolantFactoryMethodLinear;break;case tc:t=this.InterpolantFactoryMethodSmooth}if(void 0===t){let i="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw Error(i)}return console.warn("THREE.KeyframeTrack:",i),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return th;case this.InterpolantFactoryMethodLinear:return tu;case this.InterpolantFactoryMethodSmooth:return tc}}getValueSize(){return this.values.length/this.times.length}shift(e){if(0!==e){let t=this.times;for(let i=0,n=t.length;i!==n;++i)t[i]+=e}return this}scale(e){if(1!==e){let t=this.times;for(let i=0,n=t.length;i!==n;++i)t[i]*=e}return this}trim(e,t){let i=this.times,n=i.length,r=0,a=n-1;for(;r!==n&&i[r]<e;)++r;for(;-1!==a&&i[a]>t;)--a;if(++a,0!==r||a!==n){r>=a&&(r=(a=Math.max(a,1))-1);let s=this.getValueSize();this.times=hd(i,r,a),this.values=hd(this.values,r*s,a*s)}return this}validate(){let e=!0,t=this.getValueSize();t-Math.floor(t)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);let i=this.times,n=this.values,r=i.length;0===r&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let a=null;for(let s=0;s!==r;s++){let o=i[s];if("number"==typeof o&&isNaN(o)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,s,o),e=!1;break}if(null!==a&&a>o){console.error("THREE.KeyframeTrack: Out of order keys.",this,s,o,a),e=!1;break}a=o}if(void 0!==n&&hf(n))for(let l=0,h=n.length;l!==h;++l){let u=n[l];if(isNaN(u)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,l,u),e=!1;break}}return e}optimize(){let e=hd(this.times),t=hd(this.values),i=this.getValueSize(),n=this.getInterpolation()===tc,r=e.length-1,a=1;for(let s=1;s<r;++s){let o=!1,l=e[s],h=e[s+1];if(l!==h&&(1!==s||l!==e[0])){if(n)o=!0;else{let u=s*i,c=u-i,d=u+i;for(let p=0;p!==i;++p){let f=t[u+p];if(f!==t[c+p]||f!==t[d+p]){o=!0;break}}}}if(o){if(s!==a){e[a]=e[s];let m=s*i,g=a*i;for(let v=0;v!==i;++v)t[g+v]=t[m+v]}++a}}if(r>0){e[a]=e[r];for(let x=r*i,_=a*i,y=0;y!==i;++y)t[_+y]=t[x+y];++a}return a!==e.length?(this.times=hd(e,0,a),this.values=hd(t,0,a*i)):(this.times=e,this.values=t),this}clone(){let e=hd(this.times,0),t=hd(this.values,0),i=this.constructor,n=new i(this.name,e,t);return n.createInterpolant=this.createInterpolant,n}}hS.prototype.TimeBufferType=Float32Array,hS.prototype.ValueBufferType=Float32Array,hS.prototype.DefaultInterpolation=tu;class hw extends hS{}hw.prototype.ValueTypeName="bool",hw.prototype.ValueBufferType=Array,hw.prototype.DefaultInterpolation=th,hw.prototype.InterpolantFactoryMethodLinear=void 0,hw.prototype.InterpolantFactoryMethodSmooth=void 0;class hT extends hS{}hT.prototype.ValueTypeName="color";class hA extends hS{}hA.prototype.ValueTypeName="number";class hE extends h_{constructor(e,t,i,n){super(e,t,i,n)}interpolate_(e,t,i,n){let r=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=(i-t)/(n-t),l=e*s;for(let h=l+s;l!==h;l+=4)iV.slerpFlat(r,0,a,l-s,a,l,o);return r}}class hC extends hS{InterpolantFactoryMethodLinear(e){return new hE(this.times,this.values,this.getValueSize(),e)}}hC.prototype.ValueTypeName="quaternion",hC.prototype.DefaultInterpolation=tu,hC.prototype.InterpolantFactoryMethodSmooth=void 0;class hL extends hS{}hL.prototype.ValueTypeName="string",hL.prototype.ValueBufferType=Array,hL.prototype.DefaultInterpolation=th,hL.prototype.InterpolantFactoryMethodLinear=void 0,hL.prototype.InterpolantFactoryMethodSmooth=void 0;class hR extends hS{}hR.prototype.ValueTypeName="vector";class hP{constructor(e,t=-1,i,n=tm){this.name=e,this.tracks=i,this.duration=t,this.blendMode=n,this.uuid=t8(),this.duration<0&&this.resetDuration()}static parse(e){let t=[],i=e.tracks,n=1/(e.fps||1);for(let r=0,a=i.length;r!==a;++r)t.push(hI(i[r]).scale(n));let s=new this(e.name,e.duration,t,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){let t=[],i=e.tracks,n={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let r=0,a=i.length;r!==a;++r)t.push(hS.toJSON(i[r]));return n}static CreateFromMorphTargetSequence(e,t,i,n){let r=t.length,a=[];for(let s=0;s<r;s++){let o=[],l=[];o.push((s+r-1)%r,s,(s+1)%r),l.push(0,1,0);let h=hm(o);o=hg(o,1,h),l=hg(l,1,h),n||0!==o[0]||(o.push(r),l.push(l[0])),a.push(new hA(".morphTargetInfluences["+t[s].name+"]",o,l).scale(1/i))}return new this(e,-1,a)}static findByName(e,t){let i=e;Array.isArray(e)||(i=e.geometry&&e.geometry.animations||e.animations);for(let n=0;n<i.length;n++)if(i[n].name===t)return i[n];return null}static CreateClipsFromMorphTargetSequences(e,t,i){let n={},r=/^([\w-]*?)([\d]+)$/;for(let a=0,s=e.length;a<s;a++){let o=e[a],l=o.name.match(r);if(l&&l.length>1){let h=l[1],u=n[h];u||(n[h]=u=[]),u.push(o)}}let c=[];for(let d in n)c.push(this.CreateFromMorphTargetSequence(d,n[d],t,i));return c}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;let i=function(e,t,i,n,r){if(0!==i.length){let a=[],s=[];hv(i,a,s,n),0!==a.length&&r.push(new e(t,a,s))}},n=[],r=e.name||"default",a=e.fps||30,s=e.blendMode,o=e.length||-1,l=e.hierarchy||[];for(let h=0;h<l.length;h++){let u=l[h].keys;if(u&&0!==u.length){if(u[0].morphTargets){let c={},d;for(d=0;d<u.length;d++)if(u[d].morphTargets)for(let p=0;p<u[d].morphTargets.length;p++)c[u[d].morphTargets[p]]=-1;for(let f in c){let m=[],g=[];for(let v=0;v!==u[d].morphTargets.length;++v){let x=u[d];m.push(x.time),g.push(x.morphTarget===f?1:0)}n.push(new hA(".morphTargetInfluence["+f+"]",m,g))}o=c.length*a}else{let _=".bones["+t[h].name+"]";i(hR,_+".position",u,"pos",n),i(hC,_+".quaternion",u,"rot",n),i(hR,_+".scale",u,"scl",n)}}}if(0===n.length)return null;let y=new this(r,o,n,s);return y}resetDuration(){let e=this.tracks,t=0;for(let i=0,n=e.length;i!==n;++i){let r=this.tracks[i];t=Math.max(t,r.times[r.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){let e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function hI(e){if(void 0===e.type)throw Error("THREE.KeyframeTrack: track type undefined, can not parse");let t=function(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return hA;case"vector":case"vector2":case"vector3":case"vector4":return hR;case"color":return hT;case"quaternion":return hC;case"bool":case"boolean":return hw;case"string":return hL}throw Error("THREE.KeyframeTrack: Unsupported typeName: "+e)}(e.type);if(void 0===e.times){let i=[],n=[];hv(e.keys,i,n,"value"),e.times=i,e.values=n}return void 0!==t.parse?t.parse(e):new t(e.name,e.times,e.values,e.interpolation)}let hD={enabled:!1,files:{},add:function(e,t){!1!==this.enabled&&(this.files[e]=t)},get:function(e){if(!1!==this.enabled)return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}};class hN{constructor(e,t,i){let n=this,r=!1,a=0,s=0,o,l=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=i,this.itemStart=function(e){s++,!1===r&&void 0!==n.onStart&&n.onStart(e,a,s),r=!0},this.itemEnd=function(e){a++,void 0!==n.onProgress&&n.onProgress(e,a,s),a===s&&(r=!1,void 0!==n.onLoad&&n.onLoad())},this.itemError=function(e){void 0!==n.onError&&n.onError(e)},this.resolveURL=function(e){return o?o(e):e},this.setURLModifier=function(e){return o=e,this},this.addHandler=function(e,t){return l.push(e,t),this},this.removeHandler=function(e){let t=l.indexOf(e);return -1!==t&&l.splice(t,2),this},this.getHandler=function(e){for(let t=0,i=l.length;t<i;t+=2){let n=l[t],r=l[t+1];if(n.global&&(n.lastIndex=0),n.test(e))return r}return null}}}let hO=new hN;class hz{constructor(e){this.manager=void 0!==e?e:hO,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){let i=this;return new Promise(function(n,r){i.load(e,n,t,r)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}let hU={};class hB extends Error{constructor(e,t){super(e),this.response=t}}class hF extends hz{constructor(e){super(e)}load(e,t,i,n){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);let r=hD.get(e);if(void 0!==r)return this.manager.itemStart(e),setTimeout(()=>{t&&t(r),this.manager.itemEnd(e)},0),r;if(void 0!==hU[e]){hU[e].push({onLoad:t,onProgress:i,onError:n});return}hU[e]=[],hU[e].push({onLoad:t,onProgress:i,onError:n});let a=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),s=this.mimeType,o=this.responseType;fetch(a).then(t=>{if(200===t.status||0===t.status){if(0===t.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),"undefined"==typeof ReadableStream||void 0===t.body||void 0===t.body.getReader)return t;let i=hU[e],n=t.body.getReader(),r=t.headers.get("Content-Length"),a=r?parseInt(r):0,s=0!==a,o=0,l=new ReadableStream({start(e){(function t(){n.read().then(({done:n,value:r})=>{if(n)e.close();else{o+=r.byteLength;let l=new ProgressEvent("progress",{lengthComputable:s,loaded:o,total:a});for(let h=0,u=i.length;h<u;h++){let c=i[h];c.onProgress&&c.onProgress(l)}e.enqueue(r),t()}})})()}});return new Response(l)}throw new hB(`fetch for "${t.url}" responded with ${t.status}: ${t.statusText}`,t)}).then(e=>{switch(o){case"arraybuffer":return e.arrayBuffer();case"blob":return e.blob();case"document":return e.text().then(e=>{let t=new DOMParser;return t.parseFromString(e,s)});case"json":return e.json();default:if(void 0===s)return e.text();{let t=/charset="?([^;"\s]*)"?/i.exec(s),i=t&&t[1]?t[1].toLowerCase():void 0,n=new TextDecoder(i);return e.arrayBuffer().then(e=>n.decode(e))}}}).then(t=>{hD.add(e,t);let i=hU[e];delete hU[e];for(let n=0,r=i.length;n<r;n++){let a=i[n];a.onLoad&&a.onLoad(t)}}).catch(t=>{let i=hU[e];if(void 0===i)throw this.manager.itemError(e),t;delete hU[e];for(let n=0,r=i.length;n<r;n++){let a=i[n];a.onError&&a.onError(t)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class hk extends hz{constructor(e){super(e)}load(e,t,i,n){let r=this,a=new hF(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(i){try{t(r.parse(JSON.parse(i)))}catch(a){n?n(a):console.error(a),r.manager.itemError(e)}},i,n)}parse(e){let t=[];for(let i=0;i<e.length;i++){let n=hP.parse(e[i]);t.push(n)}return t}}class hG extends hz{constructor(e){super(e)}load(e,t,i,n){let r=this,a=[],s=new oK,o=new hF(this.manager);o.setPath(this.path),o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setWithCredentials(r.withCredentials);let l=0;function h(h){o.load(e[h],function(e){let i=r.parse(e,!0);a[h]={width:i.width,height:i.height,format:i.format,mipmaps:i.mipmaps},6===(l+=1)&&(1===i.mipmapCount&&(s.minFilter=eg),s.image=a,s.format=i.format,s.needsUpdate=!0,t&&t(s))},i,n)}if(Array.isArray(e))for(let u=0,c=e.length;u<c;++u)h(u);else o.load(e,function(e){let i=r.parse(e,!0);if(i.isCubemap){let n=i.mipmaps.length/i.mipmapCount;for(let o=0;o<n;o++){a[o]={mipmaps:[]};for(let l=0;l<i.mipmapCount;l++)a[o].mipmaps.push(i.mipmaps[o*i.mipmapCount+l]),a[o].format=i.format,a[o].width=i.width,a[o].height=i.height}s.image=a}else s.image.width=i.width,s.image.height=i.height,s.mipmaps=i.mipmaps;1===i.mipmapCount&&(s.minFilter=eg),s.format=i.format,s.needsUpdate=!0,t&&t(s)},i,n);return s}}class hV extends hz{constructor(e){super(e)}load(e,t,i,n){void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);let r=this,a=hD.get(e);if(void 0!==a)return r.manager.itemStart(e),setTimeout(function(){t&&t(a),r.manager.itemEnd(e)},0),a;let s=iv("img");function o(){h(),hD.add(e,this),t&&t(this),r.manager.itemEnd(e)}function l(t){h(),n&&n(t),r.manager.itemError(e),r.manager.itemEnd(e)}function h(){s.removeEventListener("load",o,!1),s.removeEventListener("error",l,!1)}return s.addEventListener("load",o,!1),s.addEventListener("error",l,!1),"data:"!==e.slice(0,5)&&void 0!==this.crossOrigin&&(s.crossOrigin=this.crossOrigin),r.manager.itemStart(e),s.src=e,s}}class hH extends hz{constructor(e){super(e)}load(e,t,i,n){let r=new rN,a=new hV(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);let s=0;function o(i){a.load(e[i],function(e){r.images[i]=e,6==++s&&(r.needsUpdate=!0,t&&t(r))},void 0,n)}for(let l=0;l<e.length;++l)o(l);return r}}class hW extends hz{constructor(e){super(e)}load(e,t,i,n){let r=this,a=new oM,s=new hF(this.manager);return s.setResponseType("arraybuffer"),s.setRequestHeader(this.requestHeader),s.setPath(this.path),s.setWithCredentials(r.withCredentials),s.load(e,function(e){let i=r.parse(e);i&&(void 0!==i.image?a.image=i.image:void 0!==i.data&&(a.image.width=i.width,a.image.height=i.height,a.image.data=i.data),a.wrapS=void 0!==i.wrapS?i.wrapS:eh,a.wrapT=void 0!==i.wrapT?i.wrapT:eh,a.magFilter=void 0!==i.magFilter?i.magFilter:eg,a.minFilter=void 0!==i.minFilter?i.minFilter:eg,a.anisotropy=void 0!==i.anisotropy?i.anisotropy:1,void 0!==i.encoding&&(a.encoding=i.encoding),void 0!==i.flipY&&(a.flipY=i.flipY),void 0!==i.format&&(a.format=i.format),void 0!==i.type&&(a.type=i.type),void 0!==i.mipmaps&&(a.mipmaps=i.mipmaps,a.minFilter=e_),1===i.mipmapCount&&(a.minFilter=eg),void 0!==i.generateMipmaps&&(a.generateMipmaps=i.generateMipmaps),a.needsUpdate=!0,t&&t(a,i))},i,n),a}}class hj extends hz{constructor(e){super(e)}load(e,t,i,n){let r=new iN,a=new hV(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,function(e){r.image=e,r.needsUpdate=!0,void 0!==t&&t(r)},i,n),r}}class hq extends nO{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new iC(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){let t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.penumbra&&(t.object.penumbra=this.penumbra),void 0!==this.shadow&&(t.object.shadow=this.shadow.toJSON()),t}}class hX extends hq{constructor(e,t,i){super(e,i),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(nO.DefaultUp),this.updateMatrix(),this.groundColor=new iC(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}let hY=new nu,hZ=new iH,hJ=new iH;class hK{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new ic(512,512),this.map=null,this.mapPass=null,this.matrix=new nu,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new rV,this._frameExtents=new ic(1,1),this._viewportCount=1,this._viewports=[new iO(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){let t=this.camera,i=this.matrix;hZ.setFromMatrixPosition(e.matrixWorld),t.position.copy(hZ),hJ.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(hJ),t.updateMatrixWorld(),hY.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(hY),i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),i.multiply(t.projectionMatrix),i.multiply(t.matrixWorldInverse)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){let e={};return 0!==this.bias&&(e.bias=this.bias),0!==this.normalBias&&(e.normalBias=this.normalBias),1!==this.radius&&(e.radius=this.radius),(512!==this.mapSize.x||512!==this.mapSize.y)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class h$ extends hK{constructor(){super(new rI(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){let t=this.camera,i=2*t7*e.angle*this.focus,n=this.mapSize.width/this.mapSize.height,r=e.distance||t.far;(i!==t.fov||n!==t.aspect||r!==t.far)&&(t.fov=i,t.aspect=n,t.far=r,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class hQ extends hq{constructor(e,t,i=0,n=Math.PI/3,r=0,a=1){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(nO.DefaultUp),this.updateMatrix(),this.target=new nO,this.distance=i,this.angle=n,this.penumbra=r,this.decay=a,this.map=null,this.shadow=new h$}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}let h0=new nu,h1=new iH,h3=new iH;class h2 extends hK{constructor(){super(new rI(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new ic(4,2),this._viewportCount=6,this._viewports=[new iO(2,1,1,1),new iO(0,1,1,1),new iO(3,1,1,1),new iO(1,1,1,1),new iO(3,0,1,1),new iO(1,0,1,1)],this._cubeDirections=[new iH(1,0,0),new iH(-1,0,0),new iH(0,0,1),new iH(0,0,-1),new iH(0,1,0),new iH(0,-1,0)],this._cubeUps=[new iH(0,1,0),new iH(0,1,0),new iH(0,1,0),new iH(0,1,0),new iH(0,0,1),new iH(0,0,-1)]}updateMatrices(e,t=0){let i=this.camera,n=this.matrix,r=e.distance||i.far;r!==i.far&&(i.far=r,i.updateProjectionMatrix()),h1.setFromMatrixPosition(e.matrixWorld),i.position.copy(h1),h3.copy(i.position),h3.add(this._cubeDirections[t]),i.up.copy(this._cubeUps[t]),i.lookAt(h3),i.updateMatrixWorld(),n.makeTranslation(-h1.x,-h1.y,-h1.z),h0.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),this._frustum.setFromProjectionMatrix(h0)}}class h4 extends hq{constructor(e,t,i=0,n=1){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=i,this.decay=n,this.shadow=new h2}get power(){return 4*this.intensity*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class h5 extends hK{constructor(){super(new r1(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class h6 extends hq{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(nO.DefaultUp),this.updateMatrix(),this.target=new nO,this.shadow=new h5}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class h7 extends hq{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class h8 extends hq{constructor(e,t,i=10,n=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=i,this.height=n}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){let t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class h9{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new iH)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){let i=e.x,n=e.y,r=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.282095),t.addScaledVector(a[1],.488603*n),t.addScaledVector(a[2],.488603*r),t.addScaledVector(a[3],.488603*i),t.addScaledVector(a[4],1.092548*(i*n)),t.addScaledVector(a[5],1.092548*(n*r)),t.addScaledVector(a[6],.315392*(3*r*r-1)),t.addScaledVector(a[7],1.092548*(i*r)),t.addScaledVector(a[8],.546274*(i*i-n*n)),t}getIrradianceAt(e,t){let i=e.x,n=e.y,r=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.886227),t.addScaledVector(a[1],1.023328*n),t.addScaledVector(a[2],1.023328*r),t.addScaledVector(a[3],1.023328*i),t.addScaledVector(a[4],.858086*i*n),t.addScaledVector(a[5],.858086*n*r),t.addScaledVector(a[6],.743125*r*r-.247708),t.addScaledVector(a[7],.858086*i*r),t.addScaledVector(a[8],.429043*(i*i-n*n)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let i=0;i<9;i++)this.coefficients[i].addScaledVector(e.coefficients[i],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let i=0;i<9;i++)this.coefficients[i].lerp(e.coefficients[i],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){let i=this.coefficients;for(let n=0;n<9;n++)i[n].fromArray(e,t+3*n);return this}toArray(e=[],t=0){let i=this.coefficients;for(let n=0;n<9;n++)i[n].toArray(e,t+3*n);return e}static getBasisAt(e,t){let i=e.x,n=e.y,r=e.z;t[0]=.282095,t[1]=.488603*n,t[2]=.488603*r,t[3]=.488603*i,t[4]=1.092548*i*n,t[5]=1.092548*n*r,t[6]=.315392*(3*r*r-1),t[7]=1.092548*i*r,t[8]=.546274*(i*i-n*n)}}class ue extends hq{constructor(e=new h9,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){let t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class ut extends hz{constructor(e){super(e),this.textures={}}load(e,t,i,n){let r=this,a=new hF(r.manager);a.setPath(r.path),a.setRequestHeader(r.requestHeader),a.setWithCredentials(r.withCredentials),a.load(e,function(i){try{t(r.parse(JSON.parse(i)))}catch(a){n?n(a):console.error(a),r.manager.itemError(e)}},i,n)}parse(e){let t=this.textures;function i(e){return void 0===t[e]&&console.warn("THREE.MaterialLoader: Undefined texture",e),t[e]}let n=ut.createMaterialFromType(e.type);if(void 0!==e.uuid&&(n.uuid=e.uuid),void 0!==e.name&&(n.name=e.name),void 0!==e.color&&void 0!==n.color&&n.color.setHex(e.color),void 0!==e.roughness&&(n.roughness=e.roughness),void 0!==e.metalness&&(n.metalness=e.metalness),void 0!==e.sheen&&(n.sheen=e.sheen),void 0!==e.sheenColor&&(n.sheenColor=new iC().setHex(e.sheenColor)),void 0!==e.sheenRoughness&&(n.sheenRoughness=e.sheenRoughness),void 0!==e.emissive&&void 0!==n.emissive&&n.emissive.setHex(e.emissive),void 0!==e.specular&&void 0!==n.specular&&n.specular.setHex(e.specular),void 0!==e.specularIntensity&&(n.specularIntensity=e.specularIntensity),void 0!==e.specularColor&&void 0!==n.specularColor&&n.specularColor.setHex(e.specularColor),void 0!==e.shininess&&(n.shininess=e.shininess),void 0!==e.clearcoat&&(n.clearcoat=e.clearcoat),void 0!==e.clearcoatRoughness&&(n.clearcoatRoughness=e.clearcoatRoughness),void 0!==e.iridescence&&(n.iridescence=e.iridescence),void 0!==e.iridescenceIOR&&(n.iridescenceIOR=e.iridescenceIOR),void 0!==e.iridescenceThicknessRange&&(n.iridescenceThicknessRange=e.iridescenceThicknessRange),void 0!==e.transmission&&(n.transmission=e.transmission),void 0!==e.thickness&&(n.thickness=e.thickness),void 0!==e.attenuationDistance&&(n.attenuationDistance=e.attenuationDistance),void 0!==e.attenuationColor&&void 0!==n.attenuationColor&&n.attenuationColor.setHex(e.attenuationColor),void 0!==e.fog&&(n.fog=e.fog),void 0!==e.flatShading&&(n.flatShading=e.flatShading),void 0!==e.blending&&(n.blending=e.blending),void 0!==e.combine&&(n.combine=e.combine),void 0!==e.side&&(n.side=e.side),void 0!==e.shadowSide&&(n.shadowSide=e.shadowSide),void 0!==e.opacity&&(n.opacity=e.opacity),void 0!==e.transparent&&(n.transparent=e.transparent),void 0!==e.alphaTest&&(n.alphaTest=e.alphaTest),void 0!==e.depthTest&&(n.depthTest=e.depthTest),void 0!==e.depthWrite&&(n.depthWrite=e.depthWrite),void 0!==e.colorWrite&&(n.colorWrite=e.colorWrite),void 0!==e.stencilWrite&&(n.stencilWrite=e.stencilWrite),void 0!==e.stencilWriteMask&&(n.stencilWriteMask=e.stencilWriteMask),void 0!==e.stencilFunc&&(n.stencilFunc=e.stencilFunc),void 0!==e.stencilRef&&(n.stencilRef=e.stencilRef),void 0!==e.stencilFuncMask&&(n.stencilFuncMask=e.stencilFuncMask),void 0!==e.stencilFail&&(n.stencilFail=e.stencilFail),void 0!==e.stencilZFail&&(n.stencilZFail=e.stencilZFail),void 0!==e.stencilZPass&&(n.stencilZPass=e.stencilZPass),void 0!==e.wireframe&&(n.wireframe=e.wireframe),void 0!==e.wireframeLinewidth&&(n.wireframeLinewidth=e.wireframeLinewidth),void 0!==e.wireframeLinecap&&(n.wireframeLinecap=e.wireframeLinecap),void 0!==e.wireframeLinejoin&&(n.wireframeLinejoin=e.wireframeLinejoin),void 0!==e.rotation&&(n.rotation=e.rotation),1!==e.linewidth&&(n.linewidth=e.linewidth),void 0!==e.dashSize&&(n.dashSize=e.dashSize),void 0!==e.gapSize&&(n.gapSize=e.gapSize),void 0!==e.scale&&(n.scale=e.scale),void 0!==e.polygonOffset&&(n.polygonOffset=e.polygonOffset),void 0!==e.polygonOffsetFactor&&(n.polygonOffsetFactor=e.polygonOffsetFactor),void 0!==e.polygonOffsetUnits&&(n.polygonOffsetUnits=e.polygonOffsetUnits),void 0!==e.dithering&&(n.dithering=e.dithering),void 0!==e.alphaToCoverage&&(n.alphaToCoverage=e.alphaToCoverage),void 0!==e.premultipliedAlpha&&(n.premultipliedAlpha=e.premultipliedAlpha),void 0!==e.visible&&(n.visible=e.visible),void 0!==e.toneMapped&&(n.toneMapped=e.toneMapped),void 0!==e.userData&&(n.userData=e.userData),void 0!==e.vertexColors&&("number"==typeof e.vertexColors?n.vertexColors=e.vertexColors>0:n.vertexColors=e.vertexColors),void 0!==e.uniforms)for(let r in e.uniforms){let a=e.uniforms[r];switch(n.uniforms[r]={},a.type){case"t":n.uniforms[r].value=i(a.value);break;case"c":n.uniforms[r].value=new iC().setHex(a.value);break;case"v2":n.uniforms[r].value=new ic().fromArray(a.value);break;case"v3":n.uniforms[r].value=new iH().fromArray(a.value);break;case"v4":n.uniforms[r].value=new iO().fromArray(a.value);break;case"m3":n.uniforms[r].value=new id().fromArray(a.value);break;case"m4":n.uniforms[r].value=new nu().fromArray(a.value);break;default:n.uniforms[r].value=a.value}}if(void 0!==e.defines&&(n.defines=e.defines),void 0!==e.vertexShader&&(n.vertexShader=e.vertexShader),void 0!==e.fragmentShader&&(n.fragmentShader=e.fragmentShader),void 0!==e.glslVersion&&(n.glslVersion=e.glslVersion),void 0!==e.extensions)for(let s in e.extensions)n.extensions[s]=e.extensions[s];if(void 0!==e.size&&(n.size=e.size),void 0!==e.sizeAttenuation&&(n.sizeAttenuation=e.sizeAttenuation),void 0!==e.map&&(n.map=i(e.map)),void 0!==e.matcap&&(n.matcap=i(e.matcap)),void 0!==e.alphaMap&&(n.alphaMap=i(e.alphaMap)),void 0!==e.bumpMap&&(n.bumpMap=i(e.bumpMap)),void 0!==e.bumpScale&&(n.bumpScale=e.bumpScale),void 0!==e.normalMap&&(n.normalMap=i(e.normalMap)),void 0!==e.normalMapType&&(n.normalMapType=e.normalMapType),void 0!==e.normalScale){let o=e.normalScale;!1===Array.isArray(o)&&(o=[o,o]),n.normalScale=new ic().fromArray(o)}return void 0!==e.displacementMap&&(n.displacementMap=i(e.displacementMap)),void 0!==e.displacementScale&&(n.displacementScale=e.displacementScale),void 0!==e.displacementBias&&(n.displacementBias=e.displacementBias),void 0!==e.roughnessMap&&(n.roughnessMap=i(e.roughnessMap)),void 0!==e.metalnessMap&&(n.metalnessMap=i(e.metalnessMap)),void 0!==e.emissiveMap&&(n.emissiveMap=i(e.emissiveMap)),void 0!==e.emissiveIntensity&&(n.emissiveIntensity=e.emissiveIntensity),void 0!==e.specularMap&&(n.specularMap=i(e.specularMap)),void 0!==e.specularIntensityMap&&(n.specularIntensityMap=i(e.specularIntensityMap)),void 0!==e.specularColorMap&&(n.specularColorMap=i(e.specularColorMap)),void 0!==e.envMap&&(n.envMap=i(e.envMap)),void 0!==e.envMapIntensity&&(n.envMapIntensity=e.envMapIntensity),void 0!==e.reflectivity&&(n.reflectivity=e.reflectivity),void 0!==e.refractionRatio&&(n.refractionRatio=e.refractionRatio),void 0!==e.lightMap&&(n.lightMap=i(e.lightMap)),void 0!==e.lightMapIntensity&&(n.lightMapIntensity=e.lightMapIntensity),void 0!==e.aoMap&&(n.aoMap=i(e.aoMap)),void 0!==e.aoMapIntensity&&(n.aoMapIntensity=e.aoMapIntensity),void 0!==e.gradientMap&&(n.gradientMap=i(e.gradientMap)),void 0!==e.clearcoatMap&&(n.clearcoatMap=i(e.clearcoatMap)),void 0!==e.clearcoatRoughnessMap&&(n.clearcoatRoughnessMap=i(e.clearcoatRoughnessMap)),void 0!==e.clearcoatNormalMap&&(n.clearcoatNormalMap=i(e.clearcoatNormalMap)),void 0!==e.clearcoatNormalScale&&(n.clearcoatNormalScale=new ic().fromArray(e.clearcoatNormalScale)),void 0!==e.iridescenceMap&&(n.iridescenceMap=i(e.iridescenceMap)),void 0!==e.iridescenceThicknessMap&&(n.iridescenceThicknessMap=i(e.iridescenceThicknessMap)),void 0!==e.transmissionMap&&(n.transmissionMap=i(e.transmissionMap)),void 0!==e.thicknessMap&&(n.thicknessMap=i(e.thicknessMap)),void 0!==e.sheenColorMap&&(n.sheenColorMap=i(e.sheenColorMap)),void 0!==e.sheenRoughnessMap&&(n.sheenRoughnessMap=i(e.sheenRoughnessMap)),n}setTextures(e){return this.textures=e,this}static createMaterialFromType(e){return new({ShadowMaterial:hi,SpriteMaterial:s5,RawShaderMaterial:hn,ShaderMaterial:rR,PointsMaterial:oV,MeshPhysicalMaterial:ha,MeshStandardMaterial:hr,MeshPhongMaterial:hs,MeshToonMaterial:ho,MeshNormalMaterial:hl,MeshLambertMaterial:hh,MeshDepthMaterial:sU,MeshDistanceMaterial:sB,MeshBasicMaterial:nZ,MeshMatcapMaterial:hu,LineDashedMaterial:hc,LineBasicMaterial:oP,Material:nY})[e]}}class ui{static decodeText(e){if("undefined"!=typeof TextDecoder)return new TextDecoder().decode(e);let t="";for(let i=0,n=e.length;i<n;i++)t+=String.fromCharCode(e[i]);try{return decodeURIComponent(escape(t))}catch(r){return t}}static extractUrlBase(e){let t=e.lastIndexOf("/");return -1===t?"./":e.slice(0,t+1)}static resolveURL(e,t){return"string"!=typeof e||""===e?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e))?e:t+e}}class un extends rs{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}clone(){return new this.constructor().copy(this)}toJSON(){let e=super.toJSON(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class ur extends hz{constructor(e){super(e)}load(e,t,i,n){let r=this,a=new hF(r.manager);a.setPath(r.path),a.setRequestHeader(r.requestHeader),a.setWithCredentials(r.withCredentials),a.load(e,function(i){try{t(r.parse(JSON.parse(i)))}catch(a){n?n(a):console.error(a),r.manager.itemError(e)}},i,n)}parse(e){let t={},i={};function n(e,n){if(void 0!==t[n])return t[n];let r=e.interleavedBuffers,a=r[n],s=function(e,t){if(void 0!==i[t])return i[t];let n=e.arrayBuffers,r=n[t],a=new Uint32Array(r).buffer;return i[t]=a,a}(e,a.buffer),o=ig(a.type,s),l=new s3(o,a.stride);return l.uuid=a.uuid,t[n]=l,l}let r=e.isInstancedBufferGeometry?new un:new rs,a=e.data.index;if(void 0!==a){let s=ig(a.type,a.array);r.setIndex(new n$(s,1))}let o=e.data.attributes;for(let l in o){let h=o[l],u;if(h.isInterleavedBufferAttribute){let c=n(e.data,h.data);u=new s4(c,h.itemSize,h.offset,h.normalized)}else{let d=ig(h.type,h.array),p=h.isInstancedBufferAttribute?oT:n$;u=new p(d,h.itemSize,h.normalized)}void 0!==h.name&&(u.name=h.name),void 0!==h.usage&&u.setUsage(h.usage),void 0!==h.updateRange&&(u.updateRange.offset=h.updateRange.offset,u.updateRange.count=h.updateRange.count),r.setAttribute(l,u)}let f=e.data.morphAttributes;if(f)for(let m in f){let g=f[m],v=[];for(let x=0,_=g.length;x<_;x++){let y=g[x],M;if(y.isInterleavedBufferAttribute){let b=n(e.data,y.data);M=new s4(b,y.itemSize,y.offset,y.normalized)}else{let S=ig(y.type,y.array);M=new n$(S,y.itemSize,y.normalized)}void 0!==y.name&&(M.name=y.name),v.push(M)}r.morphAttributes[m]=v}let w=e.data.morphTargetsRelative;w&&(r.morphTargetsRelative=!0);let T=e.data.groups||e.data.drawcalls||e.data.offsets;if(void 0!==T)for(let A=0,E=T.length;A!==E;++A){let C=T[A];r.addGroup(C.start,C.count,C.materialIndex)}let L=e.data.boundingSphere;if(void 0!==L){let R=new iH;void 0!==L.center&&R.fromArray(L.center),r.boundingSphere=new nt(R,L.radius)}return e.name&&(r.name=e.name),e.userData&&(r.userData=e.userData),r}}class ua extends hz{constructor(e){super(e)}load(e,t,i,n){let r=this,a=""===this.path?ui.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||a;let s=new hF(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(e,function(i){let a=null;try{a=JSON.parse(i)}catch(s){void 0!==n&&n(s),console.error("THREE:ObjectLoader: Can't parse "+e+".",s.message);return}let o=a.metadata;if(void 0===o||void 0===o.type||"geometry"===o.type.toLowerCase()){console.error("THREE.ObjectLoader: Can't load "+e);return}r.parse(a,t)},i,n)}async loadAsync(e,t){let i=""===this.path?ui.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||i;let n=new hF(this.manager);n.setPath(this.path),n.setRequestHeader(this.requestHeader),n.setWithCredentials(this.withCredentials);let r=await n.loadAsync(e,t),a=JSON.parse(r),s=a.metadata;if(void 0===s||void 0===s.type||"geometry"===s.type.toLowerCase())throw Error("THREE.ObjectLoader: Can't load "+e);return await this.parseAsync(a)}parse(e,t){let i=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),r=this.parseGeometries(e.geometries,n),a=this.parseImages(e.images,function(){void 0!==t&&t(l)}),s=this.parseTextures(e.textures,a),o=this.parseMaterials(e.materials,s),l=this.parseObject(e.object,r,o,s,i),h=this.parseSkeletons(e.skeletons,l);if(this.bindSkeletons(l,h),void 0!==t){let u=!1;for(let c in a)if(a[c].data instanceof HTMLImageElement){u=!0;break}!1===u&&t(l)}return l}async parseAsync(e){let t=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),n=this.parseGeometries(e.geometries,i),r=await this.parseImagesAsync(e.images),a=this.parseTextures(e.textures,r),s=this.parseMaterials(e.materials,a),o=this.parseObject(e.object,n,s,a,t),l=this.parseSkeletons(e.skeletons,o);return this.bindSkeletons(o,l),o}parseShapes(e){let t={};if(void 0!==e)for(let i=0,n=e.length;i<n;i++){let r=new lS().fromJSON(e[i]);t[r.uuid]=r}return t}parseSkeletons(e,t){let i={},n={};if(t.traverse(function(e){e.isBone&&(n[e.uuid]=e)}),void 0!==e)for(let r=0,a=e.length;r<a;r++){let s=new ow().fromJSON(e[r],n);i[s.uuid]=s}return i}parseGeometries(e,t){let i={};if(void 0!==e){let n=new ur;for(let r=0,a=e.length;r<a;r++){let s,o=e[r];switch(o.type){case"BufferGeometry":case"InstancedBufferGeometry":s=n.parse(o);break;default:o.type in ht?s=ht[o.type].fromJSON(o,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${o.type}"`)}s.uuid=o.uuid,void 0!==o.name&&(s.name=o.name),!0===s.isBufferGeometry&&void 0!==o.userData&&(s.userData=o.userData),i[o.uuid]=s}}return i}parseMaterials(e,t){let i={},n={};if(void 0!==e){let r=new ut;r.setTextures(t);for(let a=0,s=e.length;a<s;a++){let o=e[a];void 0===i[o.uuid]&&(i[o.uuid]=r.parse(o)),n[o.uuid]=i[o.uuid]}}return n}parseAnimations(e){let t={};if(void 0!==e)for(let i=0;i<e.length;i++){let n=e[i],r=hP.parse(n);t[r.uuid]=r}return t}parseImages(e,t){let i=this,n={},r;function a(e){if("string"==typeof e){var t;let n=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(e)?e:i.resourcePath+e;return i.manager.itemStart(n),r.load(n,function(){i.manager.itemEnd(n)},void 0,function(){i.manager.itemError(n),i.manager.itemEnd(n)})}return e.data?{data:ig(e.type,e.data),width:e.width,height:e.height}:null}if(void 0!==e&&e.length>0){let s=new hN(t);(r=new hV(s)).setCrossOrigin(this.crossOrigin);for(let o=0,l=e.length;o<l;o++){let h=e[o],u=h.url;if(Array.isArray(u)){let c=[];for(let d=0,p=u.length;d<p;d++){let f=u[d],m=a(f);null!==m&&(m instanceof HTMLImageElement?c.push(m):c.push(new oM(m.data,m.width,m.height)))}n[h.uuid]=new iP(c)}else{let g=a(h.url);n[h.uuid]=new iP(g)}}}return n}async parseImagesAsync(e){let t=this,i={},n;async function r(e){if("string"==typeof e){let i=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(e)?e:t.resourcePath+e;return await n.loadAsync(i)}return e.data?{data:ig(e.type,e.data),width:e.width,height:e.height}:null}if(void 0!==e&&e.length>0){(n=new hV(this.manager)).setCrossOrigin(this.crossOrigin);for(let a=0,s=e.length;a<s;a++){let o=e[a],l=o.url;if(Array.isArray(l)){let h=[];for(let u=0,c=l.length;u<c;u++){let d=l[u],p=await r(d);null!==p&&(p instanceof HTMLImageElement?h.push(p):h.push(new oM(p.data,p.width,p.height)))}i[o.uuid]=new iP(h)}else{let f=await r(o.url);i[o.uuid]=new iP(f)}}}return i}parseTextures(e,t){function i(e,t){return"number"==typeof e?e:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",e),t[e])}let n={};if(void 0!==e)for(let r=0,a=e.length;r<a;r++){let s=e[r];void 0===s.image&&console.warn('THREE.ObjectLoader: No "image" specified for',s.uuid),void 0===t[s.image]&&console.warn("THREE.ObjectLoader: Undefined image",s.image);let o=t[s.image],l=o.data,h;Array.isArray(l)?(h=new rN,6===l.length&&(h.needsUpdate=!0)):(h=l&&l.data?new oM:new iN,l&&(h.needsUpdate=!0)),h.source=o,h.uuid=s.uuid,void 0!==s.name&&(h.name=s.name),void 0!==s.mapping&&(h.mapping=i(s.mapping,us)),void 0!==s.offset&&h.offset.fromArray(s.offset),void 0!==s.repeat&&h.repeat.fromArray(s.repeat),void 0!==s.center&&h.center.fromArray(s.center),void 0!==s.rotation&&(h.rotation=s.rotation),void 0!==s.wrap&&(h.wrapS=i(s.wrap[0],uo),h.wrapT=i(s.wrap[1],uo)),void 0!==s.format&&(h.format=s.format),void 0!==s.type&&(h.type=s.type),void 0!==s.encoding&&(h.encoding=s.encoding),void 0!==s.minFilter&&(h.minFilter=i(s.minFilter,ul)),void 0!==s.magFilter&&(h.magFilter=i(s.magFilter,ul)),void 0!==s.anisotropy&&(h.anisotropy=s.anisotropy),void 0!==s.flipY&&(h.flipY=s.flipY),void 0!==s.premultiplyAlpha&&(h.premultiplyAlpha=s.premultiplyAlpha),void 0!==s.unpackAlignment&&(h.unpackAlignment=s.unpackAlignment),void 0!==s.userData&&(h.userData=s.userData),n[s.uuid]=h}return n}parseObject(e,t,i,n,r){let a;function s(e){return void 0===t[e]&&console.warn("THREE.ObjectLoader: Undefined geometry",e),t[e]}function o(e){if(void 0!==e){if(Array.isArray(e)){let t=[];for(let n=0,r=e.length;n<r;n++){let a=e[n];void 0===i[a]&&console.warn("THREE.ObjectLoader: Undefined material",a),t.push(i[a])}return t}return void 0===i[e]&&console.warn("THREE.ObjectLoader: Undefined material",e),i[e]}}function l(e){return void 0===n[e]&&console.warn("THREE.ObjectLoader: Undefined texture",e),n[e]}let h,u;switch(e.type){case"Scene":a=new s1,void 0!==e.background&&(Number.isInteger(e.background)?a.background=new iC(e.background):a.background=l(e.background)),void 0!==e.environment&&(a.environment=l(e.environment)),void 0!==e.fog&&("Fog"===e.fog.type?a.fog=new s0(e.fog.color,e.fog.near,e.fog.far):"FogExp2"===e.fog.type&&(a.fog=new sQ(e.fog.color,e.fog.density)));break;case"PerspectiveCamera":a=new rI(e.fov,e.aspect,e.near,e.far),void 0!==e.focus&&(a.focus=e.focus),void 0!==e.zoom&&(a.zoom=e.zoom),void 0!==e.filmGauge&&(a.filmGauge=e.filmGauge),void 0!==e.filmOffset&&(a.filmOffset=e.filmOffset),void 0!==e.view&&(a.view=Object.assign({},e.view));break;case"OrthographicCamera":a=new r1(e.left,e.right,e.top,e.bottom,e.near,e.far),void 0!==e.zoom&&(a.zoom=e.zoom),void 0!==e.view&&(a.view=Object.assign({},e.view));break;case"AmbientLight":a=new h7(e.color,e.intensity);break;case"DirectionalLight":a=new h6(e.color,e.intensity);break;case"PointLight":a=new h4(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":a=new h8(e.color,e.intensity,e.width,e.height);break;case"SpotLight":a=new hQ(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":a=new hX(e.color,e.groundColor,e.intensity);break;case"LightProbe":a=new ue().fromJSON(e);break;case"SkinnedMesh":h=s(e.geometry),u=o(e.material),a=new o_(h,u),void 0!==e.bindMode&&(a.bindMode=e.bindMode),void 0!==e.bindMatrix&&a.bindMatrix.fromArray(e.bindMatrix),void 0!==e.skeleton&&(a.skeleton=e.skeleton);break;case"Mesh":h=s(e.geometry),u=o(e.material),a=new rw(h,u);break;case"InstancedMesh":h=s(e.geometry),u=o(e.material);let c=e.count,d=e.instanceMatrix,p=e.instanceColor;(a=new oR(h,u,c)).instanceMatrix=new oT(new Float32Array(d.array),16),void 0!==p&&(a.instanceColor=new oT(new Float32Array(p.array),p.itemSize));break;case"LOD":a=new op;break;case"Line":a=new oU(s(e.geometry),o(e.material));break;case"LineLoop":a=new oG(s(e.geometry),o(e.material));break;case"LineSegments":a=new ok(s(e.geometry),o(e.material));break;case"PointCloud":case"Points":a=new oX(s(e.geometry),o(e.material));break;case"Sprite":a=new oh(o(e.material));break;case"Group":a=new sW;break;case"Bone":a=new oy;break;default:a=new nO}if(a.uuid=e.uuid,void 0!==e.name&&(a.name=e.name),void 0!==e.matrix?(a.matrix.fromArray(e.matrix),void 0!==e.matrixAutoUpdate&&(a.matrixAutoUpdate=e.matrixAutoUpdate),a.matrixAutoUpdate&&a.matrix.decompose(a.position,a.quaternion,a.scale)):(void 0!==e.position&&a.position.fromArray(e.position),void 0!==e.rotation&&a.rotation.fromArray(e.rotation),void 0!==e.quaternion&&a.quaternion.fromArray(e.quaternion),void 0!==e.scale&&a.scale.fromArray(e.scale)),void 0!==e.castShadow&&(a.castShadow=e.castShadow),void 0!==e.receiveShadow&&(a.receiveShadow=e.receiveShadow),e.shadow&&(void 0!==e.shadow.bias&&(a.shadow.bias=e.shadow.bias),void 0!==e.shadow.normalBias&&(a.shadow.normalBias=e.shadow.normalBias),void 0!==e.shadow.radius&&(a.shadow.radius=e.shadow.radius),void 0!==e.shadow.mapSize&&a.shadow.mapSize.fromArray(e.shadow.mapSize),void 0!==e.shadow.camera&&(a.shadow.camera=this.parseObject(e.shadow.camera))),void 0!==e.visible&&(a.visible=e.visible),void 0!==e.frustumCulled&&(a.frustumCulled=e.frustumCulled),void 0!==e.renderOrder&&(a.renderOrder=e.renderOrder),void 0!==e.userData&&(a.userData=e.userData),void 0!==e.layers&&(a.layers.mask=e.layers),void 0!==e.children){let f=e.children;for(let m=0;m<f.length;m++)a.add(this.parseObject(f[m],t,i,n,r))}if(void 0!==e.animations){let g=e.animations;for(let v=0;v<g.length;v++){let x=g[v];a.animations.push(r[x])}}if("LOD"===e.type){void 0!==e.autoUpdate&&(a.autoUpdate=e.autoUpdate);let _=e.levels;for(let y=0;y<_.length;y++){let M=_[y],b=a.getObjectByProperty("uuid",M.object);void 0!==b&&a.addLevel(b,M.distance)}}return a}bindSkeletons(e,t){0!==Object.keys(t).length&&e.traverse(function(e){if(!0===e.isSkinnedMesh&&void 0!==e.skeleton){let i=t[e.skeleton];void 0===i?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",e.skeleton):e.bind(i,e.bindMatrix)}})}}let us={UVMapping:ei,CubeReflectionMapping:en,CubeRefractionMapping:er,EquirectangularReflectionMapping:ea,EquirectangularRefractionMapping:es,CubeUVReflectionMapping:eo},uo={RepeatWrapping:el,ClampToEdgeWrapping:eh,MirroredRepeatWrapping:eu},ul={NearestFilter:ec,NearestMipmapNearestFilter:ed,NearestMipmapLinearFilter:ef,LinearFilter:eg,LinearMipmapNearestFilter:ev,LinearMipmapLinearFilter:e_};class uh extends hz{constructor(e){super(e),this.isImageBitmapLoader=!0,"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,i,n){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);let r=this,a=hD.get(e);if(void 0!==a)return r.manager.itemStart(e),setTimeout(function(){t&&t(a),r.manager.itemEnd(e)},0),a;let s={};s.credentials="anonymous"===this.crossOrigin?"same-origin":"include",s.headers=this.requestHeader,fetch(e,s).then(function(e){return e.blob()}).then(function(e){return createImageBitmap(e,Object.assign(r.options,{colorSpaceConversion:"none"}))}).then(function(i){hD.add(e,i),t&&t(i),r.manager.itemEnd(e)}).catch(function(t){n&&n(t),r.manager.itemError(e),r.manager.itemEnd(e)}),r.manager.itemStart(e)}}let uu,uc={getContext:function(){return void 0===uu&&(uu=new(window.AudioContext||window.webkitAudioContext)),uu},setContext:function(e){uu=e}};class ud extends hz{constructor(e){super(e)}load(e,t,i,n){let r=this,a=new hF(this.manager);a.setResponseType("arraybuffer"),a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(i){try{let a=i.slice(0),s=uc.getContext();s.decodeAudioData(a,function(e){t(e)})}catch(o){n?n(o):console.error(o),r.manager.itemError(e)}},i,n)}}class up extends ue{constructor(e,t,i=1){super(void 0,i),this.isHemisphereLightProbe=!0;let n=new iC().set(e),r=new iC().set(t),a=new iH(n.r,n.g,n.b),s=new iH(r.r,r.g,r.b),o=Math.sqrt(Math.PI);this.sh.coefficients[0].copy(a).add(s).multiplyScalar(o),this.sh.coefficients[1].copy(a).sub(s).multiplyScalar(o*Math.sqrt(.75))}}class uf extends ue{constructor(e,t=1){super(void 0,t),this.isAmbientLightProbe=!0;let i=new iC().set(e);this.sh.coefficients[0].set(i.r,i.g,i.b).multiplyScalar(2*Math.sqrt(Math.PI))}}let um=new nu,ug=new nu,uv=new nu;class ux{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new rI,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new rI,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){let t=this._cache,i=t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep;if(i){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,uv.copy(e.projectionMatrix);let n=t.eyeSep/2,r=n*t.near/t.focus,a=t.near*Math.tan(t6*t.fov*.5)/t.zoom,s,o;ug.elements[12]=-n,um.elements[12]=n,s=-a*t.aspect+r,o=a*t.aspect+r,uv.elements[0]=2*t.near/(o-s),uv.elements[8]=(o+s)/(o-s),this.cameraL.projectionMatrix.copy(uv),s=-a*t.aspect-r,o=a*t.aspect-r,uv.elements[0]=2*t.near/(o-s),uv.elements[8]=(o+s)/(o-s),this.cameraR.projectionMatrix.copy(uv)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(ug),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(um)}}class u_{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=uy(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){let t=uy();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function uy(){return("undefined"==typeof performance?Date:performance).now()}let uM=new iH,ub=new iV,uS=new iH,uw=new iH;class uT extends nO{constructor(){super(),this.type="AudioListener",this.context=uc.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new u_}getInput(){return this.gain}removeFilter(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);let t=this.context.listener,i=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(uM,ub,uS),uw.set(0,0,-1).applyQuaternion(ub),t.positionX){let n=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(uM.x,n),t.positionY.linearRampToValueAtTime(uM.y,n),t.positionZ.linearRampToValueAtTime(uM.z,n),t.forwardX.linearRampToValueAtTime(uw.x,n),t.forwardY.linearRampToValueAtTime(uw.y,n),t.forwardZ.linearRampToValueAtTime(uw.z,n),t.upX.linearRampToValueAtTime(i.x,n),t.upY.linearRampToValueAtTime(i.y,n),t.upZ.linearRampToValueAtTime(i.z,n)}else t.setPosition(uM.x,uM.y,uM.z),t.setOrientation(uw.x,uw.y,uw.z,i.x,i.y,i.z)}}class uA extends nO{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(!0===this.isPlaying){console.warn("THREE.Audio: Audio is already playing.");return}if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;let t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),!0===this._connected?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,!0===this.isPlaying&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}let uE=new iH,uC=new iV,uL=new iH,uR=new iH;class uP extends uA{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,i){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=i,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),!0===this.hasPlaybackControl&&!1===this.isPlaying)return;this.matrixWorld.decompose(uE,uC,uL),uR.set(0,0,1).applyQuaternion(uC);let t=this.panner;if(t.positionX){let i=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(uE.x,i),t.positionY.linearRampToValueAtTime(uE.y,i),t.positionZ.linearRampToValueAtTime(uE.z,i),t.orientationX.linearRampToValueAtTime(uR.x,i),t.orientationY.linearRampToValueAtTime(uR.y,i),t.orientationZ.linearRampToValueAtTime(uR.z,i)}else t.setPosition(uE.x,uE.y,uE.z),t.setOrientation(uR.x,uR.y,uR.z)}}class uI{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0,t=this.getFrequencyData();for(let i=0;i<t.length;i++)e+=t[i];return e/t.length}}class uD{constructor(e,t,i){this.binding=e,this.valueSize=i;let n,r,a;switch(t){case"quaternion":n=this._slerp,r=this._slerpAdditive,a=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*i),this._workIndex=5;break;case"string":case"bool":n=this._select,r=this._select,a=this._setAdditiveIdentityOther,this.buffer=Array(5*i);break;default:n=this._lerp,r=this._lerpAdditive,a=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*i)}this._mixBufferRegion=n,this._mixBufferRegionAdditive=r,this._setIdentity=a,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){let i=this.buffer,n=this.valueSize,r=e*n+n,a=this.cumulativeWeight;if(0===a){for(let s=0;s!==n;++s)i[r+s]=i[s];a=t}else{a+=t;let o=t/a;this._mixBufferRegion(i,r,0,o,n)}this.cumulativeWeight=a}accumulateAdditive(e){let t=this.buffer,i=this.valueSize,n=i*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(t,n,0,e,i),this.cumulativeWeightAdditive+=e}apply(e){let t=this.valueSize,i=this.buffer,n=e*t+t,r=this.cumulativeWeight,a=this.cumulativeWeightAdditive,s=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){let o=t*this._origIndex;this._mixBufferRegion(i,n,o,1-r,t)}a>0&&this._mixBufferRegionAdditive(i,n,this._addIndex*t,1,t);for(let l=t,h=t+t;l!==h;++l)if(i[l]!==i[l+t]){s.setValue(i,n);break}}saveOriginalState(){let e=this.binding,t=this.buffer,i=this.valueSize,n=i*this._origIndex;e.getValue(t,n);for(let r=i;r!==n;++r)t[r]=t[n+r%i];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){let e=3*this.valueSize;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){let e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let i=e;i<t;i++)this.buffer[i]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){let e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let i=0;i<this.valueSize;i++)this.buffer[t+i]=this.buffer[e+i]}_select(e,t,i,n,r){if(n>=.5)for(let a=0;a!==r;++a)e[t+a]=e[i+a]}_slerp(e,t,i,n){iV.slerpFlat(e,t,e,t,e,i,n)}_slerpAdditive(e,t,i,n,r){let a=this._workIndex*r;iV.multiplyQuaternionsFlat(e,a,e,t,e,i),iV.slerpFlat(e,t,e,t,e,a,n)}_lerp(e,t,i,n,r){let a=1-n;for(let s=0;s!==r;++s){let o=t+s;e[o]=e[o]*a+e[i+s]*n}}_lerpAdditive(e,t,i,n,r){for(let a=0;a!==r;++a){let s=t+a;e[s]=e[s]+e[i+a]*n}}}let uN="\\[\\]\\.:\\/",uO=RegExp("["+uN+"]","g"),uz="[^"+uN+"]",uU="[^"+uN.replace("\\.","")+"]",uB=/((?:WC+[\/:])*)/.source.replace("WC",uz),uF=/(WCOD+)?/.source.replace("WCOD",uU),uk=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",uz),uG=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",uz),uV=RegExp("^"+uB+uF+uk+uG+"$"),uH=["material","materials","bones","map"];class uW{constructor(e,t,i){this.path=t,this.parsedPath=i||uW.parseTrackName(t),this.node=uW.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,i){return e&&e.isAnimationObjectGroup?new uW.Composite(e,t,i):new uW(e,t,i)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(uO,"")}static parseTrackName(e){let t=uV.exec(e);if(null===t)throw Error("PropertyBinding: Cannot parse trackName: "+e);let i={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},n=i.nodeName&&i.nodeName.lastIndexOf(".");if(void 0!==n&&-1!==n){let r=i.nodeName.substring(n+1);-1!==uH.indexOf(r)&&(i.nodeName=i.nodeName.substring(0,n),i.objectName=r)}if(null===i.propertyName||0===i.propertyName.length)throw Error("PropertyBinding: can not parse propertyName from trackName: "+e);return i}static findNode(e,t){if(void 0===t||""===t||"."===t||-1===t||t===e.name||t===e.uuid)return e;if(e.skeleton){let i=e.skeleton.getBoneByName(t);if(void 0!==i)return i}if(e.children){let n=function(e){for(let i=0;i<e.length;i++){let r=e[i];if(r.name===t||r.uuid===t)return r;let a=n(r.children);if(a)return a}return null},r=n(e.children);if(r)return r}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){let i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)e[t++]=i[n]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){let i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)i[n]=e[t++]}_setValue_array_setNeedsUpdate(e,t){let i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)i[n]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){let i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)i[n]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node,t=this.parsedPath,i=t.objectName,n=t.propertyName,r=t.propertyIndex;if(e||(e=uW.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(i){let a=t.objectIndex;switch(i){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let s=0;s<e.length;s++)if(e[s].name===a){a=s;break}break;case"map":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(void 0===e[i]){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[i]}if(void 0!==a){if(void 0===e[a]){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[a]}}let o=e[n];if(void 0===o){let l=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+l+"."+n+" but it wasn't found.",e);return}let h=this.Versioning.None;this.targetObject=e,void 0!==e.needsUpdate?h=this.Versioning.NeedsUpdate:void 0!==e.matrixWorldNeedsUpdate&&(h=this.Versioning.MatrixWorldNeedsUpdate);let u=this.BindingType.Direct;if(void 0!==r){if("morphTargetInfluences"===n){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}void 0!==e.morphTargetDictionary[r]&&(r=e.morphTargetDictionary[r])}u=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=r}else void 0!==o.fromArray&&void 0!==o.toArray?(u=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(u=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=n;this.getValue=this.GetterByBindingType[u],this.setValue=this.SetterByBindingTypeAndVersioning[u][h]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}uW.Composite=class{constructor(e,t,i){let n=i||uW.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,n)}getValue(e,t){this.bind();let i=this._targetGroup.nCachedObjects_,n=this._bindings[i];void 0!==n&&n.getValue(e,t)}setValue(e,t){let i=this._bindings;for(let n=this._targetGroup.nCachedObjects_,r=i.length;n!==r;++n)i[n].setValue(e,t)}bind(){let e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,i=e.length;t!==i;++t)e[t].bind()}unbind(){let e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,i=e.length;t!==i;++t)e[t].unbind()}},uW.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},uW.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},uW.prototype.GetterByBindingType=[uW.prototype._getValue_direct,uW.prototype._getValue_array,uW.prototype._getValue_arrayElement,uW.prototype._getValue_toArray,],uW.prototype.SetterByBindingTypeAndVersioning=[[uW.prototype._setValue_direct,uW.prototype._setValue_direct_setNeedsUpdate,uW.prototype._setValue_direct_setMatrixWorldNeedsUpdate,],[uW.prototype._setValue_array,uW.prototype._setValue_array_setNeedsUpdate,uW.prototype._setValue_array_setMatrixWorldNeedsUpdate,],[uW.prototype._setValue_arrayElement,uW.prototype._setValue_arrayElement_setNeedsUpdate,uW.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,],[uW.prototype._setValue_fromArray,uW.prototype._setValue_fromArray_setNeedsUpdate,uW.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,]];class uj{constructor(){this.isAnimationObjectGroup=!0,this.uuid=t8(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;let e={};this._indicesByUUID=e;for(let t=0,i=arguments.length;t!==i;++t)e[arguments[t].uuid]=t;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={},this.stats={objects:{get total(){return this._objects.length},get inUse(){return this.total-this.nCachedObjects_}},get bindingsPerObject(){return this._bindings.length}}}add(){let e=this._objects,t=this._indicesByUUID,i=this._paths,n=this._parsedPaths,r=this._bindings,a=r.length,s,o=e.length,l=this.nCachedObjects_;for(let h=0,u=arguments.length;h!==u;++h){let c=arguments[h],d=c.uuid,p=t[d];if(void 0===p){p=o++,t[d]=p,e.push(c);for(let f=0;f!==a;++f)r[f].push(new uW(c,i[f],n[f]))}else if(p<l){s=e[p];let m=--l,g=e[m];t[g.uuid]=p,e[p]=g,t[d]=m,e[m]=c;for(let v=0;v!==a;++v){let x=r[v],_=x[m],y=x[p];x[p]=_,void 0===y&&(y=new uW(c,i[v],n[v])),x[m]=y}}else e[p]!==s&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=l}remove(){let e=this._objects,t=this._indicesByUUID,i=this._bindings,n=i.length,r=this.nCachedObjects_;for(let a=0,s=arguments.length;a!==s;++a){let o=arguments[a],l=o.uuid,h=t[l];if(void 0!==h&&h>=r){let u=r++,c=e[u];t[c.uuid]=h,e[h]=c,t[l]=u,e[u]=o;for(let d=0;d!==n;++d){let p=i[d],f=p[u],m=p[h];p[h]=f,p[u]=m}}}this.nCachedObjects_=r}uncache(){let e=this._objects,t=this._indicesByUUID,i=this._bindings,n=i.length,r=this.nCachedObjects_,a=e.length;for(let s=0,o=arguments.length;s!==o;++s){let l=arguments[s],h=l.uuid,u=t[h];if(void 0!==u){if(delete t[h],u<r){let c=--r,d=e[c],p=--a,f=e[p];t[d.uuid]=u,e[u]=d,t[f.uuid]=c,e[c]=f,e.pop();for(let m=0;m!==n;++m){let g=i[m],v=g[c],x=g[p];g[u]=v,g[c]=x,g.pop()}}else{let _=--a,y=e[_];_>0&&(t[y.uuid]=u),e[u]=y,e.pop();for(let M=0;M!==n;++M){let b=i[M];b[u]=b[_],b.pop()}}}}this.nCachedObjects_=r}subscribe_(e,t){let i=this._bindingsIndicesByPath,n=i[e],r=this._bindings;if(void 0!==n)return r[n];let a=this._paths,s=this._parsedPaths,o=this._objects,l=o.length,h=this.nCachedObjects_,u=Array(l);n=r.length,i[e]=n,a.push(e),s.push(t),r.push(u);for(let c=h,d=o.length;c!==d;++c){let p=o[c];u[c]=new uW(p,e,t)}return u}unsubscribe_(e){let t=this._bindingsIndicesByPath,i=t[e];if(void 0!==i){let n=this._paths,r=this._parsedPaths,a=this._bindings,s=a.length-1,o=a[s],l=e[s];t[l]=i,a[i]=o,a.pop(),r[i]=r[s],r.pop(),n[i]=n[s],n.pop()}}}class uq{constructor(e,t,i=null,n=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=i,this.blendMode=n;let r=t.tracks,a=r.length,s=Array(a),o={endingStart:td,endingEnd:td};for(let l=0;l!==a;++l){let h=r[l].createInterpolant(null);s[l]=h,h.settings=o}this._interpolantSettings=o,this._interpolants=s,this._propertyBindings=Array(a),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=to,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,i){if(e.fadeOut(t),this.fadeIn(t),i){let n=this._clip.duration,r=e._clip.duration;e.warp(1,r/n,t),this.warp(n/r,1,t)}return this}crossFadeTo(e,t,i){return e.crossFadeFrom(this,t,i)}stopFading(){let e=this._weightInterpolant;return null!==e&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,i){let n=this._mixer,r=n.time,a=this.timeScale,s=this._timeScaleInterpolant;null===s&&(s=n._lendControlInterpolant(),this._timeScaleInterpolant=s);let o=s.parameterPositions,l=s.sampleValues;return o[0]=r,o[1]=r+i,l[0]=e/a,l[1]=t/a,this}stopWarping(){let e=this._timeScaleInterpolant;return null!==e&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,i,n){if(!this.enabled){this._updateWeight(e);return}let r=this._startTime;if(null!==r){let a=(e-r)*i;a<0||0===i?t=0:(this._startTime=null,t=i*a)}t*=this._updateTimeScale(e);let s=this._updateTime(t),o=this._updateWeight(e);if(o>0){let l=this._interpolants,h=this._propertyBindings;if(this.blendMode===tg)for(let u=0,c=l.length;u!==c;++u)l[u].evaluate(s),h[u].accumulateAdditive(o);else for(let d=0,p=l.length;d!==p;++d)l[d].evaluate(s),h[d].accumulate(n,o)}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;let i=this._weightInterpolant;if(null!==i){let n=i.evaluate(e)[0];t*=n,e>i.parameterPositions[1]&&(this.stopFading(),0===n&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;let i=this._timeScaleInterpolant;if(null!==i){let n=i.evaluate(e)[0];t*=n,e>i.parameterPositions[1]&&(this.stopWarping(),0===t?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){let t=this._clip.duration,i=this.loop,n=this.time+e,r=this._loopCount,a=i===tl;if(0===e)return -1===r?n:a&&(1&r)==1?t-n:n;if(i===ts){-1===r&&(this._loopCount=0,this._setEndings(!0,!0,!1));handle_stop:{if(n>=t)n=t;else if(n<0)n=0;else{this.time=n;break handle_stop}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=n,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(-1===r&&(e>=0?(r=0,this._setEndings(!0,0===this.repetitions,a)):this._setEndings(0===this.repetitions,!0,a)),n>=t||n<0){let s=Math.floor(n/t);n-=t*s,r+=Math.abs(s);let o=this.repetitions-r;if(o<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,n=e>0?t:0,this.time=n,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(1===o){let l=e<0;this._setEndings(l,!l,a)}else this._setEndings(!1,!1,a);this._loopCount=r,this.time=n,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:s})}}else this.time=n;if(a&&(1&r)==1)return t-n}return n}_setEndings(e,t,i){let n=this._interpolantSettings;i?(n.endingStart=tp,n.endingEnd=tp):(e?n.endingStart=this.zeroSlopeAtStart?tp:td:n.endingStart=tf,t?n.endingEnd=this.zeroSlopeAtEnd?tp:td:n.endingEnd=tf)}_scheduleFading(e,t,i){let n=this._mixer,r=n.time,a=this._weightInterpolant;null===a&&(a=n._lendControlInterpolant(),this._weightInterpolant=a);let s=a.parameterPositions,o=a.sampleValues;return s[0]=r,o[0]=t,s[1]=r+e,o[1]=i,this}}let uX=new Float32Array(1);class uY extends t2{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){let i=e._localRoot||this._root,n=e._clip.tracks,r=n.length,a=e._propertyBindings,s=e._interpolants,o=i.uuid,l=this._bindingsByRootAndName,h=l[o];void 0===h&&(h={},l[o]=h);for(let u=0;u!==r;++u){let c=n[u],d=c.name,p=h[d];if(void 0!==p)++p.referenceCount,a[u]=p;else{if(void 0!==(p=a[u])){null===p._cacheIndex&&(++p.referenceCount,this._addInactiveBinding(p,o,d));continue}let f=t&&t._propertyBindings[u].binding.parsedPath;p=new uD(uW.create(i,d,f),c.ValueTypeName,c.getValueSize()),++p.referenceCount,this._addInactiveBinding(p,o,d),a[u]=p}s[u].resultBuffer=p.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(null===e._cacheIndex){let t=(e._localRoot||this._root).uuid,i=e._clip.uuid,n=this._actionsByClip[i];this._bindAction(e,n&&n.knownActions[0]),this._addInactiveAction(e,i,t)}let r=e._propertyBindings;for(let a=0,s=r.length;a!==s;++a){let o=r[a];0==o.useCount++&&(this._lendBinding(o),o.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){let t=e._propertyBindings;for(let i=0,n=t.length;i!==n;++i){let r=t[i];0==--r.useCount&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0,this.stats={actions:{get total(){return this._actions.length},get inUse(){return this._nActiveActions}},bindings:{get total(){return this._bindings.length},get inUse(){return this._nActiveBindings}},controlInterpolants:{get total(){return this._controlInterpolants.length},get inUse(){return this._nActiveControlInterpolants}}}}_isActiveAction(e){let t=e._cacheIndex;return null!==t&&t<this._nActiveActions}_addInactiveAction(e,t,i){let n=this._actions,r=this._actionsByClip,a=r[t];if(void 0===a)a={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,r[t]=a;else{let s=a.knownActions;e._byClipCacheIndex=s.length,s.push(e)}e._cacheIndex=n.length,n.push(e),a.actionByRoot[i]=e}_removeInactiveAction(e){let t=this._actions,i=t[t.length-1],n=e._cacheIndex;i._cacheIndex=n,t[n]=i,t.pop(),e._cacheIndex=null;let r=e._clip.uuid,a=this._actionsByClip,s=a[r],o=s.knownActions,l=o[o.length-1],h=e._byClipCacheIndex;l._byClipCacheIndex=h,o[h]=l,o.pop(),e._byClipCacheIndex=null;let u=s.actionByRoot,c=(e._localRoot||this._root).uuid;delete u[c],0===o.length&&delete a[r],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){let t=e._propertyBindings;for(let i=0,n=t.length;i!==n;++i){let r=t[i];0==--r.referenceCount&&this._removeInactiveBinding(r)}}_lendAction(e){let t=this._actions,i=e._cacheIndex,n=this._nActiveActions++,r=t[n];e._cacheIndex=n,t[n]=e,r._cacheIndex=i,t[i]=r}_takeBackAction(e){let t=this._actions,i=e._cacheIndex,n=--this._nActiveActions,r=t[n];e._cacheIndex=n,t[n]=e,r._cacheIndex=i,t[i]=r}_addInactiveBinding(e,t,i){let n=this._bindingsByRootAndName,r=this._bindings,a=n[t];void 0===a&&(a={},n[t]=a),a[i]=e,e._cacheIndex=r.length,r.push(e)}_removeInactiveBinding(e){let t=this._bindings,i=e.binding,n=i.rootNode.uuid,r=i.path,a=this._bindingsByRootAndName,s=a[n],o=t[t.length-1],l=e._cacheIndex;o._cacheIndex=l,t[l]=o,t.pop(),delete s[r],0===Object.keys(s).length&&delete a[n]}_lendBinding(e){let t=this._bindings,i=e._cacheIndex,n=this._nActiveBindings++,r=t[n];e._cacheIndex=n,t[n]=e,r._cacheIndex=i,t[i]=r}_takeBackBinding(e){let t=this._bindings,i=e._cacheIndex,n=--this._nActiveBindings,r=t[n];e._cacheIndex=n,t[n]=e,r._cacheIndex=i,t[i]=r}_lendControlInterpolant(){let e=this._controlInterpolants,t=this._nActiveControlInterpolants++,i=e[t];return void 0===i&&((i=new hM(new Float32Array(2),new Float32Array(2),1,uX)).__cacheIndex=t,e[t]=i),i}_takeBackControlInterpolant(e){let t=this._controlInterpolants,i=e.__cacheIndex,n=--this._nActiveControlInterpolants,r=t[n];e.__cacheIndex=n,t[n]=e,r.__cacheIndex=i,t[i]=r}clipAction(e,t,i){let n=t||this._root,r=n.uuid,a="string"==typeof e?hP.findByName(n,e):e,s=null!==a?a.uuid:e,o=this._actionsByClip[s],l=null;if(void 0===i&&(i=null!==a?a.blendMode:tm),void 0!==o){let h=o.actionByRoot[r];if(void 0!==h&&h.blendMode===i)return h;l=o.knownActions[0],null===a&&(a=l._clip)}if(null===a)return null;let u=new uq(this,a,t,i);return this._bindAction(u,l),this._addInactiveAction(u,s,r),u}existingAction(e,t){let i=t||this._root,n=i.uuid,r="string"==typeof e?hP.findByName(i,e):e,a=r?r.uuid:e,s=this._actionsByClip[a];return void 0!==s&&s.actionByRoot[n]||null}stopAllAction(){let e=this._actions,t=this._nActiveActions;for(let i=t-1;i>=0;--i)e[i].stop();return this}update(e){e*=this.timeScale;let t=this._actions,i=this._nActiveActions,n=this.time+=e,r=Math.sign(e),a=this._accuIndex^=1;for(let s=0;s!==i;++s){let o=t[s];o._update(n,e,r,a)}let l=this._bindings,h=this._nActiveBindings;for(let u=0;u!==h;++u)l[u].apply(a);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){let t=this._actions,i=e.uuid,n=this._actionsByClip,r=n[i];if(void 0!==r){let a=r.knownActions;for(let s=0,o=a.length;s!==o;++s){let l=a[s];this._deactivateAction(l);let h=l._cacheIndex,u=t[t.length-1];l._cacheIndex=null,l._byClipCacheIndex=null,u._cacheIndex=h,t[h]=u,t.pop(),this._removeInactiveBindingsForAction(l)}delete n[i]}}uncacheRoot(e){let t=e.uuid,i=this._actionsByClip;for(let n in i){let r=i[n].actionByRoot,a=r[t];void 0!==a&&(this._deactivateAction(a),this._removeInactiveAction(a))}let s=this._bindingsByRootAndName,o=s[t];if(void 0!==o)for(let l in o){let h=o[l];h.restoreOriginalState(),this._removeInactiveBinding(h)}}uncacheAction(e,t){let i=this.existingAction(e,t);null!==i&&(this._deactivateAction(i),this._removeInactiveAction(i))}}class uZ{constructor(e){this.value=e}clone(){return new uZ(void 0===this.value.clone?this.value:this.value.clone())}}let uJ=0;class uK extends t2{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:uJ++}),this.name="",this.usage=tj,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){let t=this.uniforms.indexOf(e);return -1!==t&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(e){this.name=e.name,this.usage=e.usage;let t=e.uniforms;this.uniforms.length=0;for(let i=0,n=t.length;i<n;i++)this.uniforms.push(t[i].clone());return this}clone(){return new this.constructor().copy(this)}}class u$ extends s3{constructor(e,t,i=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){let t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){let t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class uQ{constructor(e,t,i,n,r){this.isGLBufferAttribute=!0,this.buffer=e,this.type=t,this.itemSize=i,this.elementSize=n,this.count=r,this.version=0}set needsUpdate(e){!0===e&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}class u0{constructor(e,t,i=0,n=1/0){this.ray=new nh(e,t),this.near=i,this.far=n,this.camera=null,this.layers=new nM,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,i=[]){return u3(e,this,i,t),i.sort(u1),i}intersectObjects(e,t=!0,i=[]){for(let n=0,r=e.length;n<r;n++)u3(e[n],this,i,t);return i.sort(u1),i}}function u1(e,t){return e.distance-t.distance}function u3(e,t,i,n){if(e.layers.test(t.layers)&&e.raycast(t,i),!0===n){let r=e.children;for(let a=0,s=r.length;a<s;a++)u3(r[a],t,i,!0)}}class u2{constructor(e=1,t=0,i=0){return this.radius=e,this.phi=t,this.theta=i,this}set(e,t,i){return this.radius=e,this.phi=t,this.theta=i,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,i){return this.radius=Math.sqrt(e*e+t*t+i*i),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,i),this.phi=Math.acos(t9(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class u4{constructor(e=1,t=0,i=0){return this.radius=e,this.theta=t,this.y=i,this}set(e,t,i){return this.radius=e,this.theta=t,this.y=i,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,i){return this.radius=Math.sqrt(e*e+i*i),this.theta=Math.atan2(e,i),this.y=t,this}clone(){return new this.constructor().copy(this)}}let u5=new ic;class u6{constructor(e=new ic(Infinity,Infinity),t=new ic(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){let i=u5.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=Infinity,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x)&&!(e.x>this.max.x)&&!(e.y<this.min.y)&&!(e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x)&&!(e.min.x>this.max.x)&&!(e.max.y<this.min.y)&&!(e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){let t=u5.copy(e).clamp(this.min,this.max);return t.sub(e).length()}intersect(e){return this.min.max(e.min),this.max.min(e.max),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}let u7=new iH,u8=new iH;class u9{constructor(e=new iH,t=new iH){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){u7.subVectors(e,this.start),u8.subVectors(this.end,this.start);let i=u8.dot(u8),n=u8.dot(u7),r=n/i;return t&&(r=t9(r,0,1)),r}closestPointToPoint(e,t,i){let n=this.closestPointToPointParameter(e,t);return this.delta(i).multiplyScalar(n).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}let ce=new iH;class ct extends nO{constructor(e,t){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t;let i=new rs,n=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let r=0,a=1;r<32;r++,a++){let s=r/32*Math.PI*2,o=a/32*Math.PI*2;n.push(Math.cos(s),Math.sin(s),1,Math.cos(o),Math.sin(o),1)}i.setAttribute("position",new n7(n,3));let l=new oP({fog:!1,toneMapped:!1});this.cone=new ok(i,l),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateMatrixWorld();let e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),ce.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(ce),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}let ci=new iH,cn=new nu,cr=new nu;class ca extends ok{constructor(e){let t=function e(t){let i=[];!0===t.isBone&&i.push(t);for(let n=0;n<t.children.length;n++)i.push.apply(i,e(t.children[n]));return i}(e),i=new rs,n=[],r=[],a=new iC(0,0,1),s=new iC(0,1,0);for(let o=0;o<t.length;o++){let l=t[o];l.parent&&l.parent.isBone&&(n.push(0,0,0),n.push(0,0,0),r.push(a.r,a.g,a.b),r.push(s.r,s.g,s.b))}i.setAttribute("position",new n7(n,3)),i.setAttribute("color",new n7(r,3));let h=new oP({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(i,h),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){let t=this.bones,i=this.geometry,n=i.getAttribute("position");cr.copy(this.root.matrixWorld).invert();for(let r=0,a=0;r<t.length;r++){let s=t[r];s.parent&&s.parent.isBone&&(cn.multiplyMatrices(cr,s.matrixWorld),ci.setFromMatrixPosition(cn),n.setXYZ(a,ci.x,ci.y,ci.z),cn.multiplyMatrices(cr,s.parent.matrixWorld),ci.setFromMatrixPosition(cn),n.setXYZ(a+1,ci.x,ci.y,ci.z),a+=2)}i.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}}class cs extends rw{constructor(e,t,i){let n=new l4(t,4,2),r=new nZ({wireframe:!0,fog:!1,toneMapped:!1});super(n,r),this.light=e,this.light.updateMatrixWorld(),this.color=i,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}let co=new iH,cl=new iC,ch=new iC;class cu extends nO{constructor(e,t,i){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=i;let n=new l1(t);n.rotateY(.5*Math.PI),this.material=new nZ({wireframe:!0,fog:!1,toneMapped:!1}),void 0===this.color&&(this.material.vertexColors=!0);let r=n.getAttribute("position"),a=new Float32Array(3*r.count);n.setAttribute("color",new n$(a,3)),this.add(new rw(n,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){let e=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{let t=e.geometry.getAttribute("color");cl.copy(this.light.color),ch.copy(this.light.groundColor);for(let i=0,n=t.count;i<n;i++){let r=i<n/2?cl:ch;t.setXYZ(i,r.r,r.g,r.b)}t.needsUpdate=!0}e.lookAt(co.setFromMatrixPosition(this.light.matrixWorld).negate())}}class cc extends ok{constructor(e=10,t=10,i=4473924,n=8947848){i=new iC(i),n=new iC(n);let r=t/2,a=e/t,s=e/2,o=[],l=[];for(let h=0,u=0,c=-s;h<=t;h++,c+=a){o.push(-s,0,c,s,0,c),o.push(c,0,-s,c,0,s);let d=h===r?i:n;d.toArray(l,u),u+=3,d.toArray(l,u),u+=3,d.toArray(l,u),u+=3,d.toArray(l,u),u+=3}let p=new rs;p.setAttribute("position",new n7(o,3)),p.setAttribute("color",new n7(l,3));let f=new oP({vertexColors:!0,toneMapped:!1});super(p,f),this.type="GridHelper"}}class cd extends ok{constructor(e=10,t=16,i=8,n=64,r=4473924,a=8947848){r=new iC(r),a=new iC(a);let s=[],o=[];if(t>1)for(let l=0;l<t;l++){let h=l/t*(2*Math.PI),u=Math.sin(h)*e,c=Math.cos(h)*e;s.push(0,0,0),s.push(u,0,c);let d=1&l?r:a;o.push(d.r,d.g,d.b),o.push(d.r,d.g,d.b)}for(let p=0;p<i;p++){let f=1&p?r:a,m=e-e/i*p;for(let g=0;g<n;g++){let v=g/n*(2*Math.PI),x=Math.sin(v)*m,_=Math.cos(v)*m;s.push(x,0,_),o.push(f.r,f.g,f.b),x=Math.sin(v=(g+1)/n*(2*Math.PI))*m,_=Math.cos(v)*m,s.push(x,0,_),o.push(f.r,f.g,f.b)}}let y=new rs;y.setAttribute("position",new n7(s,3)),y.setAttribute("color",new n7(o,3));let M=new oP({vertexColors:!0,toneMapped:!1});super(y,M),this.type="PolarGridHelper"}}let cp=new iH,cf=new iH,cm=new iH;class cg extends nO{constructor(e,t,i){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=i,void 0===t&&(t=1);let n=new rs;n.setAttribute("position",new n7([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));let r=new oP({fog:!1,toneMapped:!1});this.lightPlane=new oU(n,r),this.add(this.lightPlane),(n=new rs).setAttribute("position",new n7([0,0,0,0,0,1],3)),this.targetLine=new oU(n,r),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){cp.setFromMatrixPosition(this.light.matrixWorld),cf.setFromMatrixPosition(this.light.target.matrixWorld),cm.subVectors(cf,cp),this.lightPlane.lookAt(cf),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(cf),this.targetLine.scale.z=cm.length()}}let cv=new iH,cx=new rP;class c_ extends ok{constructor(e){let t=new rs,i=new oP({color:16777215,vertexColors:!0,toneMapped:!1}),n=[],r=[],a={};function s(e,t){o(e),o(t)}function o(e){n.push(0,0,0),r.push(0,0,0),void 0===a[e]&&(a[e]=[]),a[e].push(n.length/3-1)}s("n1","n2"),s("n2","n4"),s("n4","n3"),s("n3","n1"),s("f1","f2"),s("f2","f4"),s("f4","f3"),s("f3","f1"),s("n1","f1"),s("n2","f2"),s("n3","f3"),s("n4","f4"),s("p","n1"),s("p","n2"),s("p","n3"),s("p","n4"),s("u1","u2"),s("u2","u3"),s("u3","u1"),s("c","t"),s("p","c"),s("cn1","cn2"),s("cn3","cn4"),s("cf1","cf2"),s("cf3","cf4"),t.setAttribute("position",new n7(n,3)),t.setAttribute("color",new n7(r,3)),super(t,i),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=a,this.update();let l=new iC(16755200),h=new iC(16711680),u=new iC(43775),c=new iC(16777215),d=new iC(3355443);this.setColors(l,h,u,c,d)}setColors(e,t,i,n,r){let a=this.geometry,s=a.getAttribute("color");s.setXYZ(0,e.r,e.g,e.b),s.setXYZ(1,e.r,e.g,e.b),s.setXYZ(2,e.r,e.g,e.b),s.setXYZ(3,e.r,e.g,e.b),s.setXYZ(4,e.r,e.g,e.b),s.setXYZ(5,e.r,e.g,e.b),s.setXYZ(6,e.r,e.g,e.b),s.setXYZ(7,e.r,e.g,e.b),s.setXYZ(8,e.r,e.g,e.b),s.setXYZ(9,e.r,e.g,e.b),s.setXYZ(10,e.r,e.g,e.b),s.setXYZ(11,e.r,e.g,e.b),s.setXYZ(12,e.r,e.g,e.b),s.setXYZ(13,e.r,e.g,e.b),s.setXYZ(14,e.r,e.g,e.b),s.setXYZ(15,e.r,e.g,e.b),s.setXYZ(16,e.r,e.g,e.b),s.setXYZ(17,e.r,e.g,e.b),s.setXYZ(18,e.r,e.g,e.b),s.setXYZ(19,e.r,e.g,e.b),s.setXYZ(20,e.r,e.g,e.b),s.setXYZ(21,e.r,e.g,e.b),s.setXYZ(22,e.r,e.g,e.b),s.setXYZ(23,e.r,e.g,e.b),s.setXYZ(24,t.r,t.g,t.b),s.setXYZ(25,t.r,t.g,t.b),s.setXYZ(26,t.r,t.g,t.b),s.setXYZ(27,t.r,t.g,t.b),s.setXYZ(28,t.r,t.g,t.b),s.setXYZ(29,t.r,t.g,t.b),s.setXYZ(30,t.r,t.g,t.b),s.setXYZ(31,t.r,t.g,t.b),s.setXYZ(32,i.r,i.g,i.b),s.setXYZ(33,i.r,i.g,i.b),s.setXYZ(34,i.r,i.g,i.b),s.setXYZ(35,i.r,i.g,i.b),s.setXYZ(36,i.r,i.g,i.b),s.setXYZ(37,i.r,i.g,i.b),s.setXYZ(38,n.r,n.g,n.b),s.setXYZ(39,n.r,n.g,n.b),s.setXYZ(40,r.r,r.g,r.b),s.setXYZ(41,r.r,r.g,r.b),s.setXYZ(42,r.r,r.g,r.b),s.setXYZ(43,r.r,r.g,r.b),s.setXYZ(44,r.r,r.g,r.b),s.setXYZ(45,r.r,r.g,r.b),s.setXYZ(46,r.r,r.g,r.b),s.setXYZ(47,r.r,r.g,r.b),s.setXYZ(48,r.r,r.g,r.b),s.setXYZ(49,r.r,r.g,r.b),s.needsUpdate=!0}update(){let e=this.geometry,t=this.pointMap;cx.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),cy("c",t,e,cx,0,0,-1),cy("t",t,e,cx,0,0,1),cy("n1",t,e,cx,-1,-1,-1),cy("n2",t,e,cx,1,-1,-1),cy("n3",t,e,cx,-1,1,-1),cy("n4",t,e,cx,1,1,-1),cy("f1",t,e,cx,-1,-1,1),cy("f2",t,e,cx,1,-1,1),cy("f3",t,e,cx,-1,1,1),cy("f4",t,e,cx,1,1,1),cy("u1",t,e,cx,.7,1.1,-1),cy("u2",t,e,cx,-.7,1.1,-1),cy("u3",t,e,cx,0,2,-1),cy("cf1",t,e,cx,-1,0,1),cy("cf2",t,e,cx,1,0,1),cy("cf3",t,e,cx,0,-1,1),cy("cf4",t,e,cx,0,1,1),cy("cn1",t,e,cx,-1,0,-1),cy("cn2",t,e,cx,1,0,-1),cy("cn3",t,e,cx,0,-1,-1),cy("cn4",t,e,cx,0,1,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function cy(e,t,i,n,r,a,s){cv.set(r,a,s).unproject(n);let o=t[e];if(void 0!==o){let l=i.getAttribute("position");for(let h=0,u=o.length;h<u;h++)l.setXYZ(o[h],cv.x,cv.y,cv.z)}}let cM=new iq;class cb extends ok{constructor(e,t=16776960){let i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),n=new Float32Array(24),r=new rs;r.setIndex(new n$(i,1)),r.setAttribute("position",new n$(n,3)),super(r,new oP({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(void 0!==e&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&cM.setFromObject(this.object),cM.isEmpty())return;let t=cM.min,i=cM.max,n=this.geometry.attributes.position,r=n.array;r[0]=i.x,r[1]=i.y,r[2]=i.z,r[3]=t.x,r[4]=i.y,r[5]=i.z,r[6]=t.x,r[7]=t.y,r[8]=i.z,r[9]=i.x,r[10]=t.y,r[11]=i.z,r[12]=i.x,r[13]=i.y,r[14]=t.z,r[15]=t.x,r[16]=i.y,r[17]=t.z,r[18]=t.x,r[19]=t.y,r[20]=t.z,r[21]=i.x,r[22]=t.y,r[23]=t.z,n.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}}class cS extends ok{constructor(e,t=16776960){let i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),n=new rs;n.setIndex(new n$(i,1)),n.setAttribute("position",new n7([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),super(n,new oP({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){let t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}}class cw extends oU{constructor(e,t=1,i=16776960){let n=new rs;n.setAttribute("position",new n7([1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],3)),n.computeBoundingSphere(),super(n,new oP({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;let r=new rs;r.setAttribute("position",new n7([1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],3)),r.computeBoundingSphere(),this.add(new rw(r,new nZ({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}}let cT=new iH,cA,cE;class cC extends nO{constructor(e=new iH(0,0,1),t=new iH(0,0,0),i=1,n=16776960,r=.2*i,a=.2*r){super(),this.type="ArrowHelper",void 0===cA&&((cA=new rs).setAttribute("position",new n7([0,0,0,0,1,0],3)),(cE=new lf(0,.5,1,5,1)).translate(0,-.5,0)),this.position.copy(t),this.line=new oU(cA,new oP({color:n,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new rw(cE,new nZ({color:n,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(i,r,a)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{cT.set(e.z,0,-e.x).normalize();let t=Math.acos(e.y);this.quaternion.setFromAxisAngle(cT,t)}}setLength(e,t=.2*e,i=.2*t){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(i,t,i),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}}class cL extends ok{constructor(e=1){let t=new rs;t.setAttribute("position",new n7([0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],3)),t.setAttribute("color",new n7([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));let i=new oP({vertexColors:!0,toneMapped:!1});super(t,i),this.type="AxesHelper"}setColors(e,t,i){let n=new iC,r=this.geometry.attributes.color.array;return n.set(e),n.toArray(r,0),n.toArray(r,3),n.set(t),n.toArray(r,6),n.toArray(r,9),n.set(i),n.toArray(r,12),n.toArray(r,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class cR{constructor(){this.type="ShapePath",this.color=new iC,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new lu,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,i,n){return this.currentPath.quadraticCurveTo(e,t,i,n),this}bezierCurveTo(e,t,i,n,r,a){return this.currentPath.bezierCurveTo(e,t,i,n,r,a),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(e,t){let i=t.length,n=!1;for(let r=i-1,a=0;a<i;r=a++){let s=t[r],o=t[a],l=o.x-s.x,h=o.y-s.y;if(Math.abs(h)>Number.EPSILON){if(h<0&&(s=t[a],l=-l,o=t[r],h=-h),e.y<s.y||e.y>o.y)continue;if(e.y===s.y){if(e.x===s.x)return!0}else{let u=h*(e.x-s.x)-l*(e.y-s.y);if(0===u)return!0;if(u<0)continue;n=!n}}else{if(e.y!==s.y)continue;if(o.x<=e.x&&e.x<=s.x||s.x<=e.x&&e.x<=o.x)return!0}}return n}let i=lZ.isClockWise,n=this.subPaths;if(0===n.length)return[];let r,a,s,o=[];if(1===n.length)return a=n[0],(s=new lS).curves=a.curves,o.push(s),o;let l=!i(n[0].getPoints());l=e?!l:l;let h=[],u=[],c=[],d=0,p;u[d]=void 0,c[d]=[];for(let f=0,m=n.length;f<m;f++)r=i(p=(a=n[f]).getPoints()),(r=e?!r:r)?(!l&&u[d]&&d++,u[d]={s:new lS,p:p},u[d].s.curves=a.curves,l&&d++,c[d]=[]):c[d].push({h:a,p:p[0]});if(!u[0])return function(e){let t=[];for(let i=0,n=e.length;i<n;i++){let r=e[i],a=new lS;a.curves=r.curves,t.push(a)}return t}(n);if(u.length>1){let g=!1,v=0;for(let x=0,_=u.length;x<_;x++)h[x]=[];for(let y=0,M=u.length;y<M;y++){let b=c[y];for(let S=0;S<b.length;S++){let w=b[S],T=!0;for(let A=0;A<u.length;A++)t(w.p,u[A].p)&&(y!==A&&v++,T?(T=!1,h[A].push(w)):g=!0);T&&h[y].push(w)}}v>0&&!1===g&&(c=h)}let E;for(let C=0,L=u.length;C<L;C++){s=u[C].s,o.push(s),E=c[C];for(let R=0,P=E.length;R<P;R++)s.holes.push(E[R].h)}return o}}let cP=function(){let e=new ArrayBuffer(4),t=new Float32Array(e),i=new Uint32Array(e),n=new Uint32Array(512),r=new Uint32Array(512);for(let a=0;a<256;++a){let s=a-127;s<-27?(n[a]=0,n[256|a]=32768,r[a]=24,r[256|a]=24):s<-14?(n[a]=1024>>-s-14,n[256|a]=1024>>-s-14|32768,r[a]=-s-1,r[256|a]=-s-1):s<=15?(n[a]=s+15<<10,n[256|a]=s+15<<10|32768,r[a]=13,r[256|a]=13):s<128?(n[a]=31744,n[256|a]=64512,r[a]=24,r[256|a]=24):(n[a]=31744,n[256|a]=64512,r[a]=13,r[256|a]=13)}let o=new Uint32Array(2048),l=new Uint32Array(64),h=new Uint32Array(64);for(let u=1;u<1024;++u){let c=u<<13,d=0;for(;(8388608&c)==0;)c<<=1,d-=8388608;c&=-8388609,d+=947912704,o[u]=c|d}for(let p=1024;p<2048;++p)o[p]=939524096+(p-1024<<13);for(let f=1;f<31;++f)l[f]=f<<23;l[31]=1199570944,l[32]=2147483648;for(let m=33;m<63;++m)l[m]=2147483648+(m-32<<23);l[63]=3347054592;for(let g=1;g<64;++g)32!==g&&(h[g]=1024);return{floatView:t,uint32View:i,baseTable:n,shiftTable:r,mantissaTable:o,exponentTable:l,offsetTable:h}}();var cI=Object.freeze({__proto__:null,toHalfFloat:function(e){Math.abs(e)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),e=t9(e,-65504,65504),cP.floatView[0]=e;let t=cP.uint32View[0],i=t>>23&511;return cP.baseTable[i]+((8388607&t)>>cP.shiftTable[i])},fromHalfFloat:function(e){let t=e>>10;return cP.uint32View[0]=cP.mantissaTable[cP.offsetTable[t]+(1023&e)]+cP.exponentTable[t],cP.floatView[0]}});function cD(){console.error("THREE.ImmediateRenderObject has been removed.")}class cN extends iz{constructor(e,t,i){console.error('THREE.WebGLMultisampleRenderTarget has been removed. Use a normal render target and set the "samples" property to greater 0 to enable multisampling.'),super(e,t,i),this.samples=4}}class cO extends iU{constructor(e,t,i,n){console.warn("THREE.DataTexture2DArray has been renamed to DataArrayTexture."),super(e,t,i,n)}}class cz extends iF{constructor(e,t,i,n){console.warn("THREE.DataTexture3D has been renamed to Data3DTexture."),super(e,t,i,n)}}class cU extends rA{constructor(e,t,i,n,r,a){console.warn("THREE.BoxBufferGeometry has been renamed to THREE.BoxGeometry."),super(e,t,i,n,r,a)}}class cB extends ld{constructor(e,t,i,n){console.warn("THREE.CapsuleBufferGeometry has been renamed to THREE.CapsuleGeometry."),super(e,t,i,n)}}class cF extends lp{constructor(e,t,i,n){console.warn("THREE.CircleBufferGeometry has been renamed to THREE.CircleGeometry."),super(e,t,i,n)}}class ck extends lm{constructor(e,t,i,n,r,a,s){console.warn("THREE.ConeBufferGeometry has been renamed to THREE.ConeGeometry."),super(e,t,i,n,r,a,s)}}class cG extends lf{constructor(e,t,i,n,r,a,s,o){console.warn("THREE.CylinderBufferGeometry has been renamed to THREE.CylinderGeometry."),super(e,t,i,n,r,a,s,o)}}class cV extends lv{constructor(e,t){console.warn("THREE.DodecahedronBufferGeometry has been renamed to THREE.DodecahedronGeometry."),super(e,t)}}class cH extends l${constructor(e,t){console.warn("THREE.ExtrudeBufferGeometry has been renamed to THREE.ExtrudeGeometry."),super(e,t)}}class cW extends l0{constructor(e,t){console.warn("THREE.IcosahedronBufferGeometry has been renamed to THREE.IcosahedronGeometry."),super(e,t)}}class cj extends lc{constructor(e,t,i,n){console.warn("THREE.LatheBufferGeometry has been renamed to THREE.LatheGeometry."),super(e,t,i,n)}}class cq extends l1{constructor(e,t){console.warn("THREE.OctahedronBufferGeometry has been renamed to THREE.OctahedronGeometry."),super(e,t)}}class cX extends rj{constructor(e,t,i,n){console.warn("THREE.PlaneBufferGeometry has been renamed to THREE.PlaneGeometry."),super(e,t,i,n)}}class cY extends lg{constructor(e,t,i,n){console.warn("THREE.PolyhedronBufferGeometry has been renamed to THREE.PolyhedronGeometry."),super(e,t,i,n)}}class cZ extends l3{constructor(e,t,i,n,r,a){console.warn("THREE.RingBufferGeometry has been renamed to THREE.RingGeometry."),super(e,t,i,n,r,a)}}class cJ extends l2{constructor(e,t){console.warn("THREE.ShapeBufferGeometry has been renamed to THREE.ShapeGeometry."),super(e,t)}}class cK extends l4{constructor(e,t,i,n,r,a,s){console.warn("THREE.SphereBufferGeometry has been renamed to THREE.SphereGeometry."),super(e,t,i,n,r,a,s)}}class c$ extends l5{constructor(e,t){console.warn("THREE.TetrahedronBufferGeometry has been renamed to THREE.TetrahedronGeometry."),super(e,t)}}class cQ extends l6{constructor(e,t,i,n,r){console.warn("THREE.TorusBufferGeometry has been renamed to THREE.TorusGeometry."),super(e,t,i,n,r)}}class c0 extends l7{constructor(e,t,i,n,r,a){console.warn("THREE.TorusKnotBufferGeometry has been renamed to THREE.TorusKnotGeometry."),super(e,t,i,n,r,a)}}class c1 extends l8{constructor(e,t,i,n,r){console.warn("THREE.TubeBufferGeometry has been renamed to THREE.TubeGeometry."),super(e,t,i,n,r)}}"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:n}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=n)}}]);